# I'm using user form feature for all the data entry process

# (A) User logs in to the system by entering username and password (This step applies in all type of users)
The coding for log in userform was made by www.thedatalabs.org

Private Sub cmdClear_Click()

    Me.txtUserID.Value = ""
    Me.txtPassword.Value = ""
    
    Me.txtUserID.SetFocus
    
    'Code to exit- Please remove the comments if you want to use it exit
'    Unload Me
'    ThisWorkbook.Close Savechanges:=False
'    Application.Visible = True
    

End Sub

Private Sub cmdLogin_Click()

    Dim user As String
    
    Dim password As String
    
    user = Me.txtUserID.Value
    
    password = Me.txtPassword.Value
    
    If (user = "admin" And password = "admin") Or (user = "user" And password = "user") Then
    
        Unload Me
        Application.Visible = True
        
    Else
    
        If LoginInstance < 3 Then
        
            MsgBox "Invalid login credentials. Please try again.", vbOKOnly + vbCritical, "Invalid Login Details"
            LoginInstance = LoginInstance + 1
            
        Else
        
            MsgBox "You have exceeded the maximum number of login attempts.", vbOKOnly + vbCritical, "Invalid Credentials"
            Unload Me
            ThisWorkbook.Close Savechanges:=False
            Application.Visible = True
            LoginInstance = 0
            
        End If
    
    End If
    
End Sub



Private Sub UserForm_Initialize()

    Me.txtUserID.Value = ""
    Me.txtPassword.Value = ""
    
    Me.txtUserID.SetFocus

End Sub




Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

    If CloseMode = 0 Then Cancel = True

End Sub
``````````````````````````````````````````````````````````````````````````````````````````````
# (B) Operation:
``````````````````````````````````````````````````````````````````````````````````````````````
# (B1) Rig Data Entry:
Module:

Option Explicit
Sub Reset()

    Dim iRow As Long
    
    iRow = [Counta(Rig!A:A)] ' idetifying the last row
    
    With FormRig
    
        .txtNamaRig.Value = ""
        .optOnshore.Value = False
        .optOffshore.Value = False
        .txtDayaHP.Value = ""
        .txtTahunRig.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtNamaRig.BackColor = vbWhite
        .txtDayaHP.BackColor = vbWhite
        .txtTahunRig.BackColor = vbWhite
        '--------------------------------

        '-----------------------------------------------
        
        .listDatabaseRig.ColumnCount = 7
        .listDatabaseRig.ColumnHeads = True
        
        .listDatabaseRig.ColumnWidths = "30,60,60,45,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseRig.RowSource = "Rig!A2:G" & iRow
        Else
        
            .listDatabaseRig.RowSource = "Rig!A2:G2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_Form()
    
    FormRig.Show

End Sub

Sub Submit()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Rig")
    
    If FormRig.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Rig!A:A)] + 1
    Else
    
        iRow = FormRig.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormRig.txtNamaRig.Value
        
        .Cells(iRow, 3) = IIf(FormRig.optOnshore.Value = True, "Onshore", "Offshore")
        
        .Cells(iRow, 4) = FormRig.txtDayaHP.Value
        
        .Cells(iRow, 5) = FormRig.txtTahunRig.Value
        
        .Cells(iRow, 6) = Application.UserName
        
        .Cells(iRow, 7) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntries() As Boolean

    ValidateEntries = True
    
    Dim iNamaRig As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Rig")
        
    iNamaRig = FormRig.txtNamaRig.Value
    
    With FormRig
    
        'Default Color
        
        .txtNamaRig.BackColor = vbWhite
        .txtDayaHP.BackColor = vbWhite
        .txtTahunRig.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtNamaRig.Value) = "" Then
        
            MsgBox "Masukkan nama rig", vbOKOnly + vbInformation, "Nama Rig"
            ValidateEntries = False
            .txtNamaRig.BackColor = vbRed
            .txtNamaRig.SetFocus
            Exit Function
            
        End If
    
        
        'Validating Gender
        
        
        If .optOnshore.Value = False And .optOffshore.Value = False Then
            
            MsgBox "Pilih jenis rig", vbOKOnly + vbInformation, "Jenis Rig"
            ValidateEntries = False
            Exit Function
        
        End If
        
        
         If Trim(.txtDayaHP.Value) = "" Then
        
            MsgBox "Masukkan daya HP", vbOKOnly + vbInformation, "Daya HP"
            ValidateEntries = False
            .txtDayaHP.BackColor = vbRed
            .txtDayaHP.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTahunRig.Value) = "" Then
        
            MsgBox "Masukkan tahun rig", vbOKOnly + vbInformation, "Tahun Rig"
            ValidateEntries = False
            .txtTahunRig.BackColor = vbRed
            .txtTahunRig.SetFocus
            Exit Function
            
        End If
        
    
    
    End With



End Function


Function Selected_List() As Long

    Dim i As Long
    
    Selected_List = 0
    
    For i = 0 To FormRig.listDatabaseRig.ListCount - 1
        
        If FormRig.listDatabaseRig.Selected(i) = True Then
        
            Selected_List = i + 1
            Exit For
        End If
        
    Next i


End Function
``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_List = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseRig.List(Me.listDatabaseRig.ListIndex, 0), ThisWorkbook.Sheets("Rig").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Rig").Rows(iRow).Delete
    
    Call Reset
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_List = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    Dim sGender As String
    
    Me.txtRowNumber.Value = Selected_List + 1
    
    Me.txtNamaRig.Value = Me.listDatabaseRig.List(Me.listDatabaseRig.ListIndex, 1)
    
    sGender = Me.listDatabaseRig.List(Me.listDatabaseRig.ListIndex, 2)
    
    If sGender = "Female" Then
    
        Me.optOnshore.Value = True
    Else
    
        Me.optOffshore.Value = True
        
    End If
    
    Me.txtDayaHP.Value = Me.listDatabaseRig.List(Me.listDatabaseRig.ListIndex, 3)
    
    Me.txtTahunRig.Value = Me.listDatabaseRig.List(Me.listDatabaseRig.ListIndex, 4)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call Reset
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntries() = True Then
    
        Call Submit
        Call Reset
    End If
    
End Sub



Private Sub UserForm_Initialize()

    Call Reset

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (B2) Client Data Entry:
Module:
Option Explicit
Sub ResetClient()

    Dim iRow As Long
    
    iRow = [Counta(Client!A:A)] ' idetifying the last row
    
    With FormClient
    
        .txtNamaClient.Value = ""
        .txtEmailClient.Value = ""
        .txtFaxClient.Value = ""
        
        'Default Color
        
        .txtNamaClient.BackColor = vbWhite
        .txtEmailClient.BackColor = vbWhite
        .txtFaxClient.BackColor = vbWhite
        '--------------------------------

        '-----------------------------------------------
        .txtRowNumber.Value = ""
        .listDatabaseClient.ColumnCount = 6
        .listDatabaseClient.ColumnHeads = True
        
        .listDatabaseClient.ColumnWidths = "60,60,60,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseClient.RowSource = "Client!A2:F" & iRow
        Else
        
            .listDatabaseClient.RowSource = "Client!A2:F2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormClient()

FormClient.Show


End Sub

Sub SubmitClient()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Client")
    
    If FormClient.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Client!A:A)] + 1
    Else
    
        iRow = FormClient.txtRowNumber.Value
        
    End If
    
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormClient.txtNamaClient.Value
        
        .Cells(iRow, 3) = FormClient.txtEmailClient.Value
        
        .Cells(iRow, 4) = FormClient.txtFaxClient.Value
        
        .Cells(iRow, 5) = Application.UserName
        
        .Cells(iRow, 6) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesClient() As Boolean

    ValidateEntriesClient = True
    
    Dim iNamaClient As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Client")
        
    iNamaClient = FormClient.txtNamaClient.Value
    
    With FormClient
    
        'Default Color
        
        .txtNamaClient.BackColor = vbWhite
        .txtEmailClient.BackColor = vbWhite
        .txtFaxClient.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtNamaClient.Value) = "" Then
        
            MsgBox "Masukkan nama client", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesClient = False
            .txtNamaClient.BackColor = vbRed
            .txtNamaClient.SetFocus
            Exit Function
            
        End If
          
        
         If Trim(.txtEmailClient.Value) = "" Then
        
            MsgBox "Masukkan email client", vbOKOnly + vbInformation, "Email Client"
            ValidateEntriesClient = False
            .txtEmailClient.BackColor = vbRed
            .txtEmailClient.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtFaxClient.Value) = "" Then
        
            MsgBox "Masukkan fax client", vbOKOnly + vbInformation, "Fax Client"
            ValidateEntriesClient = False
            .txtFaxClient.BackColor = vbRed
            .txtFaxClient.SetFocus
            Exit Function
            
        End If
        
    
    
    End With



End Function


Function Selected_ListClient() As Long

    Dim i As Long
    
    Selected_ListClient = 0
    
    For i = 0 To FormClient.listDatabaseClient.ListCount - 1
        
        If FormClient.listDatabaseClient.Selected(i) = True Then
        
            Selected_ListClient = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:
Option Explicit


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListClient = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseClient.List(Me.listDatabaseClient.ListIndex, 0), ThisWorkbook.Sheets("Client").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Client").Rows(iRow).Delete
    
    Call ResetClient
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListClient = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    
    Me.txtRowNumber.Value = Selected_ListClient + 1
    
    Me.txtNamaClient.Value = Me.listDatabaseClient.List(Me.listDatabaseClient.ListIndex, 1)

    Me.txtEmailClient.Value = Me.listDatabaseClient.List(Me.listDatabaseClient.ListIndex, 2)
    
    Me.txtFaxClient.Value = Me.listDatabaseClient.List(Me.listDatabaseClient.ListIndex, 3)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetClient
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesClient() = True Then
    
        Call SubmitClient
        Call ResetClient
    End If
End Sub



Private Sub UserForm_Initialize()

    Call ResetClient

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (B3) Sumur Data Entry:
Module:
Option Explicit
Sub ResetSumur()

    Dim iRow As Long
    
    iRow = [Counta(Sumur!A:A)] ' idetifying the last row
    
    With FormSumur
    
        .txtNamaSumur.Value = ""
        .cmbNamaRig.Value = ""
        .cmbNamaClient.Value = ""
        .optWS.Value = False
        .optWO.Value = False
        .optDEV.Value = False
        .optEKS.Value = False
        .txtZonaSumur.Value = ""
        .txtRegionalSumur.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtNamaSumur.BackColor = vbWhite
        .txtZonaSumur.BackColor = vbWhite
        .txtRegionalSumur.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        shRig.Range("B2", shRig.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicRig"
        
        .cmbNamaRig.RowSource = "DynamicRig"
        
        shClient.Range("B2", shClient.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicClient"
        
        .cmbNamaClient.RowSource = "DynamicClient"

        '-----------------------------------------------
        
        .listDatabaseSumur.ColumnCount = 9
        .listDatabaseSumur.ColumnHeads = True
        
        .listDatabaseSumur.ColumnWidths = "30,60,60,60,30,30,30,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseSumur.RowSource = "Sumur!A2:I" & iRow
        Else
        
            .listDatabaseSumur.RowSource = "Sumur!A2:I2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormSumur()
    
    FormSumur.Show

End Sub

Sub SubmitSumur()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Sumur")
    
    If FormSumur.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Sumur!A:A)] + 1
    Else
    
        iRow = FormSumur.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormSumur.txtNamaSumur.Value
        
        .Cells(iRow, 3) = FormSumur.cmbNamaRig.Value
        
        .Cells(iRow, 4) = FormSumur.cmbNamaClient.Value
        
        .Cells(iRow, 5) = IIf(FormSumur.optWS.Value = True, "WS", IIf(FormSumur.optWO.Value = True, "WO", IIf(FormSumur.optDEV.Value = True, "DEV", "EKS")))
        
        .Cells(iRow, 6) = FormSumur.txtZonaSumur.Value
        
        .Cells(iRow, 7) = FormSumur.txtRegionalSumur.Value
        
        .Cells(iRow, 8) = Application.UserName
        
        .Cells(iRow, 9) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesSumur() As Boolean

    ValidateEntriesSumur = True
    
    Dim iNamaSumur As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Sumur")
        
    iNamaSumur = FormSumur.txtNamaSumur.Value
    
    With FormSumur
    
        'Default Color
        
        .txtNamaSumur.BackColor = vbWhite
        .txtZonaSumur.BackColor = vbWhite
        .txtRegionalSumur.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtNamaSumur.Value) = "" Then
        
            MsgBox "Masukkan nama sumur", vbOKOnly + vbInformation, "Nama sumur"
            ValidateEntriesSumur = False
            .txtNamaSumur.BackColor = vbRed
            .txtNamaSumur.SetFocus
            Exit Function
            
        End If
    
        
        'Validating Jenis Sumur
        
        
        If .optWS.Value = False And .optWO.Value = False And .optDEV.Value = False And .optEKS.Value = False Then
            
            MsgBox "Pilih jenis sumur", vbOKOnly + vbInformation, "Jenis Sumur"
            ValidateEntriesSumur = False
            Exit Function
        
        End If
        
        
         If Trim(.txtZonaSumur.Value) = "" Then
        
            MsgBox "Masukkan zona sumur", vbOKOnly + vbInformation, "Zona Sumur"
            ValidateEntriesSumur = False
            .txtZonaSumur.BackColor = vbRed
            .txtZonaSumur.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtRegionalSumur.Value) = "" Then
        
            MsgBox "Masukkan regional sumur", vbOKOnly + vbInformation, "Regional Sumur"
            ValidateEntriesSumur = False
            .txtRegionalSumur.BackColor = vbRed
            .txtRegionalSumur.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaRig.Value) = "" Then
        
            MsgBox "Please select rig from drop-down.", vbOKOnly + vbInformation, "Nama Rig"
            ValidateEntriesSumur = False
            .cmbNamaRig.BackColor = vbRed
            .cmbNamaRig.SetFocus
            Exit Function
            
        End If
    
            If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Please select client from drop-down.", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesSumur = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
    
    End With



End Function


Function Selected_ListSumur() As Long

    Dim i As Long
    
    Selected_ListSumur = 0
    
    For i = 0 To FormSumur.listDatabaseSumur.ListCount - 1
        
        If FormSumur.listDatabaseSumur.Selected(i) = True Then
        
            Selected_ListSumur = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:
Option Explicit



Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListSumur = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseSumur.List(Me.listDatabaseSumur.ListIndex, 0), ThisWorkbook.Sheets("Sumur").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Sumur").Rows(iRow).Delete
    
    Call ResetSumur
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListSumur = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    Dim sJenisSumur As String
    
    Me.txtRowNumber.Value = Selected_ListSumur + 1
    
    Me.txtNamaSumur.Value = Me.listDatabaseSumur.List(Me.listDatabaseSumur.ListIndex, 1)
    
    sJenisSumur = Me.listDatabaseSumur.List(Me.listDatabaseSumur.ListIndex, 4)
    
    If sJenisSumur = "WS" Then
        Me.optWS.Value = True
    End If
    
    If sJenisSumur = "WO" Then
        Me.optWO.Value = True
    End If
    
    If sJenisSumur = "DEV" Then
        Me.optDEV.Value = True
    End If
        
    If sJenisSumur = "EKS" Then
        Me.optEKS.Value = True
    End If

    Me.txtZonaSumur.Value = Me.listDatabaseSumur.List(Me.listDatabaseSumur.ListIndex, 5)
    
    Me.txtRegionalSumur.Value = Me.listDatabaseSumur.List(Me.listDatabaseSumur.ListIndex, 6)
    
    Me.cmbNamaRig.Value = Me.listDatabaseSumur.List(Me.listDatabaseSumur.ListIndex, 2)
    
    Me.cmbNamaClient.Value = Me.listDatabaseSumur.List(Me.listDatabaseSumur.ListIndex, 3)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetSumur
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesSumur() = True Then
    
        Call SubmitSumur
        Call ResetSumur
    End If
    
End Sub



Private Sub UserForm_Initialize()

    Call ResetSumur

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (B4) Operasi Data Entry:
Module:
Option Explicit
Sub ResetOperasi()

    Dim iRow As Long
    
    iRow = [Counta(Operasi!A:A)] ' idetifying the last row
    
    With FormOperasi
    
        .txtIDOperasi.Value = ""
        .txtTanggalOperasi.Value = ""
        .cmbNamaRig.Value = ""
        .cmbNamaSumur.Value = ""
        .txtOperasi.Value = ""
        .txtSiagaWithCrew.Value = ""
        .txtSiagaWithoutCrew.Value = ""
        .txtRDRMRU.Value = ""
        .txtMOBDEMOB.Value = ""
        .txtPerbaikanAlatDibayar.Value = ""
        .txtPerbaikanAlatTidakDibayar.Value = ""
        .txtDendaRDRMRU.Value = ""
        .txtDendaAlatRusak24Jam.Value = ""
        .txtDendaNUNDBOPTestBPM.Value = ""
        .txtKondisiKahar.Value = ""
        .txtProsesSiloIdleTidakDibayar.Value = ""
        .txtKetDendaRig.Value = ""
        .txtKetDowntimeRig.Value = ""

        
        'Default Color
        
        .txtIDOperasi.BackColor = vbWhite
        .txtTanggalOperasi.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaSumur.BackColor = vbWhite
        .txtOperasi.BackColor = vbWhite
        .txtSiagaWithCrew.BackColor = vbWhite
        .txtSiagaWithoutCrew.BackColor = vbWhite
        .txtRDRMRU.BackColor = vbWhite
        .txtMOBDEMOB.BackColor = vbWhite
        .txtPerbaikanAlatDibayar.BackColor = vbWhite
        .txtPerbaikanAlatTidakDibayar.BackColor = vbWhite
        .txtDendaRDRMRU.BackColor = vbWhite
        .txtDendaAlatRusak24Jam.BackColor = vbWhite
        .txtDendaNUNDBOPTestBPM.BackColor = vbWhite
        .txtKondisiKahar.BackColor = vbWhite
        .txtProsesSiloIdleTidakDibayar.BackColor = vbWhite
        .txtKetDendaRig.BackColor = vbWhite
        .txtKetDowntimeRig.BackColor = vbWhite
        .txtRowNumber.Value = vbWhite

        '--------------------------------
        shRig.Range("B2", shRig.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicRig"
        
        .cmbNamaRig.RowSource = "DynamicRig"
        
        shSumur.Range("B2", shSumur.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicSumur"
        
        .cmbNamaSumur.RowSource = "DynamicSumur"
        
        .cmbKetRigIdle.Clear
        
        .cmbKetRigIdle.AddItem "Maintenance & perbaikan peralatan"
        .cmbKetRigIdle.AddItem "Inspeksi, closing temuan & sertifikasi PLO"
        .cmbKetRigIdle.AddItem "Persiapan moving rig & tunggu armada"
        .cmbKetRigIdle.AddItem "Pergantian menara & substruct"
        .cmbKetRigIdle.AddItem "Rig safety check list"
        .cmbKetRigIdle.AddItem "Tunggu program sumur selanjutnya"
        .cmbKetRigIdle.AddItem "Tunggu  perintah moving (ARS, SIKA)"
        .cmbKetRigIdle.AddItem "Tunggu pembuatan & Perbaikan jalan jalur moving"
        .cmbKetRigIdle.AddItem "Tunggu kesiapan lokasi"
        .cmbKetRigIdle.AddItem "Antisipasi penyebaran  Covid-19"
        .cmbKetRigIdle.AddItem "Tidak ada aktivitas malam hari"

        '-----------------------------------------------
        .txtRowNumber.Value = ""
        .listDatabaseOperasi.ColumnCount = 28
        .listDatabaseOperasi.ColumnHeads = True
        
        .listDatabaseOperasi.ColumnWidths = "30,60,60,60,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        If iRow > 1 Then
        
            .listDatabaseOperasi.RowSource = "Operasi!A2:AB" & iRow
        Else
        
            .listDatabaseOperasi.RowSource = "Operasi!A2:AB2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormOperasi()

FormOperasi.Show


End Sub

Sub SubmitOperasi()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Operasi")
    
    If FormOperasi.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Operasi!A:A)] + 1
    Else
    
        iRow = FormOperasi.txtRowNumber.Value
        
    End If
    
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormOperasi.txtIDOperasi.Value
        
        .Cells(iRow, 3) = FormOperasi.txtTanggalOperasi.Value
        
        .Cells(iRow, 4) = FormOperasi.cmbNamaRig.Value
        
        .Cells(iRow, 5) = FormOperasi.cmbNamaSumur.Value
        
        .Cells(iRow, 6) = FormOperasi.txtOperasi.Value
        
        .Cells(iRow, 7) = FormOperasi.txtSiagaWithCrew.Value
        
        .Cells(iRow, 8) = FormOperasi.txtSiagaWithoutCrew.Value
        
        .Cells(iRow, 9) = FormOperasi.txtRDRMRU.Value

        .Cells(iRow, 10) = FormOperasi.txtMOBDEMOB.Value
        
        .Cells(iRow, 11) = FormOperasi.txtPerbaikanAlatDibayar.Value
        
        .Cells(iRow, 12) = FormOperasi.txtPerbaikanAlatTidakDibayar.Value

        .Cells(iRow, 13) = FormOperasi.txtDendaRDRMRU.Value
        
        .Cells(iRow, 14) = FormOperasi.txtDendaAlatRusak24Jam.Value
        
        .Cells(iRow, 15) = FormOperasi.txtDendaNUNDBOPTestBPM.Value
        
        .Cells(iRow, 16) = FormOperasi.txtKondisiKahar.Value
        
        .Cells(iRow, 17) = FormOperasi.txtProsesSiloIdleTidakDibayar.Value
        
        .Cells(iRow, 23) = FormOperasi.txtKetDendaRig.Value
        
        .Cells(iRow, 24) = FormOperasi.txtKetDowntimeRig.Value
        
        .Cells(iRow, 25) = FormOperasi.cmbKetRigIdle.Value
        
        .Cells(iRow, 27) = Application.UserName
        
        .Cells(iRow, 28) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lr As Integer
lr = Application.WorksheetFunction.CountA(shOperasi.Range("A:A"))

'''' Put the formula
If lr > 1 Then
    shOperasi.Range("R2").Value = "=SUM(F2:Q2)"
    shOperasi.Range("S2").Value = "=((R2-(K2+L2+N2))/R2)*100"
    shOperasi.Range("T2").Value = "=((F2+G2+H2+I2+J2)/R2)*100"
    shOperasi.Range("U2").Value = "=((F2+(G2*85%)+(H2*0%)+(I2*85%)+(J2*85%)+(K2*0%))-((O2*25%)+(M2*25%)+(N2*25%)))/R2*100"
    shOperasi.Range("V2").Value = "=(SUM(K2:L2,N2:O2)/SUM(F2:H2,K2:L2,N2:O2)*100)"
    
    If lr > 2 Then
    shOperasi.Range("R2:V" & lr).FillDown
    End If
    shOperasi.Calculate
    shOperasi.UsedRange.Copy
    shOperasi.UsedRange.PasteSpecial xlPasteValues
End If

Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shOperasi.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
    shOperasi.Range("Z2").Value = "=IF((OR(Y2=Support!$A$1,Y2=Support!$A$2,Y2=Support!$A$3,Y2=Support!$A$4,Y2=Support!$A$5)),Support!$A$14,(IF(OR(Y2=Support!$A$7,Y2=Support!$A$8,Y2=Support!$A$9,Y2=Support!$A$10,Y2=Support!$A$11,Y2=Support!$A$12),Support!$A$15,Support!$A$16)))"
    
    If lr1 > 2 Then
    shOperasi.Range("Z2:Z" & lr1).FillDown
    End If
    shOperasi.Calculate
    shOperasi.UsedRange.Copy
    shOperasi.UsedRange.PasteSpecial xlPasteValues
End If



End Sub
Function ValidateEntriesOperasi() As Boolean

    ValidateEntriesOperasi = True
    
    Dim iIDOperasi As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Operasi")
        
    iIDOperasi = FormOperasi.txtIDOperasi.Value
    
    With FormOperasi
    
        'Default Color
        
        .txtIDOperasi.BackColor = vbWhite
        .txtTanggalOperasi.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaSumur.BackColor = vbWhite
        .txtOperasi.BackColor = vbWhite
        .txtSiagaWithCrew.BackColor = vbWhite
        .txtSiagaWithoutCrew.BackColor = vbWhite
        .txtRDRMRU.BackColor = vbWhite
        .txtMOBDEMOB.BackColor = vbWhite
        .txtPerbaikanAlatDibayar.BackColor = vbWhite
        .txtPerbaikanAlatTidakDibayar.BackColor = vbWhite
        .txtDendaRDRMRU.BackColor = vbWhite
        .txtDendaAlatRusak24Jam.BackColor = vbWhite
        .txtDendaNUNDBOPTestBPM.BackColor = vbWhite
        .txtKondisiKahar.BackColor = vbWhite
        .txtProsesSiloIdleTidakDibayar.BackColor = vbWhite
        .txtKetDendaRig.BackColor = vbWhite
        .txtKetDowntimeRig.BackColor = vbWhite
        .cmbKetRigIdle.BackColor = vbWhite

        '--------------------------------
        
        If Trim(.txtIDOperasi.Value) = "" Then
        
            MsgBox "Masukkan ID operasi", vbOKOnly + vbInformation, "ID Operasi"
            ValidateEntriesOperasi = False
            .txtIDOperasi.BackColor = vbRed
            .txtIDOperasi.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtTanggalOperasi.Value) = "" Then
        
            MsgBox "Masukkan tanggal operasi", vbOKOnly + vbInformation, "Tanggal Operasi"
            ValidateEntriesOperasi = False
            .txtTanggalOperasi.BackColor = vbRed
            .txtTanggalOperasi.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaRig.Value) = "" Then
        
            MsgBox "Masukkan nama rig", vbOKOnly + vbInformation, "Nama Rig"
            ValidateEntriesOperasi = False
            .cmbNamaRig.BackColor = vbRed
            .cmbNamaRig.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaSumur.Value) = "" Then
        
            MsgBox "Masukkan nama sumur", vbOKOnly + vbInformation, "Nama Sumur"
            ValidateEntriesOperasi = False
            .cmbNamaSumur.BackColor = vbRed
            .cmbNamaSumur.SetFocus
            Exit Function
            
        End If

        
    
    
    End With




End Function


Function Selected_ListOperasi() As Long

    Dim i As Long
    
    Selected_ListOperasi = 0
    
    For i = 0 To FormOperasi.listDatabaseOperasi.ListCount - 1
        
        If FormOperasi.listDatabaseOperasi.Selected(i) = True Then
        
            Selected_ListOperasi = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:
Option Explicit


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListOperasi = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 0), ThisWorkbook.Sheets("Operasi").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Operasi").Rows(iRow).Delete
    
    Call ResetOperasi
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListOperasi = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    
    Me.txtRowNumber.Value = Selected_ListOperasi + 1
    
    Me.txtIDOperasi.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 1)
    
    Me.txtTanggalOperasi.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 2)
    
    Me.cmbNamaRig.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 3)
    
    Me.cmbNamaSumur.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 4)
    
    Me.txtOperasi.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 5)
    
    Me.txtSiagaWithCrew.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 6)

    Me.txtSiagaWithoutCrew.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 7)
    
    Me.txtRDRMRU.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 8)
    
    Me.txtMOBDEMOB.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 9)
    
    Me.txtPerbaikanAlatDibayar.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 10)
    
    Me.txtPerbaikanAlatTidakDibayar.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 11)
    
    Me.txtDendaRDRMRU.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 12)

    Me.txtDendaAlatRusak24Jam.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 13)
    
    Me.txtDendaNUNDBOPTestBPM.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 14)
    
    Me.txtKondisiKahar.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 15)
    
    Me.txtProsesSiloIdleTidakDibayar.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 16)
    
    Me.txtKetDendaRig.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 22)
    
    Me.txtKetDowntimeRig.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 23)

    Me.cmbKetRigIdle.Value = Me.listDatabaseOperasi.List(Me.listDatabaseOperasi.ListIndex, 24)
    
MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"

    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetOperasi
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesOperasi() = True Then
    
        Call SubmitOperasi
        Call ResetOperasi
    End If
End Sub


Private Sub Image6_Click()
Call Calendar.SelectedDate(Me.txtTanggalOperasi)
End Sub


Private Sub UserForm_Initialize()

    Call ResetOperasi

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (C) MD:
``````````````````````````````````````````````````````````````````````````````````````````````
# (C1) Kontrak All Data Entry:
Module:

Public LoginInstance As Integer
Option Explicit
Sub ResetKontrakAll()

    Dim iRow As Long
    
    iRow = [Counta(Kontrak_All!A:A)] ' idetifying the last row
    
    With FormKontrakAll
    
        .txtIDKontrakAll.Value = ""
        .cmbNamaClient.Value = ""
        .txtLingkupPekerjaan.Value = ""
        .txt_Start_Date.Value = ""
        .txt_End_Date.Value = ""
        .txtNilaiKontrak.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDKontrakAll.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .txtLingkupPekerjaan.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .txtNilaiKontrak.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        '[Operasi1.xlsm]Client.Range"("B2", "[Operasi1.xlsm]Client".Range("B" & Application.Rows.Count).End(xlUp)).Name
        
        .cmbNamaClient.RowSource = "[Operasi1.xlsm]Client!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        '-----------------------------------------------
        
        .listDatabaseKontrakAll.ColumnCount = 9
        .listDatabaseKontrakAll.ColumnHeads = True
        
        .listDatabaseKontrakAll.ColumnWidths = "30,40,50,90,30,30,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseKontrakAll.RowSource = "Kontrak_All!A2:I" & iRow
        Else
        
            .listDatabaseKontrakAll.RowSource = "Kontrak_All!A2:I2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormKontrakAll()
    
    FormKontrakAll.Show

End Sub

Sub SubmitKontrakAll()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Kontrak_All")
    
    If FormKontrakAll.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Kontrak_All!A:A)] + 1
    Else
    
        iRow = FormKontrakAll.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormKontrakAll.txtIDKontrakAll.Value
        
        .Cells(iRow, 3) = FormKontrakAll.cmbNamaClient.Value
        
        .Cells(iRow, 4) = FormKontrakAll.txtLingkupPekerjaan.Value
        
        .Cells(iRow, 5) = FormKontrakAll.txt_Start_Date.Value
        
        .Cells(iRow, 6) = FormKontrakAll.txt_End_Date.Value
        
        .Cells(iRow, 7) = FormKontrakAll.txtNilaiKontrak.Value
        
        .Cells(iRow, 8) = Application.UserName
        
        .Cells(iRow, 9) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesKontrakAll() As Boolean

    ValidateEntriesKontrakAll = True
    
    Dim iIDKontrakAll As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Kontrak_All")
        
    iIDKontrakAll = FormKontrakAll.txtIDKontrakAll.Value
    
    With FormKontrakAll
    
        'Default Color
        
        .txtIDKontrakAll.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .txtLingkupPekerjaan.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .txtNilaiKontrak.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDKontrakAll.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak all", vbOKOnly + vbInformation, "Nama Kontrak All"
            ValidateEntriesKontrakAll = False
            .txtIDKontrakAll.BackColor = vbRed
            .txtIDKontrakAll.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Please select client from drop-down.", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesKontrakAll = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtLingkupPekerjaan.Value) = "" Then
        
            MsgBox "Masukkan lingkup pekerjaan", vbOKOnly + vbInformation, "Lingkup Pekerjaan"
            ValidateEntriesKontrakAll = False
            .txtLingkupPekerjaan.BackColor = vbRed
            .txtLingkupPekerjaan.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txt_Start_Date.Value) = "" Then
        
            MsgBox "Masukkan tanggal mulai kontrak", vbOKOnly + vbInformation, "Tanggal Mulai Kontrak"
            ValidateEntriesKontrakAll = False
            .txt_Start_Date.BackColor = vbRed
            .txt_Start_Date.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txt_End_Date.Value) = "" Then
        
            MsgBox "Masukkan tanggal selesai kontrak", vbOKOnly + vbInformation, "Tanggal Selesai Kontrak"
            ValidateEntriesKontrakAll = False
            .txt_End_Date.BackColor = vbRed
            .txt_End_Date.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtNilaiKontrak.Value) = "" Then
        
            MsgBox "Masukkan nilai kontrak", vbOKOnly + vbInformation, "Nilai Kontrak"
            ValidateEntriesKontrakAll = False
            .txtNilaiKontrak.BackColor = vbRed
            .txtNilaiKontrak.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListKontrakAll() As Long

    Dim i As Long
    
    Selected_ListKontrakAll = 0
    
    For i = 0 To FormKontrakAll.listDatabaseKontrakAll.ListCount - 1
        
        If FormKontrakAll.listDatabaseKontrakAll.Selected(i) = True Then
        
            Selected_ListKontrakAll = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub Image6_Click()
Call Calendar.SelectedDate(Me.txt_Start_Date)
End Sub

Private Sub Image7_Click()
Call Calendar.SelectedDate(Me.txt_End_Date)
End Sub

Private Sub UserForm_Initialize()
Me.txt_Start_Date.Value = Format(Date, "D-MMM-YYYY")
Me.txt_End_Date.Value = Format(Date, "D-MMM-YYYY")
Call ResetKontrakAll
End Sub


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListKontrakAll = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseKontrakAll.List(Me.listDatabaseKontrakAll.ListIndex, 0), ThisWorkbook.Sheets("Kontrak_All").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Kontrak_All").Rows(iRow).Delete
    
    Call ResetKontrakAll
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListKontrakAll = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListKontrakAll + 1
    
    Me.txtIDKontrakAll.Value = Me.listDatabaseKontrakAll.List(Me.listDatabaseKontrakAll.ListIndex, 1)

    Me.cmbNamaClient.Value = Me.listDatabaseKontrakAll.List(Me.listDatabaseKontrakAll.ListIndex, 2)
    
    Me.txtLingkupPekerjaan.Value = Me.listDatabaseKontrakAll.List(Me.listDatabaseKontrakAll.ListIndex, 3)
    
    Me.txt_Start_Date.Value = Me.listDatabaseKontrakAll.List(Me.listDatabaseKontrakAll.ListIndex, 4)
    
    Me.txt_End_Date.Value = Me.listDatabaseKontrakAll.List(Me.listDatabaseKontrakAll.ListIndex, 5)
        
    Me.txtNilaiKontrak.Value = Me.listDatabaseKontrakAll.List(Me.listDatabaseKontrakAll.ListIndex, 6)
            
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetKontrakAll
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesKontrakAll() = True Then
    
        Call SubmitKontrakAll
        Call ResetKontrakAll
    End If
    
End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (D) RSM:
``````````````````````````````````````````````````````````````````````````````````````````````
# (D1) Kontrak RSM Data Entry:
Module:

Option Explicit
Sub ResetKontrakRSM()

    Dim iRow As Long
    
    iRow = [Counta(Kontrak_RSM!A:A)] ' idetifying the last row
    
    With FormKontrakRSM
    
        .txtIDKontrakRSM.Value = ""
        .cmbIDKontrakAll.Value = ""
        .txtLingkupPekerjaan.Value = ""
        .txtTHOKontrakRSM.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDKontrakRSM.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtLingkupPekerjaan.BackColor = vbWhite
        .txtTHOKontrakRSM.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        '[Operasi1.xlsm]Client.Range"("B2", "[Operasi1.xlsm]Client".Range("B" & Application.Rows.Count).End(xlUp)).Name
        
        .cmbIDKontrakAll.RowSource = "[MD1.xlsm]Kontrak_All!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        '-----------------------------------------------
        
        .listDatabaseKontrakRSM.ColumnCount = 7
        .listDatabaseKontrakRSM.ColumnHeads = True
        
        .listDatabaseKontrakRSM.ColumnWidths = "30,40,50,90,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseKontrakRSM.RowSource = "Kontrak_RSM!A2:G" & iRow
        Else
        
            .listDatabaseKontrakRSM.RowSource = "Kontrak_RSM!A2:G2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormKontrakRSM()
    
    FormKontrakRSM.Show

End Sub

Sub SubmitKontrakRSM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Kontrak_RSM")
    
    If FormKontrakRSM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Kontrak_RSM!A:A)] + 1
    Else
    
        iRow = FormKontrakRSM.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormKontrakRSM.txtIDKontrakRSM.Value
        
        .Cells(iRow, 3) = FormKontrakRSM.cmbIDKontrakAll.Value
        
        .Cells(iRow, 4) = FormKontrakRSM.txtLingkupPekerjaan.Value
        
        .Cells(iRow, 5) = FormKontrakRSM.txtTHOKontrakRSM.Value
        
        .Cells(iRow, 6) = Application.UserName
        
        .Cells(iRow, 7) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesKontrakRSM() As Boolean

    ValidateEntriesKontrakRSM = True
    
    Dim iIDKontrakRSM As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Kontrak_RSM")
        
    iIDKontrakRSM = FormKontrakRSM.txtIDKontrakRSM.Value
    
    With FormKontrakRSM
    
        'Default Color
        
        .txtIDKontrakRSM.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtLingkupPekerjaan.BackColor = vbWhite
        .txtTHOKontrakRSM.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDKontrakRSM.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak RSM", vbOKOnly + vbInformation, "Nama Kontrak RSM"
            ValidateEntriesKontrakRSM = False
            .txtIDKontrakRSM.BackColor = vbRed
            .txtIDKontrakRSM.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDKontrakAll.Value) = "" Then
        
            MsgBox "Please select contract from drop-down.", vbOKOnly + vbInformation, "ID Kontrak All"
            ValidateEntriesKontrakRSM = False
            .cmbIDKontrakAll.BackColor = vbRed
            .cmbIDKontrakAll.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtLingkupPekerjaan.Value) = "" Then
        
            MsgBox "Masukkan lingkup pekerjaan", vbOKOnly + vbInformation, "Lingkup Pekerjaan"
            ValidateEntriesKontrakRSM = False
            .txtLingkupPekerjaan.BackColor = vbRed
            .txtLingkupPekerjaan.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTHOKontrakRSM.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak RSM", vbOKOnly + vbInformation, "THO Kontrak RSM"
            ValidateEntriesKontrakRSM = False
            .txtTHOKontrakRSM.BackColor = vbRed
            .txtTHOKontrakRSM.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListKontrakRSM() As Long

    Dim i As Long
    
    Selected_ListKontrakRSM = 0
    
    For i = 0 To FormKontrakRSM.listDatabaseKontrakRSM.ListCount - 1
        
        If FormKontrakRSM.listDatabaseKontrakRSM.Selected(i) = True Then
        
            Selected_ListKontrakRSM = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit
Public EnableEvents As Boolean

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListKontrakRSM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseKontrakRSM.List(Me.listDatabaseKontrakRSM.ListIndex, 0), ThisWorkbook.Sheets("Kontrak_RSM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Kontrak_RSM").Rows(iRow).Delete
    
    Call ResetKontrakRSM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListKontrakRSM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListKontrakRSM + 1
    
    Me.txtIDKontrakRSM.Value = Me.listDatabaseKontrakRSM.List(Me.listDatabaseKontrakRSM.ListIndex, 1)

    Me.cmbIDKontrakAll.Value = Me.listDatabaseKontrakRSM.List(Me.listDatabaseKontrakRSM.ListIndex, 2)
    
    Me.txtLingkupPekerjaan.Value = Me.listDatabaseKontrakRSM.List(Me.listDatabaseKontrakRSM.ListIndex, 3)
    
    Me.txtTHOKontrakRSM.Value = Me.listDatabaseKontrakRSM.List(Me.listDatabaseKontrakRSM.ListIndex, 4)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetKontrakRSM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesKontrakRSM() = True Then
    
        Call SubmitKontrakRSM
        Call ResetKontrakRSM
    End If
    
End Sub



Private Sub UserForm_Initialize()

    Call ResetKontrakRSM

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (D2) Prognosa RSM Data Entry:
Module:

Option Explicit
Sub ResetPrognosaRSM()

    Dim iRow As Long
    
    iRow = [Counta(Prognosa_RSM!A:A)] ' idetifying the last row
    
    With FormPrognosaRSM
    
        .txtIDPrognosaRSM.Value = ""
        .cmbNamaSumur.Value = ""
        .cmbNamaRig.Value = ""
        .cmbNamaClient.Value = ""
        .txtDayaHPAktual.Value = ""
        .txtDayaHPPaid.Value = ""
        .cmbIDKontrakRSM.Value = ""
        .txtTHOKontrakRSM.Value = ""
        .txtTopDrive.Value = ""
        .cmbBulan.Value = ""
        .txtPerkiraanRDRMRU.Value = ""
        .txtPerkiraanHariOperasi.Value = ""
        .txtRowNumber.Value = ""

        'Default Color
        
        .txtIDPrognosaRSM.BackColor = vbWhite
        .cmbNamaSumur.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .txtDayaHPAktual.BackColor = vbWhite
        .txtDayaHPPaid.BackColor = vbWhite
        .cmbIDKontrakRSM.BackColor = vbWhite
        .txtTHOKontrakRSM.BackColor = vbWhite
        .txtTopDrive.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtPerkiraanRDRMRU.BackColor = vbWhite
        .txtPerkiraanHariOperasi.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        .cmbNamaSumur.RowSource = "[Operasi1.xlsm]Sumur!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        .cmbNamaRig.RowSource = "[Operasi1.xlsm]Rig!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        .cmbNamaClient.RowSource = "[Operasi1.xlsm]Client!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        shKontrakRSM.Range("B2", shKontrakRSM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicKontrakRSM"
        
        .cmbIDKontrakRSM.RowSource = "DynamicKontrakRSM"
        
        .cmbBulan.Clear
        
        .cmbBulan.AddItem "Januari"
        .cmbBulan.AddItem "Februari"
        .cmbBulan.AddItem "Maret"
        .cmbBulan.AddItem "April"
        .cmbBulan.AddItem "Mei"
        .cmbBulan.AddItem "Juni"
        .cmbBulan.AddItem "Juli"
        .cmbBulan.AddItem "Agustus"
        .cmbBulan.AddItem "September"
        .cmbBulan.AddItem "Oktober"
        .cmbBulan.AddItem "November"
        .cmbBulan.AddItem "Desember"

        '-----------------------------------------------
        
        .listDatabasePrognosaRSM.ColumnCount = 18
        .listDatabasePrognosaRSM.ColumnHeads = True
        
        .listDatabasePrognosaRSM.ColumnWidths = "30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabasePrognosaRSM.RowSource = "Prognosa_RSM!A2:R" & iRow
        Else
        
            .listDatabasePrognosaRSM.RowSource = "Prognosa_RSM!A2:R2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormPrognosaRSM()
    
    FormPrognosaRSM.Show

End Sub

Sub SubmitPrognosaRSM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Prognosa_RSM")
    
    If FormPrognosaRSM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Prognosa_RSM!A:A)] + 1
    Else
    
        iRow = FormPrognosaRSM.txtRowNumber.Value
        
    End If
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormPrognosaRSM.txtIDPrognosaRSM.Value
        
        .Cells(iRow, 3) = FormPrognosaRSM.cmbNamaSumur.Value
        
        .Cells(iRow, 4) = FormPrognosaRSM.cmbNamaRig.Value
        
        .Cells(iRow, 5) = FormPrognosaRSM.cmbNamaClient.Value
        
        .Cells(iRow, 6) = FormPrognosaRSM.cmbIDKontrakRSM.Value
        
        .Cells(iRow, 7) = FormPrognosaRSM.txtTHOKontrakRSM.Value
        
        .Cells(iRow, 8) = FormPrognosaRSM.txtDayaHPAktual.Value
        
        .Cells(iRow, 9) = FormPrognosaRSM.txtDayaHPPaid.Value

        .Cells(iRow, 10) = FormPrognosaRSM.txtTopDrive.Value
        
        .Cells(iRow, 11) = FormPrognosaRSM.cmbBulan.Value
        
        .Cells(iRow, 12) = FormPrognosaRSM.txtPerkiraanHariOperasi.Value

        .Cells(iRow, 13) = FormPrognosaRSM.txtPerkiraanRDRMRU.Value
        
        .Cells(iRow, 17) = Application.UserName
        
        .Cells(iRow, 18) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lr As Integer
lr = Application.WorksheetFunction.CountA(shPrognosaRSM.Range("A:A"))

'''' Put the formula
If lr > 1 Then
    shPrognosaRSM.Range("G2").Value = "=INDEX(Kontrak_RSM!$E:$E,MATCH(Prognosa_RSM!F2,Kontrak_RSM!$B:$B,FALSE),1)"
    
    If lr > 2 Then
    shPrognosaRSM.Range("G2:G" & lr).FillDown
    End If
    shPrognosaRSM.Calculate
    shPrognosaRSM.UsedRange.Copy
    shPrognosaRSM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shPrognosaRSM.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
    shPrognosaRSM.Range("N2").Value = "=((0.99 * ((0.75 * L2) + ((0.25 * L2) * 0.85))) * I2 * G2) + (M2 * G2 * I2 * 0.85) + (J2 * L2)"
    shPrognosaRSM.Range("O2").Value = "=((0.95 * L2) + (M2 * 0.85)) / 31 * 100"
    shPrognosaRSM.Range("P2").Value = "=((L2 + M2) / 31) * 100"
    
    If lr1 > 2 Then
    shPrognosaRSM.Range("N2:P" & lr1).FillDown
    End If
    shPrognosaRSM.Calculate
    shPrognosaRSM.UsedRange.Copy
    shPrognosaRSM.UsedRange.PasteSpecial xlPasteValues
End If
    
End Sub

Function ValidateEntriesPrognosaRSM() As Boolean

    ValidateEntriesPrognosaRSM = True
    
    Dim iIDPrognosaRSM As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Prognosa_RSM")
        
    iIDPrognosaRSM = FormPrognosaRSM.txtIDPrognosaRSM.Value
    
    With FormPrognosaRSM
        
        'Default Color
        
        .txtIDPrognosaRSM.BackColor = vbWhite
        .cmbNamaSumur.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .txtDayaHPAktual.BackColor = vbWhite
        .txtDayaHPPaid.BackColor = vbWhite
        .cmbIDKontrakRSM.BackColor = vbWhite
        .txtTHOKontrakRSM.BackColor = vbWhite
        .txtTopDrive.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtPerkiraanRDRMRU.BackColor = vbWhite
        .txtPerkiraanHariOperasi.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDPrognosaRSM.Value) = "" Then
        
            MsgBox "Masukkan ID prognosa RSM", vbOKOnly + vbInformation, "ID Prognosa RSM"
            ValidateEntriesPrognosaRSM = False
            .txtIDPrognosaRSM.BackColor = vbRed
            .txtIDPrognosaRSM.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaSumur.Value) = "" Then
        
            MsgBox "Masukkan nama sumur", vbOKOnly + vbInformation, "Nama Sumur"
            ValidateEntriesPrognosaRSM = False
            .cmbNamaSumur.BackColor = vbRed
            .cmbNamaSumur.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaRig.Value) = "" Then
        
            MsgBox "Masukkan nama rig", vbOKOnly + vbInformation, "Nama Rig"
            ValidateEntriesPrognosaRSM = False
            .cmbNamaRig.BackColor = vbRed
            .cmbNamaRig.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Masukkan nama client", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesPrognosaRSM = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtDayaHPAktual.Value) = "" Then
        
            MsgBox "Masukkan daya HP aktual", vbOKOnly + vbInformation, "Daya HP Aktual"
            ValidateEntriesPrognosaRSM = False
            .txtDayaHPAktual.BackColor = vbRed
            .txtDayaHPAktual.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtDayaHPPaid.Value) = "" Then
        
            MsgBox "Masukkan daya HP paid", vbOKOnly + vbInformation, "Daya HP Paid"
            ValidateEntriesPrognosaRSM = False
            .txtDayaHPPaid.BackColor = vbRed
            .txtDayaHPPaid.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbIDKontrakRSM.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak RSM", vbOKOnly + vbInformation, "ID Kontrak RSM"
            ValidateEntriesPrognosaRSM = False
            .cmbIDKontrakRSM.BackColor = vbRed
            .cmbIDKontrakRSM.SetFocus
            Exit Function
            
        End If

        If Trim(.txtTHOKontrakRSM.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak RSM", vbOKOnly + vbInformation, "THO Kontrak RSM"
            ValidateEntriesPrognosaRSM = False
            .txtTHOKontrakRSM.BackColor = vbRed
            .txtTHOKontrakRSM.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtTopDrive.Value) = "" Then
        
            MsgBox "Masukkan top drive", vbOKOnly + vbInformation, "Top Drive"
            ValidateEntriesPrognosaRSM = False
            .txtTopDrive.BackColor = vbRed
            .txtTopDrive.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbBulan.Value) = "" Then
        
            MsgBox "Masukkan bulan", vbOKOnly + vbInformation, "Bulan"
            ValidateEntriesPrognosaRSM = False
            .cmbBulan.BackColor = vbRed
            .cmbBulan.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtPerkiraanRDRMRU.Value) = "" Then
        
            MsgBox "Masukkan perkiraan RDRMRU", vbOKOnly + vbInformation, "Perkiraan R/D, R/M, dan R/U"
            ValidateEntriesPrognosaRSM = False
            .txtPerkiraanRDRMRU.BackColor = vbRed
            .txtPerkiraanRDRMRU.SetFocus
            Exit Function
            
        End If

        If Trim(.txtPerkiraanHariOperasi.Value) = "" Then
        
            MsgBox "Masukkan perkiraan hari operasi", vbOKOnly + vbInformation, "Perkiraan Hari Operasi"
            ValidateEntriesPrognosaRSM = False
            .txtPerkiraanHariOperasi.BackColor = vbRed
            .txtPerkiraanHariOperasi.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListPrognosaRSM() As Long

    Dim i As Long
    
    Selected_ListPrognosaRSM = 0
    
    For i = 0 To FormPrognosaRSM.listDatabasePrognosaRSM.ListCount - 1
        
        If FormPrognosaRSM.listDatabasePrognosaRSM.Selected(i) = True Then
        
            Selected_ListPrognosaRSM = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:


Option Explicit


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListPrognosaRSM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 0), ThisWorkbook.Sheets("Prognosa_RSM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Prognosa_RSM").Rows(iRow).Delete
    
    Call ResetPrognosaRSM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListPrognosaRSM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListPrognosaRSM + 1
    
    Me.txtIDPrognosaRSM.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 1)
    
    Me.cmbNamaSumur.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 2)
    
    Me.cmbNamaRig.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 3)
    
    Me.cmbNamaClient.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 4)

    Me.cmbIDKontrakRSM.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 5)
    
    Me.txtTHOKontrakRSM.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 6)

    Me.txtDayaHPAktual.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 7)
    
    Me.txtDayaHPPaid.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 8)
    
    Me.txtTopDrive.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 9)
    
    Me.cmbBulan.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 10)
    
    Me.txtPerkiraanHariOperasi.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 11)
    
    Me.txtPerkiraanRDRMRU.Value = Me.listDatabasePrognosaRSM.List(Me.listDatabasePrognosaRSM.ListIndex, 12)

    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetPrognosaRSM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesPrognosaRSM() = True Then
Call SubmitPrognosaRSM
Call ResetPrognosaRSM
End If
End Sub

Private Sub UserForm_Initialize()
    Call ResetPrognosaRSM
End Sub

Private Sub cmbIDKontrakRSM_Change()

If Me.cmbIDKontrakRSM.Value = "" Then Me.txtTHOKontrakRSM.Value = ""

If Me.cmbIDKontrakRSM.Value <> "" Then
    Me.txtTHOKontrakRSM.Value = Format(Application.WorksheetFunction.Index(shKontrakRSM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakRSM.Value, shKontrakRSM.Range("B:B"), False), 1))
End If

End Sub
``````````````````````````````````````````````````````````````````````````````````````````````
# (E) CTM:
``````````````````````````````````````````````````````````````````````````````````````````````
# (E1) Kontrak CTM Data Entry:
Module:

Option Explicit
Sub ResetKontrakCTM()

    Dim iRow As Long
    
    iRow = [Counta(Kontrak_CTM!A:A)] ' idetifying the last row
    
    With FormKontrakCTM
    
        .txtIDKontrakCTM.Value = ""
        .cmbIDKontrakAll.Value = ""
        .txtDeskripsiKegiatanKontrakCTM.Value = ""
        .txtTHOKontrakCTM.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDKontrakCTM.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtDeskripsiKegiatanKontrakCTM.BackColor = vbWhite
        .txtTHOKontrakCTM.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        '[Operasi1.xlsm]Client.Range"("B2", "[Operasi1.xlsm]Client".Range("B" & Application.Rows.Count).End(xlUp)).Name
        
        .cmbIDKontrakAll.RowSource = "[MD1.xlsm]Kontrak_All!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        '-----------------------------------------------
        
        .listDatabaseKontrakCTM.ColumnCount = 7
        .listDatabaseKontrakCTM.ColumnHeads = True
        
        .listDatabaseKontrakCTM.ColumnWidths = "30,40,50,90,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseKontrakCTM.RowSource = "Kontrak_CTM!A2:G" & iRow
        Else
        
            .listDatabaseKontrakCTM.RowSource = "Kontrak_CTM!A2:G2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormKontrakCTM()
    
    FormKontrakCTM.Show

End Sub

Sub SubmitKontrakCTM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Kontrak_CTM")
    
    If FormKontrakCTM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Kontrak_CTM!A:A)] + 1
    Else
    
        iRow = FormKontrakCTM.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormKontrakCTM.txtIDKontrakCTM.Value
        
        .Cells(iRow, 3) = FormKontrakCTM.cmbIDKontrakAll.Value
        
        .Cells(iRow, 4) = FormKontrakCTM.txtDeskripsiKegiatanKontrakCTM.Value
        
        .Cells(iRow, 5) = FormKontrakCTM.txtTHOKontrakCTM.Value
        
        .Cells(iRow, 6) = Application.UserName
        
        .Cells(iRow, 7) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesKontrakCTM() As Boolean

    ValidateEntriesKontrakCTM = True
    
    Dim iIDKontrakCTM As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Kontrak_CTM")
        
    iIDKontrakCTM = FormKontrakCTM.txtIDKontrakCTM.Value
    
    With FormKontrakCTM
    
        'Default Color
        
        .txtIDKontrakCTM.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtDeskripsiKegiatanKontrakCTM.BackColor = vbWhite
        .txtTHOKontrakCTM.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDKontrakCTM.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak CTM", vbOKOnly + vbInformation, "Nama Kontrak CTM"
            ValidateEntriesKontrakCTM = False
            .txtIDKontrakCTM.BackColor = vbRed
            .txtIDKontrakCTM.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDKontrakAll.Value) = "" Then
        
            MsgBox "Please select client from drop-down.", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesKontrakCTM = False
            .cmbIDKontrakAll.BackColor = vbRed
            .cmbIDKontrakAll.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtDeskripsiKegiatanKontrakCTM.Value) = "" Then
        
            MsgBox "Masukkan deskripsi kegiatan kontrak CTM", vbOKOnly + vbInformation, "Deskripsi Kegiatan Kontrak CTM"
            ValidateEntriesKontrakCTM = False
            .txtDeskripsiKegiatanKontrakCTM.BackColor = vbRed
            .txtDeskripsiKegiatanKontrakCTM.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTHOKontrakCTM.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak CTM", vbOKOnly + vbInformation, "THO Kontrak CTM"
            ValidateEntriesKontrakCTM = False
            .txtTHOKontrakCTM.BackColor = vbRed
            .txtTHOKontrakCTM.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListKontrakCTM() As Long

    Dim i As Long
    
    Selected_ListKontrakCTM = 0
    
    For i = 0 To FormKontrakCTM.listDatabaseKontrakCTM.ListCount - 1
        
        If FormKontrakCTM.listDatabaseKontrakCTM.Selected(i) = True Then
        
            Selected_ListKontrakCTM = i + 1
            Exit For
        End If
        
    Next i


End Function
``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListKontrakCTM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseKontrakCTM.List(Me.listDatabaseKontrakCTM.ListIndex, 0), ThisWorkbook.Sheets("Kontrak_CTM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Kontrak_CTM").Rows(iRow).Delete
    
    Call ResetKontrakCTM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListKontrakCTM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListKontrakCTM + 1
    
    Me.txtIDKontrakCTM.Value = Me.listDatabaseKontrakCTM.List(Me.listDatabaseKontrakCTM.ListIndex, 1)

    Me.cmbIDKontrakAll.Value = Me.listDatabaseKontrakCTM.List(Me.listDatabaseKontrakCTM.ListIndex, 2)
    
    Me.txtDeskripsiKegiatanKontrakCTM.Value = Me.listDatabaseKontrakCTM.List(Me.listDatabaseKontrakCTM.ListIndex, 3)
    
    Me.txtTHOKontrakCTM.Value = Me.listDatabaseKontrakCTM.List(Me.listDatabaseKontrakCTM.ListIndex, 4)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetKontrakCTM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesKontrakCTM() = True Then
    
        Call SubmitKontrakCTM
        Call ResetKontrakCTM
    End If
    
End Sub


Private Sub UserForm_Initialize()

    Call ResetKontrakCTM

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (E2) Mitra CTM Data Entry:
Module:
Option Explicit

Sub ResetMitraCTM()

    Dim iRow As Long
    
    iRow = [Counta(Mitra_CTM!A:A)] ' idetifying the last row
    
    With FormMitraCTM
    
        .txtIDMitraCTM.Value = ""
        .txtDeskripsiKegiatanMitraCTM.Value = ""
        .txtTHOMitraCTM.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDMitraCTM.BackColor = vbWhite
        .txtDeskripsiKegiatanMitraCTM.BackColor = vbWhite
        .txtTHOMitraCTM.BackColor = vbWhite

        '-----------------------------------------------
        
        .listDatabaseMitraCTM.ColumnCount = 6
        .listDatabaseMitraCTM.ColumnHeads = True
        
        .listDatabaseMitraCTM.ColumnWidths = "30,40,90,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseMitraCTM.RowSource = "Mitra_CTM!A2:F" & iRow
        Else
        
            .listDatabaseMitraCTM.RowSource = "Mitra_CTM!A2:F2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormMitraCTM()
    
    FormMitraCTM.Show

End Sub

Sub SubmitMitraCTM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Mitra_CTM")
    
    If FormMitraCTM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Mitra_CTM!A:A)] + 1
    Else
    
        iRow = FormMitraCTM.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormMitraCTM.txtIDMitraCTM.Value
        
        .Cells(iRow, 3) = FormMitraCTM.txtDeskripsiKegiatanMitraCTM.Value
        
        .Cells(iRow, 4) = FormMitraCTM.txtTHOMitraCTM.Value
        
        .Cells(iRow, 5) = Application.UserName
        
        .Cells(iRow, 6) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesMitraCTM() As Boolean

    ValidateEntriesMitraCTM = True
    
    Dim iIDMitraCTM As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Mitra_CTM")
        
    iIDMitraCTM = FormMitraCTM.txtIDMitraCTM.Value
    
    With FormMitraCTM
    
        'Default Color
        
        .txtIDMitraCTM.BackColor = vbWhite
        .txtDeskripsiKegiatanMitraCTM.BackColor = vbWhite
        .txtTHOMitraCTM.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDMitraCTM.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak partnership", vbOKOnly + vbInformation, "Nama Mitra partnership"
            ValidateEntriesMitraCTM = False
            .txtIDMitraCTM.BackColor = vbRed
            .txtIDMitraCTM.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtDeskripsiKegiatanMitraCTM.Value) = "" Then
        
            MsgBox "Masukkan deskripsi kegiatan kontrak partnership", vbOKOnly + vbInformation, "Deskripsi Kegiatan Mitra CTM"
            ValidateEntriesMitraCTM = False
            .txtDeskripsiKegiatanMitraCTM.BackColor = vbRed
            .txtDeskripsiKegiatanMitraCTM.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTHOMitraCTM.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak partnership", vbOKOnly + vbInformation, "THO Mitra CTM"
            ValidateEntriesMitraCTM = False
            .txtTHOMitraCTM.BackColor = vbRed
            .txtTHOMitraCTM.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListMitraCTM() As Long

    Dim i As Long
    
    Selected_ListMitraCTM = 0
    
    For i = 0 To FormMitraCTM.listDatabaseMitraCTM.ListCount - 1
        
        If FormMitraCTM.listDatabaseMitraCTM.Selected(i) = True Then
        
            Selected_ListMitraCTM = i + 1
            Exit For
        End If
        
    Next i


End Function


``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListMitraCTM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseMitraCTM.List(Me.listDatabaseMitraCTM.ListIndex, 0), ThisWorkbook.Sheets("Mitra_CTM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Mitra_CTM").Rows(iRow).Delete
    
    Call ResetMitraCTM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListMitraCTM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListMitraCTM + 1
    
    Me.txtIDMitraCTM.Value = Me.listDatabaseMitraCTM.List(Me.listDatabaseMitraCTM.ListIndex, 1)
    
    Me.txtDeskripsiKegiatanMitraCTM.Value = Me.listDatabaseMitraCTM.List(Me.listDatabaseMitraCTM.ListIndex, 2)
    
    Me.txtTHOMitraCTM.Value = Me.listDatabaseMitraCTM.List(Me.listDatabaseMitraCTM.ListIndex, 3)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetMitraCTM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesMitraCTM() = True Then
    
        Call SubmitMitraCTM
        Call ResetMitraCTM
    End If
    
End Sub


Private Sub UserForm_Initialize()

    Call ResetMitraCTM

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (E3) Prognosa CTM Non Rig Data Entry:
Module:

Option Explicit
Sub ResetPrognosaCTMNonRig()

    Dim iRow As Long
    
    iRow = [Counta(Prognosa_CTM_Non_Rig!A:A)] ' idetifying the last row
    
    With FormPrognosaCTMNonRig
    
        .txtIDPrognosaCTMNonRig.Value = ""
        .cmbService.Value = ""
        .txtNamaSumur.Value = ""
        .cmbNamaRig.Value = ""
        .cmbNamaClient.Value = ""
        .cmbIDKontrakCTMNonRig1.Value = ""
        .cmbIDKontrakCTMNonRig2.Value = ""
        .cmbIDKontrakCTMNonRig3.Value = ""
        .cmbIDKontrakCTMNonRig4.Value = ""
        .txtTHOKontrakCTMNonRig1.Value = ""
        .txtTHOKontrakCTMNonRig2.Value = ""
        .txtTHOKontrakCTMNonRig3.Value = ""
        .txtTHOKontrakCTMNonRig4.Value = ""
        .cmbIDMitraCTMNonRig1.Value = ""
        .cmbIDMitraCTMNonRig2.Value = ""
        .cmbIDMitraCTMNonRig3.Value = ""
        .cmbIDMitraCTMNonRig4.Value = ""
        .txtTHOMitraCTMNonRig1.Value = ""
        .txtTHOMitraCTMNonRig2.Value = ""
        .txtTHOMitraCTMNonRig3.Value = ""
        .txtTHOMitraCTMNonRig4.Value = ""
        .cmbBulan.Value = ""
        .txtPerkiraanHariOperasi.Value = ""
        .txtRencanaKedalamanSumur.Value = ""
        .txtRowNumber.Value = ""

        'Default Color
        
        .txtIDPrognosaCTMNonRig.BackColor = vbWhite
        .cmbService.BackColor = vbWhite
        .txtNamaSumur.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig1.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig2.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig3.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig4.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig1.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig2.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig3.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig4.BackColor = vbWhite
        .cmbIDMitraCTMNonRig1.BackColor = vbWhite
        .cmbIDMitraCTMNonRig2.BackColor = vbWhite
        .cmbIDMitraCTMNonRig3.BackColor = vbWhite
        .cmbIDMitraCTMNonRig4.BackColor = vbWhite
        .txtTHOMitraCTMNonRig1.BackColor = vbWhite
        .txtTHOMitraCTMNonRig2.BackColor = vbWhite
        .txtTHOMitraCTMNonRig3.BackColor = vbWhite
        .txtTHOMitraCTMNonRig4.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtPerkiraanHariOperasi.BackColor = vbWhite
        .txtRencanaKedalamanSumur.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        .cmbService.Clear
        
        .cmbService.AddItem "Cutting Dryer"
        .cmbService.AddItem "Centrifuges"
        
        .cmbNamaRig.RowSource = "[Operasi1.xlsm]Rig!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        .cmbNamaClient.RowSource = "[Operasi1.xlsm]Client!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        shKontrakCTM.Range("B2", shKontrakCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicKontrakCTMNonRig"
        
        .cmbIDKontrakCTMNonRig1.RowSource = "DynamicKontrakCTMNonRig"
        .cmbIDKontrakCTMNonRig2.RowSource = "DynamicKontrakCTMNonRig"
        .cmbIDKontrakCTMNonRig3.RowSource = "DynamicKontrakCTMNonRig"
        .cmbIDKontrakCTMNonRig4.RowSource = "DynamicKontrakCTMNonRig"
        
        shMitraCTM.Range("B2", shMitraCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicMitraCTMNonRig"
        
        .cmbIDMitraCTMNonRig1.RowSource = "DynamicMitraCTMNonRig"
        .cmbIDMitraCTMNonRig2.RowSource = "DynamicMitraCTMNonRig"
        .cmbIDMitraCTMNonRig3.RowSource = "DynamicMitraCTMNonRig"
        .cmbIDMitraCTMNonRig4.RowSource = "DynamicMitraCTMNonRig"
        
        .cmbBulan.Clear
        
        .cmbBulan.AddItem "Januari"
        .cmbBulan.AddItem "Februari"
        .cmbBulan.AddItem "Maret"
        .cmbBulan.AddItem "April"
        .cmbBulan.AddItem "Mei"
        .cmbBulan.AddItem "Juni"
        .cmbBulan.AddItem "Juli"
        .cmbBulan.AddItem "Agustus"
        .cmbBulan.AddItem "September"
        .cmbBulan.AddItem "Oktober"
        .cmbBulan.AddItem "November"
        .cmbBulan.AddItem "Desember"

        '-----------------------------------------------
        
        .listDatabasePrognosaCTMNonRig.ColumnCount = 30
        .listDatabasePrognosaCTMNonRig.ColumnHeads = True
        
        .listDatabasePrognosaCTMNonRig.ColumnWidths = "30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabasePrognosaCTMNonRig.RowSource = "Prognosa_CTM_Non_Rig!A2:AD" & iRow
        Else
        
            .listDatabasePrognosaCTMNonRig.RowSource = "Prognosa_CTM_Non_Rig!A2:AD2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormPrognosaCTMNonRig()
    
    FormPrognosaCTMNonRig.Show

End Sub

Sub SubmitPrognosaCTMNonRig()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_Non_Rig")
    
    If FormPrognosaCTMNonRig.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Prognosa_CTM_Non_Rig!A:A)] + 1
    Else
    
        iRow = FormPrognosaCTMNonRig.txtRowNumber.Value
        
    End If
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormPrognosaCTMNonRig.txtIDPrognosaCTMNonRig.Value
        
        .Cells(iRow, 3) = FormPrognosaCTMNonRig.cmbService.Value
        
        .Cells(iRow, 4) = FormPrognosaCTMNonRig.txtNamaSumur.Value
        
        .Cells(iRow, 5) = FormPrognosaCTMNonRig.cmbNamaRig.Value
        
        .Cells(iRow, 6) = FormPrognosaCTMNonRig.cmbNamaClient.Value
        
        .Cells(iRow, 7) = FormPrognosaCTMNonRig.cmbIDKontrakCTMNonRig1.Value
        
        .Cells(iRow, 9) = FormPrognosaCTMNonRig.cmbIDKontrakCTMNonRig2.Value

        .Cells(iRow, 11) = FormPrognosaCTMNonRig.cmbIDKontrakCTMNonRig3.Value

        .Cells(iRow, 13) = FormPrognosaCTMNonRig.cmbIDKontrakCTMNonRig4.Value
        
        .Cells(iRow, 8) = FormPrognosaCTMNonRig.txtTHOKontrakCTMNonRig1.Value
        
        .Cells(iRow, 10) = FormPrognosaCTMNonRig.txtTHOKontrakCTMNonRig2.Value

        .Cells(iRow, 12) = FormPrognosaCTMNonRig.txtTHOKontrakCTMNonRig3.Value

        .Cells(iRow, 14) = FormPrognosaCTMNonRig.txtTHOKontrakCTMNonRig4.Value

        .Cells(iRow, 15) = FormPrognosaCTMNonRig.cmbIDMitraCTMNonRig1.Value
        
        .Cells(iRow, 17) = FormPrognosaCTMNonRig.cmbIDMitraCTMNonRig2.Value

        .Cells(iRow, 19) = FormPrognosaCTMNonRig.cmbIDMitraCTMNonRig3.Value

        .Cells(iRow, 21) = FormPrognosaCTMNonRig.cmbIDMitraCTMNonRig4.Value

        .Cells(iRow, 16) = FormPrognosaCTMNonRig.txtTHOMitraCTMNonRig1.Value
        
        .Cells(iRow, 18) = FormPrognosaCTMNonRig.txtTHOMitraCTMNonRig2.Value
        
        .Cells(iRow, 20) = FormPrognosaCTMNonRig.txtTHOMitraCTMNonRig3.Value
        
        .Cells(iRow, 22) = FormPrognosaCTMNonRig.txtTHOMitraCTMNonRig4.Value
        
        .Cells(iRow, 23) = FormPrognosaCTMNonRig.cmbBulan.Value
        
        .Cells(iRow, 24) = FormPrognosaCTMNonRig.txtPerkiraanHariOperasi.Value

        .Cells(iRow, 25) = FormPrognosaCTMNonRig.txtRencanaKedalamanSumur.Value
        
        .Cells(iRow, 29) = Application.UserName
        
        .Cells(iRow, 30) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lrH As Integer
lrH = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrH > 1 Then
    shPrognosaCTMNonRig.Range("H2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Non_Rig!G2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrH > 2 Then
    shPrognosaCTMNonRig.Range("H2:H" & lrH).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrJ As Integer
lrJ = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrJ > 1 Then
    shPrognosaCTMNonRig.Range("J2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Non_Rig!I2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrJ > 2 Then
    shPrognosaCTMNonRig.Range("J2:J" & lrJ).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrL As Integer
lrL = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrL > 1 Then
    shPrognosaCTMNonRig.Range("L2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Non_Rig!K2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrL > 2 Then
    shPrognosaCTMNonRig.Range("L2:L" & lrL).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrN As Integer
lrN = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrN > 1 Then
    shPrognosaCTMNonRig.Range("N2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Non_Rig!M2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrN > 2 Then
    shPrognosaCTMNonRig.Range("N2:N" & lrN).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrP As Integer
lrP = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrP > 1 Then
    shPrognosaCTMNonRig.Range("P2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Non_Rig!O2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrP > 2 Then
    shPrognosaCTMNonRig.Range("P2:P" & lrP).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrR As Integer
lrR = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrR > 1 Then
    shPrognosaCTMNonRig.Range("R2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Non_Rig!Q2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrR > 2 Then
    shPrognosaCTMNonRig.Range("R2:R" & lrR).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrT As Integer
lrT = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrT > 1 Then
    shPrognosaCTMNonRig.Range("T2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Non_Rig!S2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrT > 2 Then
    shPrognosaCTMNonRig.Range("T2:T" & lrT).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrV As Integer
lrV = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lrV > 1 Then
    shPrognosaCTMNonRig.Range("V2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Non_Rig!U2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrV > 2 Then
    shPrognosaCTMNonRig.Range("V2:V" & lrV).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shPrognosaCTMNonRig.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
    shPrognosaCTMNonRig.Range("Z2").Value = "=(X2*(H2+J2+L2+N2))/14350"
    shPrognosaCTMNonRig.Range("AA2").Value = "=(X2*(P2+R2+T2+V2))/14350"
    shPrognosaCTMNonRig.Range("AB2").Value = "=Z2-AA2"
    
    If lr1 > 2 Then
    shPrognosaCTMNonRig.Range("Z2:AB" & lr1).FillDown
    End If
    shPrognosaCTMNonRig.Calculate
    shPrognosaCTMNonRig.UsedRange.Copy
    shPrognosaCTMNonRig.UsedRange.PasteSpecial xlPasteValues
End If
    
End Sub

Function ValidateEntriesPrognosaCTMNonRig() As Boolean

    ValidateEntriesPrognosaCTMNonRig = True
    
    Dim iIDPrognosaCTMNonRig As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_Non_Rig")
        
    iIDPrognosaCTMNonRig = FormPrognosaCTMNonRig.txtIDPrognosaCTMNonRig.Value
    
    With FormPrognosaCTMNonRig
        
        'Default Color
        
        .txtIDPrognosaCTMNonRig.BackColor = vbWhite
        .cmbService.BackColor = vbWhite
        .txtNamaSumur.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig1.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig2.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig3.BackColor = vbWhite
        .cmbIDKontrakCTMNonRig4.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig1.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig2.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig3.BackColor = vbWhite
        .txtTHOKontrakCTMNonRig4.BackColor = vbWhite
        .cmbIDMitraCTMNonRig1.BackColor = vbWhite
        .cmbIDMitraCTMNonRig2.BackColor = vbWhite
        .cmbIDMitraCTMNonRig3.BackColor = vbWhite
        .cmbIDMitraCTMNonRig4.BackColor = vbWhite
        .txtTHOMitraCTMNonRig1.BackColor = vbWhite
        .txtTHOMitraCTMNonRig2.BackColor = vbWhite
        .txtTHOMitraCTMNonRig3.BackColor = vbWhite
        .txtTHOMitraCTMNonRig4.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtPerkiraanHariOperasi.BackColor = vbWhite
        .txtRencanaKedalamanSumur.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDPrognosaCTMNonRig.Value) = "" Then
        
            MsgBox "Masukkan ID prognosa CTM rig", vbOKOnly + vbInformation, "ID Prognosa CTM Rig"
            ValidateEntriesPrognosaCTMNonRig = False
            .txtIDPrognosaCTMNonRig.BackColor = vbRed
            .txtIDPrognosaCTMNonRig.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtNamaSumur.Value) = "" Then
        
            MsgBox "Masukkan nama sumur", vbOKOnly + vbInformation, "Nama Sumur"
            ValidateEntriesPrognosaCTMNonRig = False
            .txtNamaSumur.BackColor = vbRed
            .txtNamaSumur.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaRig.Value) = "" Then
        
            MsgBox "Masukkan nama rig", vbOKOnly + vbInformation, "Nama Rig"
            ValidateEntriesPrognosaCTMNonRig = False
            .cmbNamaRig.BackColor = vbRed
            .cmbNamaRig.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Masukkan nama client", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesPrognosaCTMNonRig = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbIDKontrakCTMNonRig1.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak CTM 1", vbOKOnly + vbInformation, "ID Kontrak CTM Rig"
            ValidateEntriesPrognosaCTMNonRig = False
            .cmbIDKontrakCTMNonRig1.BackColor = vbRed
            .cmbIDKontrakCTMNonRig1.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDMitraCTMNonRig1.Value) = "" Then
        
            MsgBox "Masukkan ID mitra CTM 1", vbOKOnly + vbInformation, "THO Mitra CTM Rig"
            ValidateEntriesPrognosaCTMNonRig = False
            .cmbIDMitraCTMNonRig1.BackColor = vbRed
            .cmbIDMitraCTMNonRig1.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbBulan.Value) = "" Then
        
            MsgBox "Masukkan bulan", vbOKOnly + vbInformation, "Bulan"
            ValidateEntriesPrognosaCTMNonRig = False
            .cmbBulan.BackColor = vbRed
            .cmbBulan.SetFocus
            Exit Function
            
        End If
        

        If Trim(.txtPerkiraanHariOperasi.Value) = "" Then
        
            MsgBox "Masukkan perkiraan hari operasi", vbOKOnly + vbInformation, "Perkiraan Hari Operasi"
            ValidateEntriesPrognosaCTMNonRig = False
            .txtPerkiraanHariOperasi.BackColor = vbRed
            .txtPerkiraanHariOperasi.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtRencanaKedalamanSumur.Value) = "" Then
        
            MsgBox "Masukkan rencana kedalaman sumur", vbOKOnly + vbInformation, "Rencana Kedalaman Sumur"
            ValidateEntriesPrognosaCTMNonRig = False
            .txtRencanaKedalamanSumur.BackColor = vbRed
            .txtRencanaKedalamanSumur.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListPrognosaCTMNonRig() As Long

    Dim i As Long
    
    Selected_ListPrognosaCTMNonRig = 0
    
    For i = 0 To FormPrognosaCTMNonRig.listDatabasePrognosaCTMNonRig.ListCount - 1
        
        If FormPrognosaCTMNonRig.listDatabasePrognosaCTMNonRig.Selected(i) = True Then
        
            Selected_ListPrognosaCTMNonRig = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListPrognosaCTMNonRig = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 0), ThisWorkbook.Sheets("Prognosa_CTM_Non_Rig").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Prognosa_CTM_Non_Rig").Rows(iRow).Delete
    
    Call ResetPrognosaCTMNonRig
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListPrognosaCTMNonRig = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListPrognosaCTMNonRig + 1
    
    Me.txtIDPrognosaCTMNonRig.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 1)
    
    Me.cmbService.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 2)
    
    Me.txtNamaSumur.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 3)
    
    Me.cmbNamaRig.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 4)
    
    Me.cmbNamaClient.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 5)

    Me.cmbIDKontrakCTMNonRig1.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 6)
    
    Me.txtTHOKontrakCTMNonRig1.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 7)

    Me.cmbIDKontrakCTMNonRig2.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 8)
    
    Me.txtTHOKontrakCTMNonRig2.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 9)

    Me.cmbIDKontrakCTMNonRig3.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 10)
    
    Me.txtTHOKontrakCTMNonRig3.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 11)

    Me.cmbIDKontrakCTMNonRig4.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 12)
    
    Me.txtTHOKontrakCTMNonRig4.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 13)

    Me.cmbIDMitraCTMNonRig1.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 14)
    
    Me.txtTHOMitraCTMNonRig1.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 15)

    Me.cmbIDMitraCTMNonRig2.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 16)
    
    Me.txtTHOMitraCTMNonRig2.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 17)

    Me.cmbIDMitraCTMNonRig3.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 18)
    
    Me.txtTHOMitraCTMNonRig3.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 19)

    Me.cmbIDMitraCTMNonRig4.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 20)
    
    Me.txtTHOMitraCTMNonRig4.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 21)

    Me.cmbBulan.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 22)
    
    Me.txtPerkiraanHariOperasi.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 23)
    
    Me.txtRencanaKedalamanSumur.Value = Me.listDatabasePrognosaCTMNonRig.List(Me.listDatabasePrognosaCTMNonRig.ListIndex, 24)

    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetPrognosaCTMNonRig
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesPrognosaCTMNonRig() = True Then
Call SubmitPrognosaCTMNonRig
Call ResetPrognosaCTMNonRig
End If
End Sub

Private Sub UserForm_Initialize()
    Call ResetPrognosaCTMNonRig
End Sub

Private Sub cmbIDKontrakCTMNonRig1_Change()

If Me.cmbIDKontrakCTMNonRig1.Value = "" Then Me.txtTHOKontrakCTMNonRig1.Value = 0

If Me.cmbIDKontrakCTMNonRig1.Value <> "" Then
    Me.txtTHOKontrakCTMNonRig1.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMNonRig1.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakCTMNonRig2_Change()

If Me.cmbIDKontrakCTMNonRig2.Value = "" Then Me.txtTHOKontrakCTMNonRig2.Value = 0

If Me.cmbIDKontrakCTMNonRig2.Value <> "" Then
    Me.txtTHOKontrakCTMNonRig2.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMNonRig2.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakCTMNonRig3_Change()

If Me.cmbIDKontrakCTMNonRig3.Value = "" Then Me.txtTHOKontrakCTMNonRig3.Value = 0

If Me.cmbIDKontrakCTMNonRig3.Value <> "" Then
    Me.txtTHOKontrakCTMNonRig3.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMNonRig3.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakCTMNonRig4_Change()

If Me.cmbIDKontrakCTMNonRig4.Value = "" Then Me.txtTHOKontrakCTMNonRig4.Value = 0

If Me.cmbIDKontrakCTMNonRig4.Value <> "" Then
    Me.txtTHOKontrakCTMNonRig4.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMNonRig4.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMNonRig1_Change()

If Me.cmbIDMitraCTMNonRig1.Value = "" Then Me.txtTHOMitraCTMNonRig1.Value = 0

If Me.cmbIDMitraCTMNonRig1.Value <> "" Then
    Me.txtTHOMitraCTMNonRig1.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMNonRig1.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMNonRig2_Change()

If Me.cmbIDMitraCTMNonRig2.Value = "" Then Me.txtTHOMitraCTMNonRig2.Value = 0

If Me.cmbIDMitraCTMNonRig2.Value <> "" Then
    Me.txtTHOMitraCTMNonRig2.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMNonRig2.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMNonRig3_Change()

If Me.cmbIDMitraCTMNonRig3.Value = "" Then Me.txtTHOMitraCTMNonRig3.Value = 0

If Me.cmbIDMitraCTMNonRig3.Value <> "" Then
    Me.txtTHOMitraCTMNonRig3.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMNonRig3.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMNonRig4_Change()

If Me.cmbIDMitraCTMNonRig4.Value = "" Then Me.txtTHOMitraCTMNonRig4.Value = 0

If Me.cmbIDMitraCTMNonRig4.Value <> "" Then
    Me.txtTHOMitraCTMNonRig4.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMNonRig4.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub


``````````````````````````````````````````````````````````````````````````````````````````````
# (E4) Prognosa CTM Offshore Non Drilling Data Entry:
Module:

Option Explicit
Sub ResetPrognosaCTMOffshoreNonDrilling()

    Dim iRow As Long
    
    iRow = [Counta(Prognosa_CTM_Off_Non_Drilling!A:A)] ' idetifying the last row
    
    With FormPrognosaCTMOffNonDrill
    
        .txtIDPrognosaCTMOffshoreNonDrilling.Value = ""
        .cmbNamaRig.Value = ""
        .txtNamaTask.Value = ""
        .cmbNamaClient.Value = ""
        .txt_Start_Date.Value = ""
        .txt_End_Date.Value = ""
        .cmbIDKontrakCTMOffshoreNonDrilling1.Value = ""
        .cmbIDKontrakCTMOffshoreNonDrilling2.Value = ""
        .cmbIDKontrakCTMOffshoreNonDrilling3.Value = ""
        .txtTHOKontrakCTMOffshoreNonDrilling1.Value = ""
        .txtTHOKontrakCTMOffshoreNonDrilling2.Value = ""
        .txtTHOKontrakCTMOffshoreNonDrilling3.Value = ""
        .cmbIDMitraCTMOffshoreNonDrilling1.Value = ""
        .cmbIDMitraCTMOffshoreNonDrilling2.Value = ""
        .cmbIDMitraCTMOffshoreNonDrilling3.Value = ""
        .txtTHOMitraCTMOffshoreNonDrilling1.Value = ""
        .txtTHOMitraCTMOffshoreNonDrilling2.Value = ""
        .txtTHOMitraCTMOffshoreNonDrilling3.Value = ""
        .txtRowNumber.Value = ""

        'Default Color
        
        .txtIDPrognosaCTMOffshoreNonDrilling.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .txtNamaTask.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .cmbIDKontrakCTMOffshoreNonDrilling1.BackColor = vbWhite
        .cmbIDKontrakCTMOffshoreNonDrilling2.BackColor = vbWhite
        .cmbIDKontrakCTMOffshoreNonDrilling3.BackColor = vbWhite
        .txtTHOKontrakCTMOffshoreNonDrilling1.BackColor = vbWhite
        .txtTHOKontrakCTMOffshoreNonDrilling2.BackColor = vbWhite
        .txtTHOKontrakCTMOffshoreNonDrilling3.BackColor = vbWhite
        .cmbIDMitraCTMOffshoreNonDrilling1.BackColor = vbWhite
        .cmbIDMitraCTMOffshoreNonDrilling2.BackColor = vbWhite
        .cmbIDMitraCTMOffshoreNonDrilling3.BackColor = vbWhite
        .txtTHOMitraCTMOffshoreNonDrilling1.BackColor = vbWhite
        .txtTHOMitraCTMOffshoreNonDrilling2.BackColor = vbWhite
        .txtTHOMitraCTMOffshoreNonDrilling3.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        
        .cmbNamaRig.RowSource = "[Operasi1.xlsm]Rig!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        .cmbNamaClient.RowSource = "[Operasi1.xlsm]Client!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        shKontrakCTM.Range("B2", shKontrakCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicKontrakCTMOffshoreNonDrilling"
        
        .cmbIDKontrakCTMOffshoreNonDrilling1.RowSource = "DynamicKontrakCTMOffshoreNonDrilling"
        .cmbIDKontrakCTMOffshoreNonDrilling2.RowSource = "DynamicKontrakCTMOffshoreNonDrilling"
        .cmbIDKontrakCTMOffshoreNonDrilling3.RowSource = "DynamicKontrakCTMOffshoreNonDrilling"

        
        shMitraCTM.Range("B2", shMitraCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicMitraCTMOffshoreNonDrilling"
        
        .cmbIDMitraCTMOffshoreNonDrilling1.RowSource = "DynamicMitraCTMOffshoreNonDrilling"
        .cmbIDMitraCTMOffshoreNonDrilling2.RowSource = "DynamicMitraCTMOffshoreNonDrilling"
        .cmbIDMitraCTMOffshoreNonDrilling3.RowSource = "DynamicMitraCTMOffshoreNonDrilling"

        
        '-----------------------------------------------
        
        .listDatabasePrognosaCTMOffshoreNonDrilling.ColumnCount = 24
        .listDatabasePrognosaCTMOffshoreNonDrilling.ColumnHeads = True
        
        .listDatabasePrognosaCTMOffshoreNonDrilling.ColumnWidths = "30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabasePrognosaCTMOffshoreNonDrilling.RowSource = "Prognosa_CTM_Off_Non_Drilling!A2:X" & iRow
        Else
        
            .listDatabasePrognosaCTMOffshoreNonDrilling.RowSource = "Prognosa_CTM_Off_Non_Drilling!A2:X2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormPrognosaCTMOffNonDrill()
    
    FormPrognosaCTMOffNonDrill.Show

End Sub

Sub SubmitPrognosaCTMOffshoreNonDrilling()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_Off_Non_Drilling")
    
    If FormPrognosaCTMOffNonDrill.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Prognosa_CTM_Off_Non_Drilling!A:A)] + 1
    Else
    
        iRow = FormPrognosaCTMOffNonDrill.txtRowNumber.Value
        
    End If
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormPrognosaCTMOffNonDrill.txtIDPrognosaCTMOffshoreNonDrilling.Value
        
        .Cells(iRow, 3) = FormPrognosaCTMOffNonDrill.cmbNamaRig.Value
        
        .Cells(iRow, 4) = FormPrognosaCTMOffNonDrill.txtNamaTask.Value
        
        .Cells(iRow, 5) = FormPrognosaCTMOffNonDrill.cmbNamaClient.Value
        
        .Cells(iRow, 6) = FormPrognosaCTMOffNonDrill.txt_Start_Date.Value
        
        .Cells(iRow, 7) = FormPrognosaCTMOffNonDrill.txt_End_Date.Value
        
        .Cells(iRow, 8) = FormPrognosaCTMOffNonDrill.cmbIDKontrakCTMOffshoreNonDrilling1.Value
        
        .Cells(iRow, 10) = FormPrognosaCTMOffNonDrill.cmbIDKontrakCTMOffshoreNonDrilling2.Value

        .Cells(iRow, 12) = FormPrognosaCTMOffNonDrill.cmbIDKontrakCTMOffshoreNonDrilling3.Value
        
        .Cells(iRow, 9) = FormPrognosaCTMOffNonDrill.txtTHOKontrakCTMOffshoreNonDrilling1.Value
        
        .Cells(iRow, 11) = FormPrognosaCTMOffNonDrill.txtTHOKontrakCTMOffshoreNonDrilling2.Value

        .Cells(iRow, 13) = FormPrognosaCTMOffNonDrill.txtTHOKontrakCTMOffshoreNonDrilling3.Value

        .Cells(iRow, 14) = FormPrognosaCTMOffNonDrill.cmbIDMitraCTMOffshoreNonDrilling1.Value
        
        .Cells(iRow, 16) = FormPrognosaCTMOffNonDrill.cmbIDMitraCTMOffshoreNonDrilling2.Value

        .Cells(iRow, 18) = FormPrognosaCTMOffNonDrill.cmbIDMitraCTMOffshoreNonDrilling3.Value

        .Cells(iRow, 15) = FormPrognosaCTMOffNonDrill.txtTHOMitraCTMOffshoreNonDrilling1.Value
        
        .Cells(iRow, 17) = FormPrognosaCTMOffNonDrill.txtTHOMitraCTMOffshoreNonDrilling2.Value
        
        .Cells(iRow, 19) = FormPrognosaCTMOffNonDrill.txtTHOMitraCTMOffshoreNonDrilling3.Value
        
        .Cells(iRow, 23) = Application.UserName
        
        .Cells(iRow, 24) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lrI As Integer
lrI = Application.WorksheetFunction.CountA(shPrognosaCTMOffNonDrilling.Range("A:A"))

'''' Put the formula
If lrI > 1 Then
    shPrognosaCTMOffNonDrilling.Range("I2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Off_Non_Drilling!H2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrI > 2 Then
    shPrognosaCTMOffNonDrilling.Range("I2:I" & lrI).FillDown
    End If
    shPrognosaCTMOffNonDrilling.Calculate
    shPrognosaCTMOffNonDrilling.UsedRange.Copy
    shPrognosaCTMOffNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrK As Integer
lrK = Application.WorksheetFunction.CountA(shPrognosaCTMOffNonDrilling.Range("A:A"))

'''' Put the formula
If lrK > 1 Then
    shPrognosaCTMOffNonDrilling.Range("K2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Off_Non_Drilling!J2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrK > 2 Then
    shPrognosaCTMOffNonDrilling.Range("K2:K" & lrK).FillDown
    End If
    shPrognosaCTMOffNonDrilling.Calculate
    shPrognosaCTMOffNonDrilling.UsedRange.Copy
    shPrognosaCTMOffNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrM As Integer
lrM = Application.WorksheetFunction.CountA(shPrognosaCTMOffNonDrilling.Range("A:A"))

'''' Put the formula
If lrM > 1 Then
    shPrognosaCTMOffNonDrilling.Range("M2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Off_Non_Drilling!L2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrM > 2 Then
    shPrognosaCTMOffNonDrilling.Range("M2:M" & lrM).FillDown
    End If
    shPrognosaCTMOffNonDrilling.Calculate
    shPrognosaCTMOffNonDrilling.UsedRange.Copy
    shPrognosaCTMOffNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If


Dim lrO As Integer
lrO = Application.WorksheetFunction.CountA(shPrognosaCTMOffNonDrilling.Range("A:A"))

'''' Put the formula
If lrO > 1 Then
    shPrognosaCTMOffNonDrilling.Range("O2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Off_Non_Drilling!N2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrO > 2 Then
    shPrognosaCTMOffNonDrilling.Range("O2:O" & lrO).FillDown
    End If
    shPrognosaCTMOffNonDrilling.Calculate
    shPrognosaCTMOffNonDrilling.UsedRange.Copy
    shPrognosaCTMOffNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrQ As Integer
lrQ = Application.WorksheetFunction.CountA(shPrognosaCTMOffNonDrilling.Range("A:A"))

'''' Put the formula
If lrQ > 1 Then
    shPrognosaCTMOffNonDrilling.Range("Q2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Off_Non_Drilling!P2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrQ > 2 Then
    shPrognosaCTMOffNonDrilling.Range("Q2:Q" & lrQ).FillDown
    End If
    shPrognosaCTMOffNonDrilling.Calculate
    shPrognosaCTMOffNonDrilling.UsedRange.Copy
    shPrognosaCTMOffNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrS As Integer
lrS = Application.WorksheetFunction.CountA(shPrognosaCTMOffNonDrilling.Range("A:A"))

'''' Put the formula
If lrS > 1 Then
    shPrognosaCTMOffNonDrilling.Range("S2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Off_Non_Drilling!R2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrS > 2 Then
    shPrognosaCTMOffNonDrilling.Range("S2:S" & lrS).FillDown
    End If
    shPrognosaCTMOffNonDrilling.Calculate
    shPrognosaCTMOffNonDrilling.UsedRange.Copy
    shPrognosaCTMOffNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If


Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shPrognosaCTMOffNonDrilling.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
    shPrognosaCTMOffNonDrilling.Range("T2").Value = "=(I2+K2+M2)/14350"
    shPrognosaCTMOffNonDrilling.Range("U2").Value = "=(O2+Q2+S2)/14350"
    shPrognosaCTMOffNonDrilling.Range("V2").Value = "=T2-U2"
    
    If lr1 > 2 Then
    shPrognosaCTMOffNonDrilling.Range("T2:V" & lr1).FillDown
    End If
    shPrognosaCTMOffNonDrilling.Calculate
    shPrognosaCTMOffNonDrilling.UsedRange.Copy
    shPrognosaCTMOffNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If
    
End Sub

Function ValidateEntriesPrognosaCTMOffshoreNonDrilling() As Boolean

    ValidateEntriesPrognosaCTMOffshoreNonDrilling = True
    
    Dim iIDPrognosaCTMOffshoreNonDrilling As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_Off_Non_Drilling")
        
    iIDPrognosaCTMOffshoreNonDrilling = FormPrognosaCTMOffNonDrill.txtIDPrognosaCTMOffshoreNonDrilling.Value
    
    With FormPrognosaCTMOffNonDrill
        
        'Default Color
        
        .txtIDPrognosaCTMOffshoreNonDrilling.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .txtNamaTask.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .cmbIDKontrakCTMOffshoreNonDrilling1.BackColor = vbWhite
        .cmbIDKontrakCTMOffshoreNonDrilling2.BackColor = vbWhite
        .cmbIDKontrakCTMOffshoreNonDrilling3.BackColor = vbWhite
        .txtTHOKontrakCTMOffshoreNonDrilling1.BackColor = vbWhite
        .txtTHOKontrakCTMOffshoreNonDrilling2.BackColor = vbWhite
        .txtTHOKontrakCTMOffshoreNonDrilling3.BackColor = vbWhite
        .cmbIDMitraCTMOffshoreNonDrilling1.BackColor = vbWhite
        .cmbIDMitraCTMOffshoreNonDrilling2.BackColor = vbWhite
        .cmbIDMitraCTMOffshoreNonDrilling3.BackColor = vbWhite
        .txtTHOMitraCTMOffshoreNonDrilling1.BackColor = vbWhite
        .txtTHOMitraCTMOffshoreNonDrilling2.BackColor = vbWhite
        .txtTHOMitraCTMOffshoreNonDrilling3.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDPrognosaCTMOffshoreNonDrilling.Value) = "" Then
        
            MsgBox "Masukkan ID prognosa CTM rig", vbOKOnly + vbInformation, "ID Prognosa CTM Rig"
            ValidateEntriesPrognosaCTMOffshoreNonDrilling = False
            .txtIDPrognosaCTMOffshoreNonDrilling.BackColor = vbRed
            .txtIDPrognosaCTMOffshoreNonDrilling.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbNamaRig.Value) = "" Then
        
            MsgBox "Masukkan nama rig", vbOKOnly + vbInformation, "Nama Rig"
            ValidateEntriesPrognosaCTMOffshoreNonDrilling = False
            .cmbNamaRig.BackColor = vbRed
            .cmbNamaRig.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtNamaTask.Value) = "" Then
        
            MsgBox "Masukkan nama tas", vbOKOnly + vbInformation, "Nama Task"
            ValidateEntriesPrognosaCTMOffshoreNonDrilling = False
            .txtNamaTask.BackColor = vbRed
            .txtNamaTask.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Masukkan nama client", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesPrognosaCTMOffshoreNonDrilling = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbIDKontrakCTMOffshoreNonDrilling1.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak CTM offshore non drilling 1", vbOKOnly + vbInformation, "ID Kontrak CTM Offshore Non Drilling"
            ValidateEntriesPrognosaCTMOffshoreNonDrilling = False
            .cmbIDKontrakCTMOffshoreNonDrilling1.BackColor = vbRed
            .cmbIDKontrakCTMOffshoreNonDrilling1.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDMitraCTMOffshoreNonDrilling1.Value) = "" Then
        
            MsgBox "Masukkan ID mitra CTM offshore non drilling 1", vbOKOnly + vbInformation, "THO Mitra CTM Offshore Non Drilling"
            ValidateEntriesPrognosaCTMOffshoreNonDrilling = False
            .cmbIDMitraCTMOffshoreNonDrilling1.BackColor = vbRed
            .cmbIDMitraCTMOffshoreNonDrilling1.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListPrognosaCTMOffshoreNonDrilling() As Long

    Dim i As Long
    
    Selected_ListPrognosaCTMOffshoreNonDrilling = 0
    
    For i = 0 To FormPrognosaCTMOffNonDrill.listDatabasePrognosaCTMOffshoreNonDrilling.ListCount - 1
        
        If FormPrognosaCTMOffNonDrill.listDatabasePrognosaCTMOffshoreNonDrilling.Selected(i) = True Then
        
            Selected_ListPrognosaCTMOffshoreNonDrilling = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub Image6_Click()
Call Calendar.SelectedDate(Me.txt_Start_Date)
End Sub

Private Sub Image7_Click()
Call Calendar.SelectedDate(Me.txt_End_Date)
End Sub

Private Sub UserForm_Initialize()
Me.txt_Start_Date.Value = Format(Date, "D-MMM-YYYY")
Me.txt_End_Date.Value = Format(Date, "D-MMM-YYYY")
Call ResetPrognosaCTMOffshoreNonDrilling
End Sub
Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListPrognosaCTMOffshoreNonDrilling = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 0), ThisWorkbook.Sheets("Prognosa_CTM_Off_Non_Drilling").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Prognosa_CTM_Off_Non_Drilling").Rows(iRow).Delete
    
    Call ResetPrognosaCTMOffshoreNonDrilling
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListPrognosaCTMOffshoreNonDrilling = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListPrognosaCTMOffshoreNonDrilling + 1
    
    Me.txtIDPrognosaCTMOffshoreNonDrilling.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 1)
     
    Me.cmbNamaRig.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 2)
    
    Me.txtNamaTask.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 3)
    
    Me.cmbNamaClient.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 4)
    
    Me.txt_Start_Date.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 5)
    
    Me.txt_End_Date.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 6)

    Me.cmbIDKontrakCTMOffshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 7)
    
    Me.txtTHOKontrakCTMOffshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 8)

    Me.cmbIDKontrakCTMOffshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 9)
    
    Me.txtTHOKontrakCTMOffshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 10)

    Me.cmbIDKontrakCTMOffshoreNonDrilling3.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 11)
    
    Me.txtTHOKontrakCTMOffshoreNonDrilling3.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 12)

    Me.cmbIDMitraCTMOffshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 13)
    
    Me.txtTHOMitraCTMOffshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 14)

    Me.cmbIDMitraCTMOffshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 15)
    
    Me.txtTHOMitraCTMOffshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 16)

    Me.cmbIDMitraCTMOffshoreNonDrilling3.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 17)
    
    Me.txtTHOMitraCTMOffshoreNonDrilling3.Value = Me.listDatabasePrognosaCTMOffshoreNonDrilling.List(Me.listDatabasePrognosaCTMOffshoreNonDrilling.ListIndex, 18)
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetPrognosaCTMOffshoreNonDrilling
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesPrognosaCTMOffshoreNonDrilling() = True Then
Call SubmitPrognosaCTMOffshoreNonDrilling
Call ResetPrognosaCTMOffshoreNonDrilling
End If
End Sub

Private Sub UserForm1_Initialize()
    Call ResetPrognosaCTMOffshoreNonDrilling
End Sub

Private Sub cmbIDKontrakCTMOffshoreNonDrilling1_Change()

If Me.cmbIDKontrakCTMOffshoreNonDrilling1.Value = "" Then Me.txtTHOKontrakCTMOffshoreNonDrilling1.Value = 0

If Me.cmbIDKontrakCTMOffshoreNonDrilling1.Value <> "" Then
    Me.txtTHOKontrakCTMOffshoreNonDrilling1.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMOffshoreNonDrilling1.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakCTMOffshoreNonDrilling2_Change()

If Me.cmbIDKontrakCTMOffshoreNonDrilling2.Value = "" Then Me.txtTHOKontrakCTMOffshoreNonDrilling2.Value = 0

If Me.cmbIDKontrakCTMOffshoreNonDrilling2.Value <> "" Then
    Me.txtTHOKontrakCTMOffshoreNonDrilling2.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMOffshoreNonDrilling2.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakCTMOffshoreNonDrilling3_Change()

If Me.cmbIDKontrakCTMOffshoreNonDrilling3.Value = "" Then Me.txtTHOKontrakCTMOffshoreNonDrilling3.Value = 0

If Me.cmbIDKontrakCTMOffshoreNonDrilling3.Value <> "" Then
    Me.txtTHOKontrakCTMOffshoreNonDrilling3.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMOffshoreNonDrilling3.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub


Private Sub cmbIDMitraCTMOffshoreNonDrilling1_Change()

If Me.cmbIDMitraCTMOffshoreNonDrilling1.Value = "" Then Me.txtTHOMitraCTMOffshoreNonDrilling1.Value = 0

If Me.cmbIDMitraCTMOffshoreNonDrilling1.Value <> "" Then
    Me.txtTHOMitraCTMOffshoreNonDrilling1.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMOffshoreNonDrilling1.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMOffshoreNonDrilling2_Change()

If Me.cmbIDMitraCTMOffshoreNonDrilling2.Value = "" Then Me.txtTHOMitraCTMOffshoreNonDrilling2.Value = 0

If Me.cmbIDMitraCTMOffshoreNonDrilling2.Value <> "" Then
    Me.txtTHOMitraCTMOffshoreNonDrilling2.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMOffshoreNonDrilling2.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMOffshoreNonDrilling3_Change()

If Me.cmbIDMitraCTMOffshoreNonDrilling3.Value = "" Then Me.txtTHOMitraCTMOffshoreNonDrilling3.Value = 0

If Me.cmbIDMitraCTMOffshoreNonDrilling3.Value <> "" Then
    Me.txtTHOMitraCTMOffshoreNonDrilling3.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMOffshoreNonDrilling3.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (E5) Prognosa CTM Onshore Non Drilling Data Entry:
Module:

Option Explicit
Sub ResetPrognosaCTMOnshoreNonDrilling()

    Dim iRow As Long
    
    iRow = [Counta(Prognosa_CTM_On_Non_Drilling!A:A)] ' idetifying the last row
    
    With FormPrognosaCTMOnNonDrill
    
        .txtIDPrognosaCTMOnshoreNonDrilling.Value = ""
        .txtFieldArea.Value = ""
        .cmbNamaRig.Value = ""
        .cmbJenisKegiatan.Value = ""
        .cmbIDKontrakCTMOnshoreNonDrilling1.Value = ""
        .cmbIDKontrakCTMOnshoreNonDrilling2.Value = ""
        .txtTHOKontrakCTMOnshoreNonDrilling1.Value = ""
        .txtTHOKontrakCTMOnshoreNonDrilling2.Value = ""
        .cmbIDMitraCTMOnshoreNonDrilling1.Value = ""
        .cmbIDMitraCTMOnshoreNonDrilling2.Value = ""
        .txtTHOMitraCTMOnshoreNonDrilling1.Value = ""
        .txtTHOMitraCTMOnshoreNonDrilling2.Value = ""
        .cmbBulan.Value = ""
        .txtRowNumber.Value = ""

        'Default Color
        
        .txtIDPrognosaCTMOnshoreNonDrilling.BackColor = vbWhite
        .txtFieldArea.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbJenisKegiatan.BackColor = vbWhite
        .cmbIDKontrakCTMOnshoreNonDrilling1.BackColor = vbWhite
        .cmbIDKontrakCTMOnshoreNonDrilling2.BackColor = vbWhite
        .txtTHOKontrakCTMOnshoreNonDrilling1.BackColor = vbWhite
        .txtTHOKontrakCTMOnshoreNonDrilling2.BackColor = vbWhite
        .cmbIDMitraCTMOnshoreNonDrilling1.BackColor = vbWhite
        .cmbIDMitraCTMOnshoreNonDrilling2.BackColor = vbWhite
        .txtTHOMitraCTMOnshoreNonDrilling1.BackColor = vbWhite
        .txtTHOMitraCTMOnshoreNonDrilling2.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        .cmbNamaRig.RowSource = "[Operasi1.xlsm]Rig!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        shSupportOnshoreNonDrilling.Range("A1", shSupportOnshoreNonDrilling.Range("A" & Application.Rows.Count).End(xlUp)).Name = "DynamicJenisKegiatanCTMOnshoreNonDrilling"
        
        .cmbJenisKegiatan.RowSource = "DynamicJenisKegiatanCTMOnshoreNonDrilling"

        shKontrakCTM.Range("B2", shKontrakCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicKontrakCTMOnshoreNonDrilling"
        
        .cmbIDKontrakCTMOnshoreNonDrilling1.RowSource = "DynamicKontrakCTMOnshoreNonDrilling"
        .cmbIDKontrakCTMOnshoreNonDrilling2.RowSource = "DynamicKontrakCTMOnshoreNonDrilling"
        
        shMitraCTM.Range("B2", shMitraCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicMitraCTMOnshoreNonDrilling"
        
        .cmbIDMitraCTMOnshoreNonDrilling1.RowSource = "DynamicMitraCTMOnshoreNonDrilling"
        .cmbIDMitraCTMOnshoreNonDrilling2.RowSource = "DynamicMitraCTMOnshoreNonDrilling"
        
        .cmbBulan.Clear
        
        .cmbBulan.AddItem "Januari"
        .cmbBulan.AddItem "Februari"
        .cmbBulan.AddItem "Maret"
        .cmbBulan.AddItem "April"
        .cmbBulan.AddItem "Mei"
        .cmbBulan.AddItem "Juni"
        .cmbBulan.AddItem "Juli"
        .cmbBulan.AddItem "Agustus"
        .cmbBulan.AddItem "September"
        .cmbBulan.AddItem "Oktober"
        .cmbBulan.AddItem "November"
        .cmbBulan.AddItem "Desember"

        '-----------------------------------------------
        
        .listDatabasePrognosaCTMOnshoreNonDrilling.ColumnCount = 19
        .listDatabasePrognosaCTMOnshoreNonDrilling.ColumnHeads = True
        
        .listDatabasePrognosaCTMOnshoreNonDrilling.ColumnWidths = "30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabasePrognosaCTMOnshoreNonDrilling.RowSource = "Prognosa_CTM_On_Non_Drilling!A2:S" & iRow
        Else
        
            .listDatabasePrognosaCTMOnshoreNonDrilling.RowSource = "Prognosa_CTM_On_Non_Drilling!A2:S2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormPrognosaCTMOnshoreNonDrilling()
    
    FormPrognosaCTMOnNonDrill.Show

End Sub

Sub SubmitPrognosaCTMOnshoreNonDrilling()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_On_Non_Drilling")
    
    If FormPrognosaCTMOnNonDrill.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Prognosa_CTM_On_Non_Drilling!A:A)] + 1
    Else
    
        iRow = FormPrognosaCTMOnNonDrill.txtRowNumber.Value
        
    End If
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormPrognosaCTMOnNonDrill.txtIDPrognosaCTMOnshoreNonDrilling.Value
        
        .Cells(iRow, 3) = FormPrognosaCTMOnNonDrill.txtFieldArea.Value
        
        .Cells(iRow, 4) = FormPrognosaCTMOnNonDrill.cmbNamaRig.Value
        
        .Cells(iRow, 5) = FormPrognosaCTMOnNonDrill.cmbJenisKegiatan.Value
        
        .Cells(iRow, 6) = FormPrognosaCTMOnNonDrill.cmbIDKontrakCTMOnshoreNonDrilling1.Value
        
        .Cells(iRow, 8) = FormPrognosaCTMOnNonDrill.cmbIDKontrakCTMOnshoreNonDrilling2.Value
        
        .Cells(iRow, 7) = FormPrognosaCTMOnNonDrill.txtTHOKontrakCTMOnshoreNonDrilling1.Value
        
        .Cells(iRow, 9) = FormPrognosaCTMOnNonDrill.txtTHOKontrakCTMOnshoreNonDrilling2.Value

        .Cells(iRow, 10) = FormPrognosaCTMOnNonDrill.cmbIDMitraCTMOnshoreNonDrilling1.Value
        
        .Cells(iRow, 12) = FormPrognosaCTMOnNonDrill.cmbIDMitraCTMOnshoreNonDrilling2.Value

        .Cells(iRow, 11) = FormPrognosaCTMOnNonDrill.txtTHOMitraCTMOnshoreNonDrilling1.Value
        
        .Cells(iRow, 13) = FormPrognosaCTMOnNonDrill.txtTHOMitraCTMOnshoreNonDrilling2.Value
        
        .Cells(iRow, 14) = FormPrognosaCTMOnNonDrill.cmbBulan.Value
        
        .Cells(iRow, 18) = Application.UserName
        
        .Cells(iRow, 19) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lrG As Integer
lrG = Application.WorksheetFunction.CountA(shPrognosaCTMOnNonDrilling.Range("A:A"))

'''' Put the formula
If lrG > 1 Then
     shPrognosaCTMOnNonDrilling.Range("G2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_On_Non_Drilling!F2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrG > 2 Then
     shPrognosaCTMOnNonDrilling.Range("G2:G" & lrG).FillDown
    End If
     shPrognosaCTMOnNonDrilling.Calculate
     shPrognosaCTMOnNonDrilling.UsedRange.Copy
     shPrognosaCTMOnNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrI As Integer
lrI = Application.WorksheetFunction.CountA(shPrognosaCTMOnNonDrilling.Range("A:A"))

'''' Put the formula
If lrI > 1 Then
     shPrognosaCTMOnNonDrilling.Range("I2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_On_Non_Drilling!H2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrI > 2 Then
     shPrognosaCTMOnNonDrilling.Range("I2:I" & lrI).FillDown
    End If
     shPrognosaCTMOnNonDrilling.Calculate
     shPrognosaCTMOnNonDrilling.UsedRange.Copy
     shPrognosaCTMOnNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If



Dim lrK As Integer
lrK = Application.WorksheetFunction.CountA(shPrognosaCTMOnNonDrilling.Range("A:A"))

'''' Put the formula
If lrK > 1 Then
     shPrognosaCTMOnNonDrilling.Range("O2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_On_Non_Drilling!J2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrK > 2 Then
     shPrognosaCTMOnNonDrilling.Range("O2:O" & lrK).FillDown
    End If
     shPrognosaCTMOnNonDrilling.Calculate
     shPrognosaCTMOnNonDrilling.UsedRange.Copy
     shPrognosaCTMOnNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrM As Integer
lrM = Application.WorksheetFunction.CountA(shPrognosaCTMOnNonDrilling.Range("A:A"))

'''' Put the formula
If lrM > 1 Then
     shPrognosaCTMOnNonDrilling.Range("Q2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_On_Non_Drilling!L2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrM > 2 Then
     shPrognosaCTMOnNonDrilling.Range("Q2:Q" & lrM).FillDown
    End If
     shPrognosaCTMOnNonDrilling.Calculate
     shPrognosaCTMOnNonDrilling.UsedRange.Copy
     shPrognosaCTMOnNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If



Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shPrognosaCTMOnNonDrilling.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
     shPrognosaCTMOnNonDrilling.Range("O2").Value = "=(G2+I2)/14350"
     shPrognosaCTMOnNonDrilling.Range("P2").Value = "=(K2+M2)/14350"
     shPrognosaCTMOnNonDrilling.Range("Q2").Value = "=O2-P2"
    
    If lr1 > 2 Then
     shPrognosaCTMOnNonDrilling.Range("O2:Q" & lr1).FillDown
    End If
     shPrognosaCTMOnNonDrilling.Calculate
     shPrognosaCTMOnNonDrilling.UsedRange.Copy
     shPrognosaCTMOnNonDrilling.UsedRange.PasteSpecial xlPasteValues
End If
    
End Sub

Function ValidateEntriesPrognosaCTMOnshoreNonDrilling() As Boolean

    ValidateEntriesPrognosaCTMOnshoreNonDrilling = True
    
    Dim iIDPrognosaCTMOnshoreNonDrilling As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_On_Non_Drilling")
        
    iIDPrognosaCTMOnshoreNonDrilling = FormPrognosaCTMOnNonDrill.txtIDPrognosaCTMOnshoreNonDrilling.Value
    
    With FormPrognosaCTMOnNonDrill
        
        'Default Color
        
        .txtIDPrognosaCTMOnshoreNonDrilling.BackColor = vbWhite
        .txtFieldArea.BackColor = vbWhite
        .cmbNamaRig.BackColor = vbWhite
        .cmbJenisKegiatan.BackColor = vbWhite
        .cmbIDKontrakCTMOnshoreNonDrilling1.BackColor = vbWhite
        .cmbIDKontrakCTMOnshoreNonDrilling2.BackColor = vbWhite
        .txtTHOKontrakCTMOnshoreNonDrilling1.BackColor = vbWhite
        .txtTHOKontrakCTMOnshoreNonDrilling2.BackColor = vbWhite
        .cmbIDMitraCTMOnshoreNonDrilling1.BackColor = vbWhite
        .cmbIDMitraCTMOnshoreNonDrilling2.BackColor = vbWhite
        .txtTHOMitraCTMOnshoreNonDrilling1.BackColor = vbWhite
        .txtTHOMitraCTMOnshoreNonDrilling2.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDPrognosaCTMOnshoreNonDrilling.Value) = "" Then
        
            MsgBox "Masukkan ID prognosa CTM onshore non drilling", vbOKOnly + vbInformation, "ID Prognosa CTM Onshore Non Drilling"
            ValidateEntriesPrognosaCTMOnshoreNonDrilling = False
            .txtIDPrognosaCTMOnshoreNonDrilling.BackColor = vbRed
            .txtIDPrognosaCTMOnshoreNonDrilling.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtFieldArea.Value) = "" Then
        
            MsgBox "Masukkan field/area", vbOKOnly + vbInformation, "Field/Area"
            ValidateEntriesPrognosaCTMOnshoreNonDrilling = False
            .txtFieldArea.BackColor = vbRed
            .txtFieldArea.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaRig.Value) = "" Then
        
            MsgBox "Masukkan nama rig", vbOKOnly + vbInformation, "Nama Rig"
            ValidateEntriesPrognosaCTMOnshoreNonDrilling = False
            .cmbNamaRig.BackColor = vbRed
            .cmbNamaRig.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbJenisKegiatan.Value) = "" Then
        
            MsgBox "Masukkan jenis kegiatan", vbOKOnly + vbInformation, "Jenis Kegiatan"
            ValidateEntriesPrognosaCTMOnshoreNonDrilling = False
            .cmbJenisKegiatan.BackColor = vbRed
            .cmbJenisKegiatan.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbIDKontrakCTMOnshoreNonDrilling1.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak CTM 1", vbOKOnly + vbInformation, "ID Kontrak CTM"
            ValidateEntriesPrognosaCTMOnshoreNonDrilling = False
            .cmbIDKontrakCTMOnshoreNonDrilling1.BackColor = vbRed
            .cmbIDKontrakCTMOnshoreNonDrilling1.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDMitraCTMOnshoreNonDrilling1.Value) = "" Then
        
            MsgBox "Masukkan ID mitra CTM 1", vbOKOnly + vbInformation, "THO Mitra CTM"
            ValidateEntriesPrognosaCTMOnshoreNonDrilling = False
            .cmbIDMitraCTMOnshoreNonDrilling1.BackColor = vbRed
            .cmbIDMitraCTMOnshoreNonDrilling1.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbBulan.Value) = "" Then
        
            MsgBox "Masukkan bulan", vbOKOnly + vbInformation, "Bulan"
            ValidateEntriesPrognosaCTMOnshoreNonDrilling = False
            .cmbBulan.BackColor = vbRed
            .cmbBulan.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListPrognosaCTMOnshoreNonDrilling() As Long

    Dim i As Long
    
    Selected_ListPrognosaCTMOnshoreNonDrilling = 0
    
    For i = 0 To FormPrognosaCTMOnNonDrill.listDatabasePrognosaCTMOnshoreNonDrilling.ListCount - 1
        
        If FormPrognosaCTMOnNonDrill.listDatabasePrognosaCTMOnshoreNonDrilling.Selected(i) = True Then
        
            Selected_ListPrognosaCTMOnshoreNonDrilling = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListPrognosaCTMOnshoreNonDrilling = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 0), ThisWorkbook.Sheets("Prognosa_CTM_On_Non_Drilling").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Prognosa_CTM_On_Non_Drilling").Rows(iRow).Delete
    
    Call ResetPrognosaCTMOnshoreNonDrilling
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListPrognosaCTMOnshoreNonDrilling = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListPrognosaCTMOnshoreNonDrilling + 1
    
    Me.txtIDPrognosaCTMOnshoreNonDrilling.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 1)
    
    Me.txtFieldArea.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 2)
    
    Me.cmbNamaRig.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 3)
    
    Me.cmbJenisKegiatan.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 4)

    Me.cmbIDKontrakCTMOnshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 5)
    
    Me.txtTHOKontrakCTMOnshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 6)

    Me.cmbIDKontrakCTMOnshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 7)
    
    Me.txtTHOKontrakCTMOnshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 8)

    Me.cmbIDMitraCTMOnshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 9)
    
    Me.txtTHOMitraCTMOnshoreNonDrilling1.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 10)

    Me.cmbIDMitraCTMOnshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 11)
    
    Me.txtTHOMitraCTMOnshoreNonDrilling2.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 12)

    Me.cmbBulan.Value = Me.listDatabasePrognosaCTMOnshoreNonDrilling.List(Me.listDatabasePrognosaCTMOnshoreNonDrilling.ListIndex, 13)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetPrognosaCTMOnshoreNonDrilling
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesPrognosaCTMOnshoreNonDrilling() = True Then
Call SubmitPrognosaCTMOnshoreNonDrilling
Call ResetPrognosaCTMOnshoreNonDrilling
End If
End Sub

Private Sub UserForm_Initialize()
    Call ResetPrognosaCTMOnshoreNonDrilling
End Sub

Private Sub cmbIDKontrakCTMOnshoreNonDrilling1_Change()

If Me.cmbIDKontrakCTMOnshoreNonDrilling1.Value = "" Then Me.txtTHOKontrakCTMOnshoreNonDrilling1.Value = 0

If Me.cmbIDKontrakCTMOnshoreNonDrilling1.Value <> "" Then
    Me.txtTHOKontrakCTMOnshoreNonDrilling1.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMOnshoreNonDrilling1.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakCTMOnshoreNonDrilling2_Change()

If Me.cmbIDKontrakCTMOnshoreNonDrilling2.Value = "" Then Me.txtTHOKontrakCTMOnshoreNonDrilling2.Value = 0

If Me.cmbIDKontrakCTMOnshoreNonDrilling2.Value <> "" Then
    Me.txtTHOKontrakCTMOnshoreNonDrilling2.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMOnshoreNonDrilling2.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub


Private Sub cmbIDMitraCTMOnshoreNonDrilling1_Change()

If Me.cmbIDMitraCTMOnshoreNonDrilling1.Value = "" Then Me.txtTHOMitraCTMOnshoreNonDrilling1.Value = 0

If Me.cmbIDMitraCTMOnshoreNonDrilling1.Value <> "" Then
    Me.txtTHOMitraCTMOnshoreNonDrilling1.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMOnshoreNonDrilling1.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMOnshoreNonDrilling2_Change()

If Me.cmbIDMitraCTMOnshoreNonDrilling2.Value = "" Then Me.txtTHOMitraCTMOnshoreNonDrilling2.Value = 0

If Me.cmbIDMitraCTMOnshoreNonDrilling2.Value <> "" Then
    Me.txtTHOMitraCTMOnshoreNonDrilling2.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMOnshoreNonDrilling2.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (E6) Prognosa CTM Rig Data Entry:
Module:

Option Explicit
Sub ResetPrognosaCTMRig()

    Dim iRow As Long
    
    iRow = [Counta(Prognosa_CTM_Rig!A:A)] ' idetifying the last row
    
    With FormPrognosaCTMRig
    
        .txtIDPrognosaCTMRig.Value = ""
        .txtNamaProject.Value = ""
        .txtProductivity.Value = ""
        .cmbNamaClient.Value = ""
        .cmbIDKontrakCTMRig1.Value = ""
        .cmbIDKontrakCTMRig2.Value = ""
        .txtTHOKontrakCTMRig1.Value = ""
        .txtTHOKontrakCTMRig2.Value = ""
        .cmbIDMitraCTMRig1.Value = ""
        .cmbIDMitraCTMRig2.Value = ""
        .txtTHOMitraCTMRig1.Value = ""
        .txtTHOMitraCTMRig2.Value = ""
        .cmbBulan.Value = ""
        .txtPerkiraanHariOperasi.Value = ""
        .txtRowNumber.Value = ""

        'Default Color
        
        .txtIDPrognosaCTMRig.BackColor = vbWhite
        .txtNamaProject.BackColor = vbWhite
        .txtProductivity.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbIDKontrakCTMRig1.BackColor = vbWhite
        .cmbIDKontrakCTMRig2.BackColor = vbWhite
        .txtTHOKontrakCTMRig1.BackColor = vbWhite
        .txtTHOKontrakCTMRig2.BackColor = vbWhite
        .cmbIDMitraCTMRig1.BackColor = vbWhite
        .cmbIDMitraCTMRig2.BackColor = vbWhite
        .txtTHOMitraCTMRig1.BackColor = vbWhite
        .txtTHOMitraCTMRig2.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtPerkiraanHariOperasi.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        
        .cmbNamaClient.RowSource = "[Operasi1.xlsm]Client!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        shKontrakCTM.Range("B2", shKontrakCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicKontrakCTMRig"
        
        .cmbIDKontrakCTMRig1.RowSource = "DynamicKontrakCTMRig"
        .cmbIDKontrakCTMRig2.RowSource = "DynamicKontrakCTMRig"
        
        shMitraCTM.Range("B2", shMitraCTM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicMitraCTMRig"
        
        .cmbIDMitraCTMRig1.RowSource = "DynamicMitraCTMRig"
        .cmbIDMitraCTMRig2.RowSource = "DynamicMitraCTMRig"
        
        .cmbBulan.Clear
        
        .cmbBulan.AddItem "Januari"
        .cmbBulan.AddItem "Februari"
        .cmbBulan.AddItem "Maret"
        .cmbBulan.AddItem "April"
        .cmbBulan.AddItem "Mei"
        .cmbBulan.AddItem "Juni"
        .cmbBulan.AddItem "Juli"
        .cmbBulan.AddItem "Agustus"
        .cmbBulan.AddItem "September"
        .cmbBulan.AddItem "Oktober"
        .cmbBulan.AddItem "November"
        .cmbBulan.AddItem "Desember"

        '-----------------------------------------------
        
        .listDatabasePrognosaCTMRig.ColumnCount = 20
        .listDatabasePrognosaCTMRig.ColumnHeads = True
        
        .listDatabasePrognosaCTMRig.ColumnWidths = "30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabasePrognosaCTMRig.RowSource = "Prognosa_CTM_Rig!A2:T" & iRow
        Else
        
            .listDatabasePrognosaCTMRig.RowSource = "Prognosa_CTM_Rig!A2:T2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormPrognosaCTMRig()
    
    FormPrognosaCTMRig.Show

End Sub

Sub SubmitPrognosaCTMRig()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_Rig")
    
    If FormPrognosaCTMRig.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Prognosa_CTM_Rig!A:A)] + 1
    Else
    
        iRow = FormPrognosaCTMRig.txtRowNumber.Value
        
    End If
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormPrognosaCTMRig.txtIDPrognosaCTMRig.Value
        
        .Cells(iRow, 3) = FormPrognosaCTMRig.txtNamaProject.Value
        
        .Cells(iRow, 4) = FormPrognosaCTMRig.txtProductivity.Value
        
        .Cells(iRow, 5) = FormPrognosaCTMRig.cmbNamaClient.Value
        
        .Cells(iRow, 6) = FormPrognosaCTMRig.cmbIDKontrakCTMRig1.Value
        
        .Cells(iRow, 8) = FormPrognosaCTMRig.cmbIDKontrakCTMRig2.Value
        
        .Cells(iRow, 7) = FormPrognosaCTMRig.txtTHOKontrakCTMRig1.Value
        
        .Cells(iRow, 9) = FormPrognosaCTMRig.txtTHOKontrakCTMRig2.Value

        .Cells(iRow, 10) = FormPrognosaCTMRig.cmbIDMitraCTMRig1.Value
        
        .Cells(iRow, 12) = FormPrognosaCTMRig.cmbIDMitraCTMRig2.Value

        .Cells(iRow, 11) = FormPrognosaCTMRig.txtTHOMitraCTMRig1.Value
        
        .Cells(iRow, 13) = FormPrognosaCTMRig.txtTHOMitraCTMRig2.Value
        
        .Cells(iRow, 14) = FormPrognosaCTMRig.cmbBulan.Value
        
        .Cells(iRow, 15) = FormPrognosaCTMRig.txtPerkiraanHariOperasi.Value
        
        .Cells(iRow, 19) = Application.UserName
        
        .Cells(iRow, 20) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lrG As Integer
lrG = Application.WorksheetFunction.CountA(shPrognosaCTMRig.Range("A:A"))

'''' Put the formula
If lrG > 1 Then
    shPrognosaCTMRig.Range("G2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Rig!F2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrG > 2 Then
    shPrognosaCTMRig.Range("G2:G" & lrG).FillDown
    End If
    shPrognosaCTMRig.Calculate
    shPrognosaCTMRig.UsedRange.Copy
    shPrognosaCTMRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrI As Integer
lrI = Application.WorksheetFunction.CountA(shPrognosaCTMRig.Range("A:A"))

'''' Put the formula
If lrI > 1 Then
    shPrognosaCTMRig.Range("I2").Value = "=IFERROR(INDEX(Kontrak_CTM!$E:$E,MATCH(Prognosa_CTM_Rig!H2,Kontrak_CTM!$B:$B,FALSE),1),0)"
    
    If lrI > 2 Then
    shPrognosaCTMRig.Range("I2:I" & lrI).FillDown
    End If
    shPrognosaCTMRig.Calculate
    shPrognosaCTMRig.UsedRange.Copy
    shPrognosaCTMRig.UsedRange.PasteSpecial xlPasteValues
End If



Dim lrK As Integer
lrK = Application.WorksheetFunction.CountA(shPrognosaCTMRig.Range("A:A"))

'''' Put the formula
If lrK > 1 Then
    shPrognosaCTMRig.Range("K2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Rig!J2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrK > 2 Then
    shPrognosaCTMRig.Range("K2:K" & lrK).FillDown
    End If
    shPrognosaCTMRig.Calculate
    shPrognosaCTMRig.UsedRange.Copy
    shPrognosaCTMRig.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrM As Integer
lrM = Application.WorksheetFunction.CountA(shPrognosaCTMRig.Range("A:A"))

'''' Put the formula
If lrM > 1 Then
    shPrognosaCTMRig.Range("M2").Value = "=IFERROR(INDEX(Mitra_CTM!$D:$D,MATCH(Prognosa_CTM_Rig!L2,Mitra_CTM!$B:$B,FALSE),1),0)"
    
    If lrM > 2 Then
    shPrognosaCTMRig.Range("M2:M" & lrM).FillDown
    End If
    shPrognosaCTMRig.Calculate
    shPrognosaCTMRig.UsedRange.Copy
    shPrognosaCTMRig.UsedRange.PasteSpecial xlPasteValues
End If



Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shPrognosaCTMRig.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
    shPrognosaCTMRig.Range("P2").Value = "=(O2*D2*(G2+I2))/14350"
    shPrognosaCTMRig.Range("Q2").Value = "=(O2*D2*(K2+M2))/14350"
    shPrognosaCTMRig.Range("R2").Value = "=P2-Q2"
    
    If lr1 > 2 Then
    shPrognosaCTMRig.Range("P2:R" & lr1).FillDown
    End If
    shPrognosaCTMRig.Calculate
    shPrognosaCTMRig.UsedRange.Copy
    shPrognosaCTMRig.UsedRange.PasteSpecial xlPasteValues
End If
    
End Sub

Function ValidateEntriesPrognosaCTMRig() As Boolean

    ValidateEntriesPrognosaCTMRig = True
    
    Dim iIDPrognosaCTMRig As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Prognosa_CTM_Rig")
        
    iIDPrognosaCTMRig = FormPrognosaCTMRig.txtIDPrognosaCTMRig.Value
    
    With FormPrognosaCTMRig
        
        'Default Color
        
        .txtIDPrognosaCTMRig.BackColor = vbWhite
        .txtNamaProject.BackColor = vbWhite
        .txtProductivity.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbIDKontrakCTMRig1.BackColor = vbWhite
        .cmbIDKontrakCTMRig2.BackColor = vbWhite
        .txtTHOKontrakCTMRig1.BackColor = vbWhite
        .txtTHOKontrakCTMRig2.BackColor = vbWhite
        .cmbIDMitraCTMRig1.BackColor = vbWhite
        .cmbIDMitraCTMRig2.BackColor = vbWhite
        .txtTHOMitraCTMRig1.BackColor = vbWhite
        .txtTHOMitraCTMRig2.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtPerkiraanHariOperasi.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDPrognosaCTMRig.Value) = "" Then
        
            MsgBox "Masukkan ID prognosa CTM rig", vbOKOnly + vbInformation, "ID Prognosa CTM Rig"
            ValidateEntriesPrognosaCTMRig = False
            .txtIDPrognosaCTMRig.BackColor = vbRed
            .txtIDPrognosaCTMRig.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtNamaProject.Value) = "" Then
        
            MsgBox "Masukkan nama project", vbOKOnly + vbInformation, "Nama Project"
            ValidateEntriesPrognosaCTMRig = False
            .txtNamaProject.BackColor = vbRed
            .txtNamaProject.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtProductivity.Value) = "" Then
        
            MsgBox "Masukkan productivity", vbOKOnly + vbInformation, "Productivity"
            ValidateEntriesPrognosaCTMRig = False
            .txtProductivity.BackColor = vbRed
            .txtProductivity.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Masukkan nama client", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesPrognosaCTMRig = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbIDKontrakCTMRig1.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak CTM 1", vbOKOnly + vbInformation, "ID Kontrak CTM Rig"
            ValidateEntriesPrognosaCTMRig = False
            .cmbIDKontrakCTMRig1.BackColor = vbRed
            .cmbIDKontrakCTMRig1.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDMitraCTMRig1.Value) = "" Then
        
            MsgBox "Masukkan ID mitra CTM 1", vbOKOnly + vbInformation, "THO Mitra CTM Rig"
            ValidateEntriesPrognosaCTMRig = False
            .cmbIDMitraCTMRig1.BackColor = vbRed
            .cmbIDMitraCTMRig1.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbBulan.Value) = "" Then
        
            MsgBox "Masukkan bulan", vbOKOnly + vbInformation, "Bulan"
            ValidateEntriesPrognosaCTMRig = False
            .cmbBulan.BackColor = vbRed
            .cmbBulan.SetFocus
            Exit Function
            
        End If
        

        If Trim(.txtPerkiraanHariOperasi.Value) = "" Then
        
            MsgBox "Masukkan perkiraan hari operasi", vbOKOnly + vbInformation, "Perkiraan Hari Operasi"
            ValidateEntriesPrognosaCTMRig = False
            .txtPerkiraanHariOperasi.BackColor = vbRed
            .txtPerkiraanHariOperasi.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListPrognosaCTMRig() As Long

    Dim i As Long
    
    Selected_ListPrognosaCTMRig = 0
    
    For i = 0 To FormPrognosaCTMRig.listDatabasePrognosaCTMRig.ListCount - 1
        
        If FormPrognosaCTMRig.listDatabasePrognosaCTMRig.Selected(i) = True Then
        
            Selected_ListPrognosaCTMRig = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListPrognosaCTMRig = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 0), ThisWorkbook.Sheets("Prognosa_CTM_Rig").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Prognosa_CTM_Rig").Rows(iRow).Delete
    
    Call ResetPrognosaCTMRig
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListPrognosaCTMRig = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListPrognosaCTMRig + 1
    
    Me.txtIDPrognosaCTMRig.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 1)
    
    Me.txtNamaProject.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 2)
    
    Me.txtProductivity.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 3)
    
    Me.cmbNamaClient.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 4)

    Me.cmbIDKontrakCTMRig1.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 5)
    
    Me.txtTHOKontrakCTMRig1.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 6)

    Me.cmbIDKontrakCTMRig2.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 7)
    
    Me.txtTHOKontrakCTMRig2.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 8)

    Me.cmbIDMitraCTMRig1.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 9)
    
    Me.txtTHOMitraCTMRig1.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 10)

    Me.cmbIDMitraCTMRig2.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 11)
    
    Me.txtTHOMitraCTMRig2.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 12)

    Me.cmbBulan.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 13)
    
    Me.txtPerkiraanHariOperasi.Value = Me.listDatabasePrognosaCTMRig.List(Me.listDatabasePrognosaCTMRig.ListIndex, 14)

    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetPrognosaCTMRig
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesPrognosaCTMRig() = True Then
Call SubmitPrognosaCTMRig
Call ResetPrognosaCTMRig
End If
End Sub

Private Sub UserForm_Initialize()
    Call ResetPrognosaCTMRig
End Sub

Private Sub cmbIDKontrakCTMRig1_Change()

If Me.cmbIDKontrakCTMRig1.Value = "" Then Me.txtTHOKontrakCTMRig1.Value = 0

If Me.cmbIDKontrakCTMRig1.Value <> "" Then
    Me.txtTHOKontrakCTMRig1.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMRig1.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakCTMRig2_Change()

If Me.cmbIDKontrakCTMRig2.Value = "" Then Me.txtTHOKontrakCTMRig2.Value = 0

If Me.cmbIDKontrakCTMRig2.Value <> "" Then
    Me.txtTHOKontrakCTMRig2.Value = Format(Application.WorksheetFunction.Index(shKontrakCTM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakCTMRig2.Value, shKontrakCTM.Range("B:B"), False), 1))
End If

End Sub


Private Sub cmbIDMitraCTMRig1_Change()

If Me.cmbIDMitraCTMRig1.Value = "" Then Me.txtTHOMitraCTMRig1.Value = 0

If Me.cmbIDMitraCTMRig1.Value <> "" Then
    Me.txtTHOMitraCTMRig1.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMRig1.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraCTMRig2_Change()

If Me.cmbIDMitraCTMRig2.Value = "" Then Me.txtTHOMitraCTMRig2.Value = 0

If Me.cmbIDMitraCTMRig2.Value <> "" Then
    Me.txtTHOMitraCTMRig2.Value = Format(Application.WorksheetFunction.Index(shMitraCTM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraCTMRig2.Value, shMitraCTM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbBulan_Change()

If Me.cmbBulan.Value = "" Then Me.txtPerkiraanHariOperasi.Value = 0

If Me.cmbBulan.Value <> "" Then
    Me.txtPerkiraanHariOperasi.Value = Format(Application.WorksheetFunction.Index(shSupportBulan.Range("B:B"), Application.WorksheetFunction.Match(Me.cmbBulan.Value, shSupportBulan.Range("A:A"), False), 1))
End If

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (F) IPM:
``````````````````````````````````````````````````````````````````````````````````````````````
# (F1) Kontrak IPM Data Entry:
Module:

Option Explicit
Sub ResetKontrakIPM()

    Dim iRow As Long
    
    iRow = [Counta(Kontrak_IPM!A:A)] ' idetifying the last row
    
    With FormKontrakIPM
    
        .txtIDKontrakIPM.Value = ""
        .cmbIDKontrakAll.Value = ""
        .txtDeskripsiKegiatanKontrakIPM.Value = ""
        .txtTHOKontrakIPM.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDKontrakIPM.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtDeskripsiKegiatanKontrakIPM.BackColor = vbWhite
        .txtTHOKontrakIPM.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        '[Operasi1.xlsm]Client.Range"("B2", "[Operasi1.xlsm]Client".Range("B" & Application.Rows.Count).End(xlUp)).Name
        
        .cmbIDKontrakAll.RowSource = "[MD1.xlsm]Kontrak_All!B2:B" & Range("B" & Rows.Count).End(xlUp).Row
        '-----------------------------------------------
        
        .listDatabaseKontrakIPM.ColumnCount = 7
        .listDatabaseKontrakIPM.ColumnHeads = True
        
        .listDatabaseKontrakIPM.ColumnWidths = "30,40,50,90,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseKontrakIPM.RowSource = "Kontrak_IPM!A2:G" & iRow
        Else
        
            .listDatabaseKontrakIPM.RowSource = "Kontrak_IPM!A2:G2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormKontrakIPM()
    
    FormKontrakIPM.Show

End Sub

Sub SubmitKontrakIPM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Kontrak_IPM")
    
    If FormKontrakIPM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Kontrak_IPM!A:A)] + 1
    Else
    
        iRow = FormKontrakIPM.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormKontrakIPM.txtIDKontrakIPM.Value
        
        .Cells(iRow, 3) = FormKontrakIPM.cmbIDKontrakAll.Value
        
        .Cells(iRow, 4) = FormKontrakIPM.txtDeskripsiKegiatanKontrakIPM.Value
        
        .Cells(iRow, 5) = FormKontrakIPM.txtTHOKontrakIPM.Value
        
        .Cells(iRow, 6) = Application.UserName
        
        .Cells(iRow, 7) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesKontrakIPM() As Boolean

    ValidateEntriesKontrakIPM = True
    
    Dim iIDKontrakIPM As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Kontrak_IPM")
        
    iIDKontrakIPM = FormKontrakIPM.txtIDKontrakIPM.Value
    
    With FormKontrakIPM
    
        'Default Color
        
        .txtIDKontrakIPM.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtDeskripsiKegiatanKontrakIPM.BackColor = vbWhite
        .txtTHOKontrakIPM.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDKontrakIPM.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak IPM", vbOKOnly + vbInformation, "Nama Kontrak IPM"
            ValidateEntriesKontrakIPM = False
            .txtIDKontrakIPM.BackColor = vbRed
            .txtIDKontrakIPM.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDKontrakAll.Value) = "" Then
        
            MsgBox "Please select client from drop-down.", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesKontrakIPM = False
            .cmbIDKontrakAll.BackColor = vbRed
            .cmbIDKontrakAll.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtDeskripsiKegiatanKontrakIPM.Value) = "" Then
        
            MsgBox "Masukkan deskripsi kegiatan kontrak IPM", vbOKOnly + vbInformation, "Deskripsi Kegiatan Kontrak IPM"
            ValidateEntriesKontrakIPM = False
            .txtDeskripsiKegiatanKontrakIPM.BackColor = vbRed
            .txtDeskripsiKegiatanKontrakIPM.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTHOKontrakIPM.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak IPM", vbOKOnly + vbInformation, "THO Kontrak IPM"
            ValidateEntriesKontrakIPM = False
            .txtTHOKontrakIPM.BackColor = vbRed
            .txtTHOKontrakIPM.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListKontrakIPM() As Long

    Dim i As Long
    
    Selected_ListKontrakIPM = 0
    
    For i = 0 To FormKontrakIPM.listDatabaseKontrakIPM.ListCount - 1
        
        If FormKontrakIPM.listDatabaseKontrakIPM.Selected(i) = True Then
        
            Selected_ListKontrakIPM = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListKontrakIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseKontrakIPM.List(Me.listDatabaseKontrakIPM.ListIndex, 0), ThisWorkbook.Sheets("Kontrak_IPM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Kontrak_IPM").Rows(iRow).Delete
    
    Call ResetKontrakIPM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListKontrakIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListKontrakIPM + 1
    
    Me.txtIDKontrakIPM.Value = Me.listDatabaseKontrakIPM.List(Me.listDatabaseKontrakIPM.ListIndex, 1)

    Me.cmbIDKontrakAll.Value = Me.listDatabaseKontrakIPM.List(Me.listDatabaseKontrakIPM.ListIndex, 2)
    
    Me.txtDeskripsiKegiatanKontrakIPM.Value = Me.listDatabaseKontrakIPM.List(Me.listDatabaseKontrakIPM.ListIndex, 3)
    
    Me.txtTHOKontrakIPM.Value = Me.listDatabaseKontrakIPM.List(Me.listDatabaseKontrakIPM.ListIndex, 4)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetKontrakIPM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesKontrakIPM() = True Then
    
        Call SubmitKontrakIPM
        Call ResetKontrakIPM
    End If
    
End Sub


Private Sub UserForm_Initialize()

    Call ResetKontrakIPM

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (F2) Mitra IPM Data Entry:
Module:

Option Explicit

Sub ResetMitraIPM()

    Dim iRow As Long
    
    iRow = [Counta(Mitra_IPM!A:A)] ' idetifying the last row
    
    With FormMitraIPM
    
        .txtIDMitraIPM.Value = ""
        .txtDeskripsiKegiatanMitraIPM.Value = ""
        .txtTHOMitraIPM.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDMitraIPM.BackColor = vbWhite
        .txtDeskripsiKegiatanMitraIPM.BackColor = vbWhite
        .txtTHOMitraIPM.BackColor = vbWhite

        '-----------------------------------------------
        
        .listDatabaseMitraIPM.ColumnCount = 6
        .listDatabaseMitraIPM.ColumnHeads = True
        
        .listDatabaseMitraIPM.ColumnWidths = "30,40,90,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseMitraIPM.RowSource = "Mitra_IPM!A2:F" & iRow
        Else
        
            .listDatabaseMitraIPM.RowSource = "Mitra_IPM!A2:F2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormMitraIPM()
    
    FormMitraIPM.Show

End Sub

Sub SubmitMitraIPM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Mitra_IPM")
    
    If FormMitraIPM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Mitra_IPM!A:A)] + 1
    Else
    
        iRow = FormMitraIPM.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormMitraIPM.txtIDMitraIPM.Value
        
        .Cells(iRow, 3) = FormMitraIPM.txtDeskripsiKegiatanMitraIPM.Value
        
        .Cells(iRow, 4) = FormMitraIPM.txtTHOMitraIPM.Value
        
        .Cells(iRow, 5) = Application.UserName
        
        .Cells(iRow, 6) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesMitraIPM() As Boolean

    ValidateEntriesMitraIPM = True
    
    Dim iIDMitraIPM As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Mitra_IPM")
        
    iIDMitraIPM = FormMitraIPM.txtIDMitraIPM.Value
    
    With FormMitraIPM
    
        'Default Color
        
        .txtIDMitraIPM.BackColor = vbWhite
        .txtDeskripsiKegiatanMitraIPM.BackColor = vbWhite
        .txtTHOMitraIPM.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDMitraIPM.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak partnership", vbOKOnly + vbInformation, "Nama Mitra partnership"
            ValidateEntriesMitraIPM = False
            .txtIDMitraIPM.BackColor = vbRed
            .txtIDMitraIPM.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtDeskripsiKegiatanMitraIPM.Value) = "" Then
        
            MsgBox "Masukkan deskripsi kegiatan kontrak partnership", vbOKOnly + vbInformation, "Deskripsi Kegiatan Mitra IPM"
            ValidateEntriesMitraIPM = False
            .txtDeskripsiKegiatanMitraIPM.BackColor = vbRed
            .txtDeskripsiKegiatanMitraIPM.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTHOMitraIPM.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak partnership", vbOKOnly + vbInformation, "THO Mitra IPM"
            ValidateEntriesMitraIPM = False
            .txtTHOMitraIPM.BackColor = vbRed
            .txtTHOMitraIPM.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListMitraIPM() As Long

    Dim i As Long
    
    Selected_ListMitraIPM = 0
    
    For i = 0 To FormMitraIPM.listDatabaseMitraIPM.ListCount - 1
        
        If FormMitraIPM.listDatabaseMitraIPM.Selected(i) = True Then
        
            Selected_ListMitraIPM = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListMitraIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseMitraIPM.List(Me.listDatabaseMitraIPM.ListIndex, 0), ThisWorkbook.Sheets("Mitra_IPM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Mitra_IPM").Rows(iRow).Delete
    
    Call ResetMitraIPM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListMitraIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListMitraIPM + 1
    
    Me.txtIDMitraIPM.Value = Me.listDatabaseMitraIPM.List(Me.listDatabaseMitraIPM.ListIndex, 1)
    
    Me.txtDeskripsiKegiatanMitraIPM.Value = Me.listDatabaseMitraIPM.List(Me.listDatabaseMitraIPM.ListIndex, 2)
    
    Me.txtTHOMitraIPM.Value = Me.listDatabaseMitraIPM.List(Me.listDatabaseMitraIPM.ListIndex, 3)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetMitraIPM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesMitraIPM() = True Then
    
        Call SubmitMitraIPM
        Call ResetMitraIPM
    End If
    
End Sub


Private Sub UserForm_Initialize()

    Call ResetMitraIPM

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (F3) Prognosa IPM Data Entry:
Module:

Option Explicit
Sub ResetPrognosaIPM()

    Dim iRow As Long
    
    iRow = [Counta(Prognosa_IPM!A:A)] ' idetifying the last row
    
    With FormPrognosaIPM
    
        .txtIDPrognosaIPM.Value = ""
        .cmbNamaClient.Value = ""
        .cmbService.Value = ""
        .cmbNamaProject.Value = ""
        .cmbIDKontrakIPM1.Value = ""
        .cmbIDKontrakIPM2.Value = ""
        .cmbIDKontrakIPM3.Value = ""
        .cmbIDKontrakIPM4.Value = ""
        .txtTHOKontrakIPM1.Value = ""
        .txtTHOKontrakIPM2.Value = ""
        .txtTHOKontrakIPM3.Value = ""
        .txtTHOKontrakIPM4.Value = ""
        .cmbIDMitraIPM1.Value = ""
        .cmbIDMitraIPM2.Value = ""
        .cmbIDMitraIPM3.Value = ""
        .cmbIDMitraIPM4.Value = ""
        .txtTHOMitraIPM1.Value = ""
        .txtTHOMitraIPM2.Value = ""
        .txtTHOMitraIPM3.Value = ""
        .txtTHOMitraIPM4.Value = ""
        .txtDeskripsiPekerjaan.Value = ""
        .cmbBulan.Value = ""
        .txtVolumeUnit.Value = ""
        .txtRowNumber.Value = ""

        'Default Color
        
        .txtIDPrognosaIPM.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbService.BackColor = vbWhite
        .cmbNamaProject.BackColor = vbWhite
        .cmbIDKontrakIPM1.BackColor = vbWhite
        .cmbIDKontrakIPM2.BackColor = vbWhite
        .cmbIDKontrakIPM3.BackColor = vbWhite
        .cmbIDKontrakIPM4.BackColor = vbWhite
        .txtTHOKontrakIPM1.BackColor = vbWhite
        .txtTHOKontrakIPM2.BackColor = vbWhite
        .txtTHOKontrakIPM3.BackColor = vbWhite
        .txtTHOKontrakIPM4.BackColor = vbWhite
        .cmbIDMitraIPM1.BackColor = vbWhite
        .cmbIDMitraIPM2.BackColor = vbWhite
        .cmbIDMitraIPM3.BackColor = vbWhite
        .cmbIDMitraIPM4.BackColor = vbWhite
        .txtTHOMitraIPM1.BackColor = vbWhite
        .txtTHOMitraIPM2.BackColor = vbWhite
        .txtTHOMitraIPM3.BackColor = vbWhite
        .txtTHOMitraIPM4.BackColor = vbWhite
        .txtDeskripsiPekerjaan.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtVolumeUnit.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        
        .cmbNamaClient.RowSource = "[Operasi1.xlsm]Client!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        shSupportIPM.Range("A1", shSupportIPM.Range("A" & Application.Rows.Count).End(xlUp)).Name = "DynamicService"
        
        .cmbService.RowSource = "DynamicService"
        
        shProjectListIPM.Range("B2", shProjectListIPM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicProjectList"
        
        .cmbNamaProject.RowSource = "DynamicProjectList"
        
        shKontrakIPM.Range("B2", shKontrakIPM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicKontrakIPM"
        
        .cmbIDKontrakIPM1.RowSource = "DynamicKontrakIPM"
        .cmbIDKontrakIPM2.RowSource = "DynamicKontrakIPM"
        .cmbIDKontrakIPM3.RowSource = "DynamicKontrakIPM"
        .cmbIDKontrakIPM4.RowSource = "DynamicKontrakIPM"
        
        shMitraIPM.Range("B2", shMitraIPM.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicMitraIPM"
        
        .cmbIDMitraIPM1.RowSource = "DynamicMitraIPM"
        .cmbIDMitraIPM2.RowSource = "DynamicMitraIPM"
        .cmbIDMitraIPM3.RowSource = "DynamicMitraIPM"
        .cmbIDMitraIPM4.RowSource = "DynamicMitraIPM"
        
        .cmbBulan.Clear
        
        .cmbBulan.AddItem "Januari"
        .cmbBulan.AddItem "Februari"
        .cmbBulan.AddItem "Maret"
        .cmbBulan.AddItem "April"
        .cmbBulan.AddItem "Mei"
        .cmbBulan.AddItem "Juni"
        .cmbBulan.AddItem "Juli"
        .cmbBulan.AddItem "Agustus"
        .cmbBulan.AddItem "September"
        .cmbBulan.AddItem "Oktober"
        .cmbBulan.AddItem "November"
        .cmbBulan.AddItem "Desember"

        '-----------------------------------------------
        
        .listDatabasePrognosaIPM.ColumnCount = 29
        .listDatabasePrognosaIPM.ColumnHeads = True
        
        .listDatabasePrognosaIPM.ColumnWidths = "30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabasePrognosaIPM.RowSource = "Prognosa_IPM!A2:AC" & iRow
        Else
        
            .listDatabasePrognosaIPM.RowSource = "Prognosa_IPM!A2:AC2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormPrognosaIPM()
    
    FormPrognosaIPM.Show

End Sub

Sub SubmitPrognosaIPM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Prognosa_IPM")
    
    If FormPrognosaIPM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Prognosa_IPM!A:A)] + 1
    Else
    
        iRow = FormPrognosaIPM.txtRowNumber.Value
        
    End If
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormPrognosaIPM.txtIDPrognosaIPM.Value
        
        .Cells(iRow, 3) = FormPrognosaIPM.cmbNamaClient.Value
        
        .Cells(iRow, 4) = FormPrognosaIPM.cmbService.Value
        
        .Cells(iRow, 5) = FormPrognosaIPM.cmbNamaProject.Value
        
        .Cells(iRow, 6) = FormPrognosaIPM.cmbIDKontrakIPM1.Value
        
        .Cells(iRow, 8) = FormPrognosaIPM.cmbIDKontrakIPM2.Value

        .Cells(iRow, 10) = FormPrognosaIPM.cmbIDKontrakIPM3.Value

        .Cells(iRow, 12) = FormPrognosaIPM.cmbIDKontrakIPM4.Value
        
        .Cells(iRow, 7) = FormPrognosaIPM.txtTHOKontrakIPM1.Value
        
        .Cells(iRow, 9) = FormPrognosaIPM.txtTHOKontrakIPM2.Value

        .Cells(iRow, 11) = FormPrognosaIPM.txtTHOKontrakIPM3.Value

        .Cells(iRow, 13) = FormPrognosaIPM.txtTHOKontrakIPM4.Value

        .Cells(iRow, 14) = FormPrognosaIPM.cmbIDMitraIPM1.Value
        
        .Cells(iRow, 16) = FormPrognosaIPM.cmbIDMitraIPM2.Value

        .Cells(iRow, 18) = FormPrognosaIPM.cmbIDMitraIPM3.Value

        .Cells(iRow, 20) = FormPrognosaIPM.cmbIDMitraIPM4.Value

        .Cells(iRow, 15) = FormPrognosaIPM.txtTHOMitraIPM1.Value
        
        .Cells(iRow, 17) = FormPrognosaIPM.txtTHOMitraIPM2.Value
        
        .Cells(iRow, 19) = FormPrognosaIPM.txtTHOMitraIPM3.Value
        
        .Cells(iRow, 21) = FormPrognosaIPM.txtTHOMitraIPM4.Value
        
        .Cells(iRow, 22) = FormPrognosaIPM.txtDeskripsiPekerjaan.Value
        
        .Cells(iRow, 23) = FormPrognosaIPM.cmbBulan.Value

        .Cells(iRow, 24) = FormPrognosaIPM.txtVolumeUnit.Value
        
        .Cells(iRow, 28) = Application.UserName
        
        .Cells(iRow, 29) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lrG As Integer
lrG = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrG > 1 Then
    shPrognosaIPM.Range("G2").Value = "=IFERROR(INDEX(Kontrak_IPM!$E:$E,MATCH(Prognosa_IPM!F2,Kontrak_IPM!$B:$B,FALSE),1),0)"
    
    If lrG > 2 Then
    shPrognosaIPM.Range("G2:G" & lrG).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrI As Integer
lrI = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrI > 1 Then
    shPrognosaIPM.Range("I2").Value = "=IFERROR(INDEX(Kontrak_IPM!$E:$E,MATCH(Prognosa_IPM!H2,Kontrak_IPM!$B:$B,FALSE),1),0)"
    
    If lrI > 2 Then
    shPrognosaIPM.Range("I2:I" & lrI).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrK As Integer
lrK = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrK > 1 Then
    shPrognosaIPM.Range("K2").Value = "=IFERROR(INDEX(Kontrak_IPM!$E:$E,MATCH(Prognosa_IPM!J2,Kontrak_IPM!$B:$B,FALSE),1),0)"
    
    If lrK > 2 Then
    shPrognosaIPM.Range("K2:K" & lrK).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrM As Integer
lrM = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrM > 1 Then
    shPrognosaIPM.Range("M2").Value = "=IFERROR(INDEX(Kontrak_IPM!$E:$E,MATCH(Prognosa_IPM!L2,Kontrak_IPM!$B:$B,FALSE),1),0)"
    
    If lrM > 2 Then
    shPrognosaIPM.Range("M2:M" & lrM).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrO As Integer
lrO = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrO > 1 Then
    shPrognosaIPM.Range("O2").Value = "=IFERROR(INDEX(Mitra_IPM!$D:$D,MATCH(Prognosa_IPM!N2,Mitra_IPM!$B:$B,FALSE),1),0)"
    
    If lrO > 2 Then
    shPrognosaIPM.Range("O2:O" & lrO).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrQ As Integer
lrQ = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrQ > 1 Then
    shPrognosaIPM.Range("Q2").Value = "=IFERROR(INDEX(Mitra_IPM!$D:$D,MATCH(Prognosa_IPM!P2,Mitra_IPM!$B:$B,FALSE),1),0)"
    
    If lrQ > 2 Then
    shPrognosaIPM.Range("Q2:Q" & lrQ).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrS As Integer
lrS = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrS > 1 Then
    shPrognosaIPM.Range("S2").Value = "=IFERROR(INDEX(Mitra_IPM!$D:$D,MATCH(Prognosa_IPM!R2,Mitra_IPM!$B:$B,FALSE),1),0)"
    
    If lrS > 2 Then
    shPrognosaIPM.Range("S2:S" & lrS).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrU As Integer
lrU = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lrU > 1 Then
    shPrognosaIPM.Range("U2").Value = "=IFERROR(INDEX(Mitra_IPM!$D:$D,MATCH(Prognosa_IPM!T2,Mitra_IPM!$B:$B,FALSE),1),0)"
    
    If lrU > 2 Then
    shPrognosaIPM.Range("U2:U" & lrU).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If

Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shPrognosaIPM.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
    shPrognosaIPM.Range("Y2").Value = "=(X2*(G2+I2+K2+M2))/14350"
    shPrognosaIPM.Range("Z2").Value = "=(X2*(O2+Q2+S2+U2))/14350"
    shPrognosaIPM.Range("AA2").Value = "=Y2-Z2"
    
    If lr1 > 2 Then
    shPrognosaIPM.Range("Y2:AA" & lr1).FillDown
    End If
    shPrognosaIPM.Calculate
    shPrognosaIPM.UsedRange.Copy
    shPrognosaIPM.UsedRange.PasteSpecial xlPasteValues
End If
    
End Sub

Function ValidateEntriesPrognosaIPM() As Boolean

    ValidateEntriesPrognosaIPM = True
    
    Dim iIDPrognosaIPM As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Prognosa_IPM")
        
    iIDPrognosaIPM = FormPrognosaIPM.txtIDPrognosaIPM.Value
    
    With FormPrognosaIPM
        
        'Default Color
        
        .txtIDPrognosaIPM.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbService.BackColor = vbWhite
        .cmbNamaProject.BackColor = vbWhite
        .cmbIDKontrakIPM1.BackColor = vbWhite
        .cmbIDKontrakIPM2.BackColor = vbWhite
        .cmbIDKontrakIPM3.BackColor = vbWhite
        .cmbIDKontrakIPM4.BackColor = vbWhite
        .txtTHOKontrakIPM1.BackColor = vbWhite
        .txtTHOKontrakIPM2.BackColor = vbWhite
        .txtTHOKontrakIPM3.BackColor = vbWhite
        .txtTHOKontrakIPM4.BackColor = vbWhite
        .cmbIDMitraIPM1.BackColor = vbWhite
        .cmbIDMitraIPM2.BackColor = vbWhite
        .cmbIDMitraIPM3.BackColor = vbWhite
        .cmbIDMitraIPM4.BackColor = vbWhite
        .txtTHOMitraIPM1.BackColor = vbWhite
        .txtTHOMitraIPM2.BackColor = vbWhite
        .txtTHOMitraIPM3.BackColor = vbWhite
        .txtTHOMitraIPM4.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtVolumeUnit.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        
        If Trim(.txtIDPrognosaIPM.Value) = "" Then
        
            MsgBox "Masukkan ID prognosa partnership", vbOKOnly + vbInformation, "ID Prognosa IPM"
            ValidateEntriesPrognosaIPM = False
            .txtIDPrognosaIPM.BackColor = vbRed
            .txtIDPrognosaIPM.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Masukkan nama client", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesPrognosaIPM = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbService.Value) = "" Then
        
            MsgBox "Masukkan jenis service", vbOKOnly + vbInformation, "Jenis Service"
            ValidateEntriesPrognosaIPM = False
            .cmbService.BackColor = vbRed
            .cmbService.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaProject.Value) = "" Then
        
            MsgBox "Masukkan nama project", vbOKOnly + vbInformation, "Nama Project"
            ValidateEntriesPrognosaIPM = False
            .cmbNamaProject.BackColor = vbRed
            .cmbNamaProject.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbIDKontrakIPM1.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak partnership 1", vbOKOnly + vbInformation, "ID Kontrak IPM 1"
            ValidateEntriesPrognosaIPM = False
            .cmbIDKontrakIPM1.BackColor = vbRed
            .cmbIDKontrakIPM1.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDMitraIPM1.Value) = "" Then
        
            MsgBox "Masukkan ID mitra partnership 1", vbOKOnly + vbInformation, "THO Mitra IPM"
            ValidateEntriesPrognosaIPM = False
            .cmbIDMitraIPM1.BackColor = vbRed
            .cmbIDMitraIPM1.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbBulan.Value) = "" Then
        
            MsgBox "Masukkan bulan", vbOKOnly + vbInformation, "Bulan"
            ValidateEntriesPrognosaIPM = False
            .cmbBulan.BackColor = vbRed
            .cmbBulan.SetFocus
            Exit Function
            
        End If
        

        If Trim(.txtVolumeUnit.Value) = "" Then
        
            MsgBox "Masukkan volume/unit", vbOKOnly + vbInformation, "Volume / Unit"
            ValidateEntriesPrognosaIPM = False
            .txtVolumeUnit.BackColor = vbRed
            .txtVolumeUnit.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtDeskripsiPekerjaan.Value) = "" Then
        
            MsgBox "Masukkan deskripsi pekerjaan", vbOKOnly + vbInformation, "Deskripsi Pekerjaan"
            ValidateEntriesPrognosaIPM = False
            .txtDeskripsiPekerjaan.BackColor = vbRed
            .txtDeskripsiPekerjaan.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListPrognosaIPM() As Long

    Dim i As Long
    
    Selected_ListPrognosaIPM = 0
    
    For i = 0 To FormPrognosaIPM.listDatabasePrognosaIPM.ListCount - 1
        
        If FormPrognosaIPM.listDatabasePrognosaIPM.Selected(i) = True Then
        
            Selected_ListPrognosaIPM = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListPrognosaIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 0), ThisWorkbook.Sheets("Prognosa_IPM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Prognosa_IPM").Rows(iRow).Delete
    
    Call ResetPrognosaIPM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListPrognosaIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListPrognosaIPM + 1
    
    Me.txtIDPrognosaIPM.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 1)
    
    Me.cmbNamaClient.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 2)
    
    Me.cmbService.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 3)
    
    Me.cmbNamaProject.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 4)

    Me.cmbIDKontrakIPM1.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 5)
    
    Me.txtTHOKontrakIPM1.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 6)

    Me.cmbIDKontrakIPM2.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 7)
    
    Me.txtTHOKontrakIPM2.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 8)

    Me.cmbIDKontrakIPM3.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 9)
    
    Me.txtTHOKontrakIPM3.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 10)

    Me.cmbIDKontrakIPM4.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 11)
    
    Me.txtTHOKontrakIPM4.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 12)

    Me.cmbIDMitraIPM1.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 13)
    
    Me.txtTHOMitraIPM1.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 14)

    Me.cmbIDMitraIPM2.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 15)
    
    Me.txtTHOMitraIPM2.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 16)

    Me.cmbIDMitraIPM3.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 17)
    
    Me.txtTHOMitraIPM3.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 18)

    Me.cmbIDMitraIPM4.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 19)
    
    Me.txtTHOMitraIPM4.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 20)

    Me.txtDeskripsiPekerjaan.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 21)
    
    Me.cmbBulan.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 22)
    
    Me.txtVolumeUnit.Value = Me.listDatabasePrognosaIPM.List(Me.listDatabasePrognosaIPM.ListIndex, 23)

    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetPrognosaIPM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesPrognosaIPM() = True Then
Call SubmitPrognosaIPM
Call ResetPrognosaIPM
End If
End Sub

Private Sub UserForm_Initialize()
    Call ResetPrognosaIPM
End Sub

Private Sub cmbIDKontrakIPM1_Change()

If Me.cmbIDKontrakIPM1.Value = "" Then Me.txtTHOKontrakIPM1.Value = 0

If Me.cmbIDKontrakIPM1.Value <> "" Then
    Me.txtTHOKontrakIPM1.Value = Format(Application.WorksheetFunction.Index(shKontrakIPM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakIPM1.Value, shKontrakIPM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakIPM2_Change()

If Me.cmbIDKontrakIPM2.Value = "" Then Me.txtTHOKontrakIPM2.Value = 0

If Me.cmbIDKontrakIPM2.Value <> "" Then
    Me.txtTHOKontrakIPM2.Value = Format(Application.WorksheetFunction.Index(shKontrakIPM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakIPM2.Value, shKontrakIPM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakIPM3_Change()

If Me.cmbIDKontrakIPM3.Value = "" Then Me.txtTHOKontrakIPM3.Value = 0

If Me.cmbIDKontrakIPM3.Value <> "" Then
    Me.txtTHOKontrakIPM3.Value = Format(Application.WorksheetFunction.Index(shKontrakIPM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakIPM3.Value, shKontrakIPM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakIPM4_Change()

If Me.cmbIDKontrakIPM4.Value = "" Then Me.txtTHOKontrakIPM4.Value = 0

If Me.cmbIDKontrakIPM4.Value <> "" Then
    Me.txtTHOKontrakIPM4.Value = Format(Application.WorksheetFunction.Index(shKontrakIPM.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakIPM4.Value, shKontrakIPM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraIPM1_Change()

If Me.cmbIDMitraIPM1.Value = "" Then Me.txtTHOMitraIPM1.Value = 0

If Me.cmbIDMitraIPM1.Value <> "" Then
    Me.txtTHOMitraIPM1.Value = Format(Application.WorksheetFunction.Index(shMitraIPM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraIPM1.Value, shMitraIPM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraIPM2_Change()

If Me.cmbIDMitraIPM2.Value = "" Then Me.txtTHOMitraIPM2.Value = 0

If Me.cmbIDMitraIPM2.Value <> "" Then
    Me.txtTHOMitraIPM2.Value = Format(Application.WorksheetFunction.Index(shMitraIPM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraIPM2.Value, shMitraIPM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraIPM3_Change()

If Me.cmbIDMitraIPM3.Value = "" Then Me.txtTHOMitraIPM3.Value = 0

If Me.cmbIDMitraIPM3.Value <> "" Then
    Me.txtTHOMitraIPM3.Value = Format(Application.WorksheetFunction.Index(shMitraIPM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraIPM3.Value, shMitraIPM.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraIPM4_Change()

If Me.cmbIDMitraIPM4.Value = "" Then Me.txtTHOMitraIPM4.Value = 0

If Me.cmbIDMitraIPM4.Value <> "" Then
    Me.txtTHOMitraIPM4.Value = Format(Application.WorksheetFunction.Index(shMitraIPM.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraIPM4.Value, shMitraIPM.Range("B:B"), False), 1))
End If

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (F4) Project List IPM Data Entry:
Module:

Option Explicit
Sub ResetProjectListIPM()

    Dim iRow As Long
    
    iRow = [Counta(Project_List_IPM!A:A)] ' idetifying the last row
    
    With FormProjectListIPM
    
        .txtNamaProject.Value = ""
        .txt_Start_Date.Value = ""
        .txt_End_Date.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtNamaProject.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        '-----------------------------------------------
        
        .listDatabaseProjectListIPM.ColumnCount = 6
        .listDatabaseProjectListIPM.ColumnHeads = True
        
        .listDatabaseProjectListIPM.ColumnWidths = "30,90,60,60,50,70"
        
        If iRow > 1 Then
        
            .listDatabaseProjectListIPM.RowSource = "Project_List_IPM!A2:F" & iRow
        Else
        
            .listDatabaseProjectListIPM.RowSource = "Project_List_IPM!A2:F2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormProjectListIPM()
    
    FormProjectListIPM.Show

End Sub

Sub SubmitProjectListIPM()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Project_List_IPM")
    
    If FormProjectListIPM.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Project_List_IPM!A:A)] + 1
    Else
    
        iRow = FormProjectListIPM.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormProjectListIPM.txtNamaProject.Value
        
        .Cells(iRow, 3) = FormProjectListIPM.txt_Start_Date.Value
        
        .Cells(iRow, 4) = FormProjectListIPM.txt_End_Date.Value
        
        .Cells(iRow, 5) = Application.UserName
        
        .Cells(iRow, 6) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesProjectListIPM() As Boolean

    ValidateEntriesProjectListIPM = True
    
    Dim iNamaProject As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Project_List_IPM")
        
    iNamaProject = FormProjectListIPM.txtNamaProject.Value
    
    With FormProjectListIPM
    
        'Default Color
        
        .txtNamaProject.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtNamaProject.Value) = "" Then
        
            MsgBox "Masukkan nama project", vbOKOnly + vbInformation, "Nama Project"
            ValidateEntriesProjectListIPM = False
            .txtNamaProject.BackColor = vbRed
            .txtNamaProject.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txt_Start_Date.Value) = "" Then
        
            MsgBox "Masukkan tanggal mulai project", vbOKOnly + vbInformation, "Tanggal Mulai Project"
            ValidateEntriesProjectListIPM = False
            .txt_Start_Date.BackColor = vbRed
            .txt_Start_Date.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txt_End_Date.Value) = "" Then
        
            MsgBox "Masukkan tanggal selesai project", vbOKOnly + vbInformation, "Tanggal Selesai Project"
            ValidateEntriesProjectListIPM = False
            .txt_End_Date.BackColor = vbRed
            .txt_End_Date.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListProjectListIPM() As Long

    Dim i As Long
    
    Selected_ListProjectListIPM = 0
    
    For i = 0 To FormProjectListIPM.listDatabaseProjectListIPM.ListCount - 1
        
        If FormProjectListIPM.listDatabaseProjectListIPM.Selected(i) = True Then
        
            Selected_ListProjectListIPM = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub Image6_Click()
Call Calendar.SelectedDate(Me.txt_Start_Date)
End Sub

Private Sub Image7_Click()
Call Calendar.SelectedDate(Me.txt_End_Date)
End Sub

Private Sub UserForm_Initialize()
Me.txt_Start_Date.Value = Format(Date, "D-MMM-YYYY")
Me.txt_End_Date.Value = Format(Date, "D-MMM-YYYY")
Call ResetProjectListIPM
End Sub


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListProjectListIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseProjectListIPM.List(Me.listDatabaseProjectListIPM.ListIndex, 0), ThisWorkbook.Sheets("Project_List_IPM").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Project_List_IPM").Rows(iRow).Delete
    
    Call ResetProjectListIPM
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListProjectListIPM = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListProjectListIPM + 1
    
    Me.txtNamaProject.Value = Me.listDatabaseProjectListIPM.List(Me.listDatabaseProjectListIPM.ListIndex, 1)
    
    Me.txt_Start_Date.Value = Me.listDatabaseProjectListIPM.List(Me.listDatabaseProjectListIPM.ListIndex, 2)
    
    Me.txt_End_Date.Value = Me.listDatabaseProjectListIPM.List(Me.listDatabaseProjectListIPM.ListIndex, 3)
            
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetProjectListIPM
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesProjectListIPM() = True Then
    
        Call SubmitProjectListIPM
        Call ResetProjectListIPM
    End If
    
End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (G) Partnership:
``````````````````````````````````````````````````````````````````````````````````````````````
# (G1) Kontrak Partnership Data Entry:
Module:

Option Explicit
Sub ResetKontrakPartnership()

    Dim iRow As Long
    
    iRow = [Counta(Kontrak_Partner!A:A)] ' idetifying the last row
    
    With FormKontrakPartnership
    
        .txtIDKontrakPartnership.Value = ""
        .cmbIDKontrakAll.Value = ""
        .txtDeskripsiKegiatanKontrakPartnership.Value = ""
        .txtTHOKontrakPartnership.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDKontrakPartnership.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtDeskripsiKegiatanKontrakPartnership.BackColor = vbWhite
        .txtTHOKontrakPartnership.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        '[Operasi1.xlsm]Client.Range"("B2", "[Operasi1.xlsm]Client".Range("B" & Application.Rows.Count).End(xlUp)).Name
        
        .cmbIDKontrakAll.RowSource = "[MD1.xlsm]Kontrak_All!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        '-----------------------------------------------
        
        .listDatabaseKontrakPartnership.ColumnCount = 7
        .listDatabaseKontrakPartnership.ColumnHeads = True
        
        .listDatabaseKontrakPartnership.ColumnWidths = "30,40,50,90,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseKontrakPartnership.RowSource = "Kontrak_Partner!A2:G" & iRow
        Else
        
            .listDatabaseKontrakPartnership.RowSource = "Kontrak_Partner!A2:G2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormKontrakPartnership()
    
    FormKontrakPartnership.Show

End Sub

Sub SubmitKontrakPartnership()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Kontrak_Partner")
    
    If FormKontrakPartnership.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Kontrak_Partner!A:A)] + 1
    Else
    
        iRow = FormKontrakPartnership.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormKontrakPartnership.txtIDKontrakPartnership.Value
        
        .Cells(iRow, 3) = FormKontrakPartnership.cmbIDKontrakAll.Value
        
        .Cells(iRow, 4) = FormKontrakPartnership.txtDeskripsiKegiatanKontrakPartnership.Value
        
        .Cells(iRow, 5) = FormKontrakPartnership.txtTHOKontrakPartnership.Value
        
        .Cells(iRow, 6) = Application.UserName
        
        .Cells(iRow, 7) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesKontrakPartnership() As Boolean

    ValidateEntriesKontrakPartnership = True
    
    Dim iIDKontrakPartnership As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Kontrak_Partner")
        
    iIDKontrakPartnership = FormKontrakPartnership.txtIDKontrakPartnership.Value
    
    With FormKontrakPartnership
    
        'Default Color
        
        .txtIDKontrakPartnership.BackColor = vbWhite
        .cmbIDKontrakAll.BackColor = vbWhite
        .txtDeskripsiKegiatanKontrakPartnership.BackColor = vbWhite
        .txtTHOKontrakPartnership.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDKontrakPartnership.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak partnership", vbOKOnly + vbInformation, "Nama Kontrak partnership"
            ValidateEntriesKontrakPartnership = False
            .txtIDKontrakPartnership.BackColor = vbRed
            .txtIDKontrakPartnership.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDKontrakAll.Value) = "" Then
        
            MsgBox "Please select client from drop-down.", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesKontrakPartnership = False
            .cmbIDKontrakAll.BackColor = vbRed
            .cmbIDKontrakAll.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtDeskripsiKegiatanKontrakPartnership.Value) = "" Then
        
            MsgBox "Masukkan deskripsi kegiatan kontrak partnership", vbOKOnly + vbInformation, "Deskripsi Kegiatan Kontrak Partnership"
            ValidateEntriesKontrakPartnership = False
            .txtDeskripsiKegiatanKontrakPartnership.BackColor = vbRed
            .txtDeskripsiKegiatanKontrakPartnership.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTHOKontrakPartnership.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak partnership", vbOKOnly + vbInformation, "THO Kontrak Partnership"
            ValidateEntriesKontrakPartnership = False
            .txtTHOKontrakPartnership.BackColor = vbRed
            .txtTHOKontrakPartnership.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListKontrakPartnership() As Long

    Dim i As Long
    
    Selected_ListKontrakPartnership = 0
    
    For i = 0 To FormKontrakPartnership.listDatabaseKontrakPartnership.ListCount - 1
        
        If FormKontrakPartnership.listDatabaseKontrakPartnership.Selected(i) = True Then
        
            Selected_ListKontrakPartnership = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListKontrakPartnership = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseKontrakPartnership.List(Me.listDatabaseKontrakPartnership.ListIndex, 0), ThisWorkbook.Sheets("Kontrak_Partner").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Kontrak_Partner").Rows(iRow).Delete
    
    Call ResetKontrakPartnership
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListKontrakPartnership = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListKontrakPartnership + 1
    
    Me.txtIDKontrakPartnership.Value = Me.listDatabaseKontrakPartnership.List(Me.listDatabaseKontrakPartnership.ListIndex, 1)

    Me.cmbIDKontrakAll.Value = Me.listDatabaseKontrakPartnership.List(Me.listDatabaseKontrakPartnership.ListIndex, 2)
    
    Me.txtDeskripsiKegiatanKontrakPartnership.Value = Me.listDatabaseKontrakPartnership.List(Me.listDatabaseKontrakPartnership.ListIndex, 3)
    
    Me.txtTHOKontrakPartnership.Value = Me.listDatabaseKontrakPartnership.List(Me.listDatabaseKontrakPartnership.ListIndex, 4)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetKontrakPartnership
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesKontrakPartnership() = True Then
    
        Call SubmitKontrakPartnership
        Call ResetKontrakPartnership
    End If
    
End Sub


Private Sub UserForm_Initialize()

    Call ResetKontrakPartnership

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (G2) Mitra Partnership Data Entry:
Module:

Option Explicit

Sub ResetMitraPartnership()

    Dim iRow As Long
    
    iRow = [Counta(Mitra_Partner!A:A)] ' idetifying the last row
    
    With FormMitraPartnership
    
        .txtIDMitraPartnership.Value = ""
        .txtDeskripsiKegiatanMitraPartnership.Value = ""
        .txtTHOMitraPartnership.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtIDMitraPartnership.BackColor = vbWhite
        .txtDeskripsiKegiatanMitraPartnership.BackColor = vbWhite
        .txtTHOMitraPartnership.BackColor = vbWhite

        '-----------------------------------------------
        
        .listDatabaseMitraPartnership.ColumnCount = 6
        .listDatabaseMitraPartnership.ColumnHeads = True
        
        .listDatabaseMitraPartnership.ColumnWidths = "30,40,90,60,70,70"
        
        If iRow > 1 Then
        
            .listDatabaseMitraPartnership.RowSource = "Mitra_Partner!A2:F" & iRow
        Else
        
            .listDatabaseMitraPartnership.RowSource = "Mitra_Partner!A2:F2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormMitraPartnership()
    
    FormMitraPartnership.Show

End Sub

Sub SubmitMitraPartnership()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Mitra_Partner")
    
    If FormMitraPartnership.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Mitra_Partner!A:A)] + 1
    Else
    
        iRow = FormMitraPartnership.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormMitraPartnership.txtIDMitraPartnership.Value
        
        .Cells(iRow, 3) = FormMitraPartnership.txtDeskripsiKegiatanMitraPartnership.Value
        
        .Cells(iRow, 4) = FormMitraPartnership.txtTHOMitraPartnership.Value
        
        .Cells(iRow, 5) = Application.UserName
        
        .Cells(iRow, 6) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesMitraPartnership() As Boolean

    ValidateEntriesMitraPartnership = True
    
    Dim iIDMitraPartnership As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Mitra_Partner")
        
    iIDMitraPartnership = FormMitraPartnership.txtIDMitraPartnership.Value
    
    With FormMitraPartnership
    
        'Default Color
        
        .txtIDMitraPartnership.BackColor = vbWhite
        .txtDeskripsiKegiatanMitraPartnership.BackColor = vbWhite
        .txtTHOMitraPartnership.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtIDMitraPartnership.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak partnership", vbOKOnly + vbInformation, "Nama Mitra partnership"
            ValidateEntriesMitraPartnership = False
            .txtIDMitraPartnership.BackColor = vbRed
            .txtIDMitraPartnership.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtDeskripsiKegiatanMitraPartnership.Value) = "" Then
        
            MsgBox "Masukkan deskripsi kegiatan kontrak partnership", vbOKOnly + vbInformation, "Deskripsi Kegiatan Mitra Partnership"
            ValidateEntriesMitraPartnership = False
            .txtDeskripsiKegiatanMitraPartnership.BackColor = vbRed
            .txtDeskripsiKegiatanMitraPartnership.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txtTHOMitraPartnership.Value) = "" Then
        
            MsgBox "Masukkan THO kontrak partnership", vbOKOnly + vbInformation, "THO Mitra Partnership"
            ValidateEntriesMitraPartnership = False
            .txtTHOMitraPartnership.BackColor = vbRed
            .txtTHOMitraPartnership.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListMitraPartnership() As Long

    Dim i As Long
    
    Selected_ListMitraPartnership = 0
    
    For i = 0 To FormMitraPartnership.listDatabaseMitraPartnership.ListCount - 1
        
        If FormMitraPartnership.listDatabaseMitraPartnership.Selected(i) = True Then
        
            Selected_ListMitraPartnership = i + 1
            Exit For
        End If
        
    Next i


End Function


``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListMitraPartnership = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseMitraPartnership.List(Me.listDatabaseMitraPartnership.ListIndex, 0), ThisWorkbook.Sheets("Mitra_Partner").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Mitra_Partner").Rows(iRow).Delete
    
    Call ResetMitraPartnership
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListMitraPartnership = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListMitraPartnership + 1
    
    Me.txtIDMitraPartnership.Value = Me.listDatabaseMitraPartnership.List(Me.listDatabaseMitraPartnership.ListIndex, 1)
    
    Me.txtDeskripsiKegiatanMitraPartnership.Value = Me.listDatabaseMitraPartnership.List(Me.listDatabaseMitraPartnership.ListIndex, 2)
    
    Me.txtTHOMitraPartnership.Value = Me.listDatabaseMitraPartnership.List(Me.listDatabaseMitraPartnership.ListIndex, 3)
    
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetMitraPartnership
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesMitraPartnership() = True Then
    
        Call SubmitMitraPartnership
        Call ResetMitraPartnership
    End If
    
End Sub


Private Sub UserForm_Initialize()

    Call ResetMitraPartnership

End Sub


``````````````````````````````````````````````````````````````````````````````````````````````
# (G3) Prognosa Partnership Data Entry:
Module:

Option Explicit
Sub ResetPrognosaPartnership()

    Dim iRow As Long
    
    iRow = [Counta(Prognosa_Partner!A:A)] ' idetifying the last row
    
    With FormPrognosaPartnership
    
        .txtIDPrognosaPartnership.Value = ""
        .cmbNamaClient.Value = ""
        .cmbService.Value = ""
        .cmbNamaProject.Value = ""
        .cmbIDKontrakPartnership1.Value = ""
        .cmbIDKontrakPartnership2.Value = ""
        .cmbIDKontrakPartnership3.Value = ""
        .cmbIDKontrakPartnership4.Value = ""
        .txtTHOKontrakPartnership1.Value = ""
        .txtTHOKontrakPartnership2.Value = ""
        .txtTHOKontrakPartnership3.Value = ""
        .txtTHOKontrakPartnership4.Value = ""
        .cmbIDMitraPartnership1.Value = ""
        .cmbIDMitraPartnership2.Value = ""
        .cmbIDMitraPartnership3.Value = ""
        .cmbIDMitraPartnership4.Value = ""
        .txtTHOMitraPartnership1.Value = ""
        .txtTHOMitraPartnership2.Value = ""
        .txtTHOMitraPartnership3.Value = ""
        .txtTHOMitraPartnership4.Value = ""
        .txtDeskripsiPekerjaan.Value = ""
        .cmbBulan.Value = ""
        .txtVolumeUnit.Value = ""
        .txtRowNumber.Value = ""

        'Default Color
        
        .txtIDPrognosaPartnership.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbService.BackColor = vbWhite
        .cmbNamaProject.BackColor = vbWhite
        .cmbIDKontrakPartnership1.BackColor = vbWhite
        .cmbIDKontrakPartnership2.BackColor = vbWhite
        .cmbIDKontrakPartnership3.BackColor = vbWhite
        .cmbIDKontrakPartnership4.BackColor = vbWhite
        .txtTHOKontrakPartnership1.BackColor = vbWhite
        .txtTHOKontrakPartnership2.BackColor = vbWhite
        .txtTHOKontrakPartnership3.BackColor = vbWhite
        .txtTHOKontrakPartnership4.BackColor = vbWhite
        .cmbIDMitraPartnership1.BackColor = vbWhite
        .cmbIDMitraPartnership2.BackColor = vbWhite
        .cmbIDMitraPartnership3.BackColor = vbWhite
        .cmbIDMitraPartnership4.BackColor = vbWhite
        .txtTHOMitraPartnership1.BackColor = vbWhite
        .txtTHOMitraPartnership2.BackColor = vbWhite
        .txtTHOMitraPartnership3.BackColor = vbWhite
        .txtTHOMitraPartnership4.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtVolumeUnit.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        
        .cmbNamaClient.RowSource = "[Operasi1.xlsm]Client!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        
        shSupport.Range("A1", shSupport.Range("A" & Application.Rows.Count).End(xlUp)).Name = "DynamicService"
        
        .cmbService.RowSource = "DynamicService"
        
        shProjectList.Range("B2", shProjectList.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicProjectList"
        
        .cmbNamaProject.RowSource = "DynamicProjectList"
        
        shKontrakPartnership.Range("B2", shKontrakPartnership.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicKontrakPartnership"
        
        .cmbIDKontrakPartnership1.RowSource = "DynamicKontrakPartnership"
        .cmbIDKontrakPartnership2.RowSource = "DynamicKontrakPartnership"
        .cmbIDKontrakPartnership3.RowSource = "DynamicKontrakPartnership"
        .cmbIDKontrakPartnership4.RowSource = "DynamicKontrakPartnership"
        
        shMitraPartnership.Range("B2", shMitraPartnership.Range("B" & Application.Rows.Count).End(xlUp)).Name = "DynamicMitraPartnership"
        
        .cmbIDMitraPartnership1.RowSource = "DynamicMitraPartnership"
        .cmbIDMitraPartnership2.RowSource = "DynamicMitraPartnership"
        .cmbIDMitraPartnership3.RowSource = "DynamicMitraPartnership"
        .cmbIDMitraPartnership4.RowSource = "DynamicMitraPartnership"
        
        .cmbBulan.Clear
        
        .cmbBulan.AddItem "Januari"
        .cmbBulan.AddItem "Februari"
        .cmbBulan.AddItem "Maret"
        .cmbBulan.AddItem "April"
        .cmbBulan.AddItem "Mei"
        .cmbBulan.AddItem "Juni"
        .cmbBulan.AddItem "Juli"
        .cmbBulan.AddItem "Agustus"
        .cmbBulan.AddItem "September"
        .cmbBulan.AddItem "Oktober"
        .cmbBulan.AddItem "November"
        .cmbBulan.AddItem "Desember"

        '-----------------------------------------------
        
        .listDatabasePrognosaPartnership.ColumnCount = 29
        .listDatabasePrognosaPartnership.ColumnHeads = True
        
        .listDatabasePrognosaPartnership.ColumnWidths = "30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        
        If iRow > 1 Then
        
            .listDatabasePrognosaPartnership.RowSource = "Prognosa_Partner!A2:AC" & iRow
        Else
        
            .listDatabasePrognosaPartnership.RowSource = "Prognosa_Partner!A2:AC2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormPrognosaPartnership()
    
    FormPrognosaPartnership.Show

End Sub

Sub SubmitPrognosaPartnership()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Prognosa_Partner")
    
    If FormPrognosaPartnership.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Prognosa_Partner!A:A)] + 1
    Else
    
        iRow = FormPrognosaPartnership.txtRowNumber.Value
        
    End If
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormPrognosaPartnership.txtIDPrognosaPartnership.Value
        
        .Cells(iRow, 3) = FormPrognosaPartnership.cmbNamaClient.Value
        
        .Cells(iRow, 4) = FormPrognosaPartnership.cmbService.Value
        
        .Cells(iRow, 5) = FormPrognosaPartnership.cmbNamaProject.Value
        
        .Cells(iRow, 6) = FormPrognosaPartnership.cmbIDKontrakPartnership1.Value
        
        .Cells(iRow, 8) = FormPrognosaPartnership.cmbIDKontrakPartnership2.Value

        .Cells(iRow, 10) = FormPrognosaPartnership.cmbIDKontrakPartnership3.Value

        .Cells(iRow, 12) = FormPrognosaPartnership.cmbIDKontrakPartnership4.Value
        
        .Cells(iRow, 7) = FormPrognosaPartnership.txtTHOKontrakPartnership1.Value
        
        .Cells(iRow, 9) = FormPrognosaPartnership.txtTHOKontrakPartnership2.Value

        .Cells(iRow, 11) = FormPrognosaPartnership.txtTHOKontrakPartnership3.Value

        .Cells(iRow, 13) = FormPrognosaPartnership.txtTHOKontrakPartnership4.Value

        .Cells(iRow, 14) = FormPrognosaPartnership.cmbIDMitraPartnership1.Value
        
        .Cells(iRow, 16) = FormPrognosaPartnership.cmbIDMitraPartnership2.Value

        .Cells(iRow, 18) = FormPrognosaPartnership.cmbIDMitraPartnership3.Value

        .Cells(iRow, 20) = FormPrognosaPartnership.cmbIDMitraPartnership4.Value

        .Cells(iRow, 15) = FormPrognosaPartnership.txtTHOMitraPartnership1.Value
        
        .Cells(iRow, 17) = FormPrognosaPartnership.txtTHOMitraPartnership2.Value
        
        .Cells(iRow, 19) = FormPrognosaPartnership.txtTHOMitraPartnership3.Value
        
        .Cells(iRow, 21) = FormPrognosaPartnership.txtTHOMitraPartnership4.Value
        
        .Cells(iRow, 22) = FormPrognosaPartnership.txtDeskripsiPekerjaan.Value
        
        .Cells(iRow, 23) = FormPrognosaPartnership.cmbBulan.Value

        .Cells(iRow, 24) = FormPrognosaPartnership.txtVolumeUnit.Value
        
        .Cells(iRow, 28) = Application.UserName
        
        .Cells(iRow, 29) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lrG As Integer
lrG = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrG > 1 Then
    shPrognosaPartnership.Range("G2").Value = "=IFERROR(INDEX(Kontrak_Partner!$E:$E,MATCH(Prognosa_Partner!F2,Kontrak_Partner!$B:$B,FALSE),1),0)"
    
    If lrG > 2 Then
    shPrognosaPartnership.Range("G2:G" & lrG).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrI As Integer
lrI = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrI > 1 Then
    shPrognosaPartnership.Range("I2").Value = "=IFERROR(INDEX(Kontrak_Partner!$E:$E,MATCH(Prognosa_Partner!H2,Kontrak_Partner!$B:$B,FALSE),1),0)"
    
    If lrI > 2 Then
    shPrognosaPartnership.Range("I2:I" & lrI).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrK As Integer
lrK = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrK > 1 Then
    shPrognosaPartnership.Range("K2").Value = "=IFERROR(INDEX(Kontrak_Partner!$E:$E,MATCH(Prognosa_Partner!J2,Kontrak_Partner!$B:$B,FALSE),1),0)"
    
    If lrK > 2 Then
    shPrognosaPartnership.Range("K2:K" & lrK).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrM As Integer
lrM = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrM > 1 Then
    shPrognosaPartnership.Range("M2").Value = "=IFERROR(INDEX(Kontrak_Partner!$E:$E,MATCH(Prognosa_Partner!L2,Kontrak_Partner!$B:$B,FALSE),1),0)"
    
    If lrM > 2 Then
    shPrognosaPartnership.Range("M2:M" & lrM).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrO As Integer
lrO = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrO > 1 Then
    shPrognosaPartnership.Range("O2").Value = "=IFERROR(INDEX(Mitra_Partner!$D:$D,MATCH(Prognosa_Partner!N2,Mitra_Partner!$B:$B,FALSE),1),0)"
    
    If lrO > 2 Then
    shPrognosaPartnership.Range("O2:O" & lrO).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrQ As Integer
lrQ = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrQ > 1 Then
    shPrognosaPartnership.Range("Q2").Value = "=IFERROR(INDEX(Mitra_Partner!$D:$D,MATCH(Prognosa_Partner!P2,Mitra_Partner!$B:$B,FALSE),1),0)"
    
    If lrQ > 2 Then
    shPrognosaPartnership.Range("Q2:Q" & lrQ).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrS As Integer
lrS = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrS > 1 Then
    shPrognosaPartnership.Range("S2").Value = "=IFERROR(INDEX(Mitra_Partner!$D:$D,MATCH(Prognosa_Partner!R2,Mitra_Partner!$B:$B,FALSE),1),0)"
    
    If lrS > 2 Then
    shPrognosaPartnership.Range("S2:S" & lrS).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lrU As Integer
lrU = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lrU > 1 Then
    shPrognosaPartnership.Range("U2").Value = "=IFERROR(INDEX(Mitra_Partner!$D:$D,MATCH(Prognosa_Partner!T2,Mitra_Partner!$B:$B,FALSE),1),0)"
    
    If lrU > 2 Then
    shPrognosaPartnership.Range("U2:U" & lrU).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If

Dim lr1 As Integer
lr1 = Application.WorksheetFunction.CountA(shPrognosaPartnership.Range("A:A"))

'''' Put the formula
If lr1 > 1 Then
    shPrognosaPartnership.Range("Y2").Value = "=(X2*(G2+I2+K2+M2))/14350"
    shPrognosaPartnership.Range("Z2").Value = "=(X2*(O2+Q2+S2+U2))/14350"
    shPrognosaPartnership.Range("AA2").Value = "=Y2-Z2"
    
    If lr1 > 2 Then
    shPrognosaPartnership.Range("Y2:AA" & lr1).FillDown
    End If
    shPrognosaPartnership.Calculate
    shPrognosaPartnership.UsedRange.Copy
    shPrognosaPartnership.UsedRange.PasteSpecial xlPasteValues
End If
    
End Sub

Function ValidateEntriesPrognosaPartnership() As Boolean

    ValidateEntriesPrognosaPartnership = True
    
    Dim iIDPrognosaPartnership As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Prognosa_Partner")
        
    iIDPrognosaPartnership = FormPrognosaPartnership.txtIDPrognosaPartnership.Value
    
    With FormPrognosaPartnership
        
        'Default Color
        
        .txtIDPrognosaPartnership.BackColor = vbWhite
        .cmbNamaClient.BackColor = vbWhite
        .cmbService.BackColor = vbWhite
        .cmbNamaProject.BackColor = vbWhite
        .cmbIDKontrakPartnership1.BackColor = vbWhite
        .cmbIDKontrakPartnership2.BackColor = vbWhite
        .cmbIDKontrakPartnership3.BackColor = vbWhite
        .cmbIDKontrakPartnership4.BackColor = vbWhite
        .txtTHOKontrakPartnership1.BackColor = vbWhite
        .txtTHOKontrakPartnership2.BackColor = vbWhite
        .txtTHOKontrakPartnership3.BackColor = vbWhite
        .txtTHOKontrakPartnership4.BackColor = vbWhite
        .cmbIDMitraPartnership1.BackColor = vbWhite
        .cmbIDMitraPartnership2.BackColor = vbWhite
        .cmbIDMitraPartnership3.BackColor = vbWhite
        .cmbIDMitraPartnership4.BackColor = vbWhite
        .txtTHOMitraPartnership1.BackColor = vbWhite
        .txtTHOMitraPartnership2.BackColor = vbWhite
        .txtTHOMitraPartnership3.BackColor = vbWhite
        .txtTHOMitraPartnership4.BackColor = vbWhite
        .cmbBulan.BackColor = vbWhite
        .txtVolumeUnit.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite

        '--------------------------------
        
        If Trim(.txtIDPrognosaPartnership.Value) = "" Then
        
            MsgBox "Masukkan ID prognosa partnership", vbOKOnly + vbInformation, "ID Prognosa Partnership"
            ValidateEntriesPrognosaPartnership = False
            .txtIDPrognosaPartnership.BackColor = vbRed
            .txtIDPrognosaPartnership.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaClient.Value) = "" Then
        
            MsgBox "Masukkan nama client", vbOKOnly + vbInformation, "Nama Client"
            ValidateEntriesPrognosaPartnership = False
            .cmbNamaClient.BackColor = vbRed
            .cmbNamaClient.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbService.Value) = "" Then
        
            MsgBox "Masukkan jenis service", vbOKOnly + vbInformation, "Jenis Service"
            ValidateEntriesPrognosaPartnership = False
            .cmbService.BackColor = vbRed
            .cmbService.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbNamaProject.Value) = "" Then
        
            MsgBox "Masukkan nama project", vbOKOnly + vbInformation, "Nama Project"
            ValidateEntriesPrognosaPartnership = False
            .cmbNamaProject.BackColor = vbRed
            .cmbNamaProject.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbIDKontrakPartnership1.Value) = "" Then
        
            MsgBox "Masukkan ID kontrak partnership 1", vbOKOnly + vbInformation, "ID Kontrak Partnership 1"
            ValidateEntriesPrognosaPartnership = False
            .cmbIDKontrakPartnership1.BackColor = vbRed
            .cmbIDKontrakPartnership1.SetFocus
            Exit Function
            
        End If

        If Trim(.cmbIDMitraPartnership1.Value) = "" Then
        
            MsgBox "Masukkan ID mitra partnership 1", vbOKOnly + vbInformation, "THO Mitra Partnership"
            ValidateEntriesPrognosaPartnership = False
            .cmbIDMitraPartnership1.BackColor = vbRed
            .cmbIDMitraPartnership1.SetFocus
            Exit Function
            
        End If
        
        
        If Trim(.cmbBulan.Value) = "" Then
        
            MsgBox "Masukkan bulan", vbOKOnly + vbInformation, "Bulan"
            ValidateEntriesPrognosaPartnership = False
            .cmbBulan.BackColor = vbRed
            .cmbBulan.SetFocus
            Exit Function
            
        End If
        

        If Trim(.txtVolumeUnit.Value) = "" Then
        
            MsgBox "Masukkan volume/unit", vbOKOnly + vbInformation, "Volume / Unit"
            ValidateEntriesPrognosaPartnership = False
            .txtVolumeUnit.BackColor = vbRed
            .txtVolumeUnit.SetFocus
            Exit Function
            
        End If
        
        If Trim(.txtDeskripsiPekerjaan.Value) = "" Then
        
            MsgBox "Masukkan deskripsi pekerjaan", vbOKOnly + vbInformation, "Deskripsi Pekerjaan"
            ValidateEntriesPrognosaPartnership = False
            .txtDeskripsiPekerjaan.BackColor = vbRed
            .txtDeskripsiPekerjaan.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListPrognosaPartnership() As Long

    Dim i As Long
    
    Selected_ListPrognosaPartnership = 0
    
    For i = 0 To FormPrognosaPartnership.listDatabasePrognosaPartnership.ListCount - 1
        
        If FormPrognosaPartnership.listDatabasePrognosaPartnership.Selected(i) = True Then
        
            Selected_ListPrognosaPartnership = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListPrognosaPartnership = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 0), ThisWorkbook.Sheets("Prognosa_Partner").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Prognosa_Partner").Rows(iRow).Delete
    
    Call ResetPrognosaPartnership
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListPrognosaPartnership = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListPrognosaPartnership + 1
    
    Me.txtIDPrognosaPartnership.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 1)
    
    Me.cmbNamaClient.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 2)
    
    Me.cmbService.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 3)
    
    Me.cmbNamaProject.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 4)

    Me.cmbIDKontrakPartnership1.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 5)
    
    Me.txtTHOKontrakPartnership1.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 6)

    Me.cmbIDKontrakPartnership2.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 7)
    
    Me.txtTHOKontrakPartnership2.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 8)

    Me.cmbIDKontrakPartnership3.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 9)
    
    Me.txtTHOKontrakPartnership3.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 10)

    Me.cmbIDKontrakPartnership4.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 11)
    
    Me.txtTHOKontrakPartnership4.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 12)

    Me.cmbIDMitraPartnership1.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 13)
    
    Me.txtTHOMitraPartnership1.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 14)

    Me.cmbIDMitraPartnership2.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 15)
    
    Me.txtTHOMitraPartnership2.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 16)

    Me.cmbIDMitraPartnership3.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 17)
    
    Me.txtTHOMitraPartnership3.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 18)

    Me.cmbIDMitraPartnership4.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 19)
    
    Me.txtTHOMitraPartnership4.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 20)

    Me.txtDeskripsiPekerjaan.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 21)
    
    Me.cmbBulan.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 22)
    
    Me.txtVolumeUnit.Value = Me.listDatabasePrognosaPartnership.List(Me.listDatabasePrognosaPartnership.ListIndex, 23)

    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetPrognosaPartnership
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesPrognosaPartnership() = True Then
Call SubmitPrognosaPartnership
Call ResetPrognosaPartnership
End If
End Sub

Private Sub UserForm_Initialize()
    Call ResetPrognosaPartnership
End Sub

Private Sub cmbIDKontrakPartnership1_Change()

If Me.cmbIDKontrakPartnership1.Value = "" Then Me.txtTHOKontrakPartnership1.Value = 0

If Me.cmbIDKontrakPartnership1.Value <> "" Then
    Me.txtTHOKontrakPartnership1.Value = Format(Application.WorksheetFunction.Index(shKontrakPartnership.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakPartnership1.Value, shKontrakPartnership.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakPartnership2_Change()

If Me.cmbIDKontrakPartnership2.Value = "" Then Me.txtTHOKontrakPartnership2.Value = 0

If Me.cmbIDKontrakPartnership2.Value <> "" Then
    Me.txtTHOKontrakPartnership2.Value = Format(Application.WorksheetFunction.Index(shKontrakPartnership.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakPartnership2.Value, shKontrakPartnership.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakPartnership3_Change()

If Me.cmbIDKontrakPartnership3.Value = "" Then Me.txtTHOKontrakPartnership3.Value = 0

If Me.cmbIDKontrakPartnership3.Value <> "" Then
    Me.txtTHOKontrakPartnership3.Value = Format(Application.WorksheetFunction.Index(shKontrakPartnership.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakPartnership3.Value, shKontrakPartnership.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDKontrakPartnership4_Change()

If Me.cmbIDKontrakPartnership4.Value = "" Then Me.txtTHOKontrakPartnership4.Value = 0

If Me.cmbIDKontrakPartnership4.Value <> "" Then
    Me.txtTHOKontrakPartnership4.Value = Format(Application.WorksheetFunction.Index(shKontrakPartnership.Range("E:E"), Application.WorksheetFunction.Match(Me.cmbIDKontrakPartnership4.Value, shKontrakPartnership.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraPartnership1_Change()

If Me.cmbIDMitraPartnership1.Value = "" Then Me.txtTHOMitraPartnership1.Value = 0

If Me.cmbIDMitraPartnership1.Value <> "" Then
    Me.txtTHOMitraPartnership1.Value = Format(Application.WorksheetFunction.Index(shMitraPartnership.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraPartnership1.Value, shMitraPartnership.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraPartnership2_Change()

If Me.cmbIDMitraPartnership2.Value = "" Then Me.txtTHOMitraPartnership2.Value = 0

If Me.cmbIDMitraPartnership2.Value <> "" Then
    Me.txtTHOMitraPartnership2.Value = Format(Application.WorksheetFunction.Index(shMitraPartnership.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraPartnership2.Value, shMitraPartnership.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraPartnership3_Change()

If Me.cmbIDMitraPartnership3.Value = "" Then Me.txtTHOMitraPartnership3.Value = 0

If Me.cmbIDMitraPartnership3.Value <> "" Then
    Me.txtTHOMitraPartnership3.Value = Format(Application.WorksheetFunction.Index(shMitraPartnership.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraPartnership3.Value, shMitraPartnership.Range("B:B"), False), 1))
End If

End Sub

Private Sub cmbIDMitraPartnership4_Change()

If Me.cmbIDMitraPartnership4.Value = "" Then Me.txtTHOMitraPartnership4.Value = 0

If Me.cmbIDMitraPartnership4.Value <> "" Then
    Me.txtTHOMitraPartnership4.Value = Format(Application.WorksheetFunction.Index(shMitraPartnership.Range("D:D"), Application.WorksheetFunction.Match(Me.cmbIDMitraPartnership4.Value, shMitraPartnership.Range("B:B"), False), 1))
End If

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (G4) Project List Partnership Data Entry:
Module:

Option Explicit
Sub ResetProjectList()

    Dim iRow As Long
    
    iRow = [Counta(Project_List!A:A)] ' idetifying the last row
    
    With FormProjectList
    
        .txtNamaProject.Value = ""
        .txt_Start_Date.Value = ""
        .txt_End_Date.Value = ""
        .txtRowNumber.Value = ""
        
        'Default Color
        
        .txtNamaProject.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        'Creating a dynamic name for department
        
        '-----------------------------------------------
        
        .listDatabaseProjectList.ColumnCount = 6
        .listDatabaseProjectList.ColumnHeads = True
        
        .listDatabaseProjectList.ColumnWidths = "30,90,60,60,50,70"
        
        If iRow > 1 Then
        
            .listDatabaseProjectList.RowSource = "Project_List!A2:F" & iRow
        Else
        
            .listDatabaseProjectList.RowSource = "Project_List!A2:F2"
            
        End If
        
        
    
    End With



End Sub

Sub Show_FormProjectList()
    
    FormProjectList.Show

End Sub

Sub SubmitProjectList()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Project_List")
    
    If FormProjectList.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Project_List!A:A)] + 1
    Else
    
        iRow = FormProjectList.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "=Row()-1" 'Dynamic Serial Number
        
        .Cells(iRow, 2) = FormProjectList.txtNamaProject.Value
        
        .Cells(iRow, 3) = FormProjectList.txt_Start_Date.Value
        
        .Cells(iRow, 4) = FormProjectList.txt_End_Date.Value
        
        .Cells(iRow, 5) = Application.UserName
        
        .Cells(iRow, 6) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With


End Sub
Function ValidateEntriesProjectList() As Boolean

    ValidateEntriesProjectList = True
    
    Dim iNamaProject As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Project_List")
        
    iNamaProject = FormProjectList.txtNamaProject.Value
    
    With FormProjectList
    
        'Default Color
        
        .txtNamaProject.BackColor = vbWhite
        .txt_Start_Date.BackColor = vbWhite
        .txt_End_Date.BackColor = vbWhite
        .txtRowNumber.BackColor = vbWhite
        '--------------------------------
        
        If Trim(.txtNamaProject.Value) = "" Then
        
            MsgBox "Masukkan nama project", vbOKOnly + vbInformation, "Nama Project"
            ValidateEntriesProjectList = False
            .txtNamaProject.BackColor = vbRed
            .txtNamaProject.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txt_Start_Date.Value) = "" Then
        
            MsgBox "Masukkan tanggal mulai project", vbOKOnly + vbInformation, "Tanggal Mulai Project"
            ValidateEntriesProjectList = False
            .txt_Start_Date.BackColor = vbRed
            .txt_Start_Date.SetFocus
            Exit Function
            
        End If
        
         If Trim(.txt_End_Date.Value) = "" Then
        
            MsgBox "Masukkan tanggal selesai project", vbOKOnly + vbInformation, "Tanggal Selesai Project"
            ValidateEntriesProjectList = False
            .txt_End_Date.BackColor = vbRed
            .txt_End_Date.SetFocus
            Exit Function
            
        End If
    
    
    End With



End Function


Function Selected_ListProjectList() As Long

    Dim i As Long
    
    Selected_ListProjectList = 0
    
    For i = 0 To FormProjectList.listDatabaseProjectList.ListCount - 1
        
        If FormProjectList.listDatabaseProjectList.Selected(i) = True Then
        
            Selected_ListProjectList = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub Image6_Click()
Call Calendar.SelectedDate(Me.txt_Start_Date)
End Sub

Private Sub Image7_Click()
Call Calendar.SelectedDate(Me.txt_End_Date)
End Sub

Private Sub UserForm_Initialize()
Me.txt_Start_Date.Value = Format(Date, "D-MMM-YYYY")
Me.txt_End_Date.Value = Format(Date, "D-MMM-YYYY")
Call ResetProjectList
End Sub


Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListProjectList = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseProjectList.List(Me.listDatabaseProjectList.ListIndex, 0), ThisWorkbook.Sheets("Project_List").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Project_List").Rows(iRow).Delete
    
    Call ResetProjectList
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListProjectList = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    'Code to update the value to respective controls
    
    
    Me.txtRowNumber.Value = Selected_ListProjectList + 1
    
    Me.txtNamaProject.Value = Me.listDatabaseProjectList.List(Me.listDatabaseProjectList.ListIndex, 1)
    
    Me.txt_Start_Date.Value = Me.listDatabaseProjectList.List(Me.listDatabaseProjectList.ListIndex, 2)
    
    Me.txt_End_Date.Value = Me.listDatabaseProjectList.List(Me.listDatabaseProjectList.ListIndex, 3)
            
    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetProjectList
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    If ValidateEntriesProjectList() = True Then
    
        Call SubmitProjectList
        Call ResetProjectList
    End If
    
End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (H) Keuangan:
``````````````````````````````````````````````````````````````````````````````````````````````
# (H1) Keuangan Data Entry:
Module:

Option Explicit

Sub ResetKeuangan()

    Dim iRow As Long
    
    iRow = [Counta(Keuangan!A:A)] ' idetifying the last row
    
    With FormKeuangan
    
        .txtIDKeuangan.Value = ""
        .cmbIDOperasi.Value = ""
        .txtAbsorbsiLabaAsosiasi.Value = ""
        .txtPendapatanUsaha.Value = ""
        .txtSelisihKurs.Value = ""
        .txtPendapatanKeuangan.Value = ""
        .txtPendapatanAtasDendaBersih.Value = ""
        .txtPajakTangguhan.Value = ""
        .txtBebanLainLain.Value = ""
        .txtTaxLoss.Value = ""
        .txtBebanGajidanUpah.Value = ""
        .txtBebanJasa.Value = ""
        .txtBebanDepresiasidanAmortisasi.Value = ""
        .txtRowNumber.Value = ""

        
        'Default Color
        
        .txtIDKeuangan.BackColor = vbWhite
        .cmbIDOperasi.BackColor = vbWhite
        .txtAbsorbsiLabaAsosiasi.BackColor = vbWhite
        .txtPendapatanUsaha.BackColor = vbWhite
        .txtSelisihKurs.BackColor = vbWhite
        .txtPendapatanKeuangan.BackColor = vbWhite
        .txtPendapatanAtasDendaBersih.BackColor = vbWhite
        .txtPajakTangguhan.BackColor = vbWhite
        .txtBebanLainLain.BackColor = vbWhite
        .txtTaxLoss.BackColor = vbWhite
        .txtBebanGajidanUpah.BackColor = vbWhite
        .txtBebanJasa.BackColor = vbWhite
        .txtBebanDepresiasidanAmortisasi.BackColor = vbWhite
        .txtRowNumber.Value = vbWhite

        '--------------------------------
        .cmbIDOperasi.RowSource = "[Operasi1.xlsm]Operasi!B2:B100" & Range("B" & Rows.Count).End(xlUp).Row
        '-----------------------------------------------
        .listDatabaseKeuangan.ColumnCount = 26
        .listDatabaseKeuangan.ColumnHeads = True
        
        .listDatabaseKeuangan.ColumnWidths = "30,60,60,60,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,70,70"
        If iRow > 1 Then
        
            .listDatabaseKeuangan.RowSource = "Keuangan!A2:Z" & iRow
        Else
        
            .listDatabaseKeuangan.RowSource = "Keuangan!A2:Z2"
            
        End If
        
        
    
    End With

End Sub
Sub Show_FormKeuangan()

FormKeuangan.Show

End Sub
Sub SubmitKeuangan()

    Dim sh As Worksheet
    Dim iRow As Long
    
    Set sh = ThisWorkbook.Sheets("Keuangan")
    
    If FormKeuangan.txtRowNumber.Value = "" Then
    
        iRow = [Counta(Keuangan!A:A)] + 1
    Else
    
        iRow = FormKeuangan.txtRowNumber.Value
        
    End If
    
    
    With sh
    
        .Cells(iRow, 1) = "Row() - 1"
        
        .Cells(iRow, 2) = FormKeuangan.txtIDKeuangan.Value
        
        .Cells(iRow, 3) = FormKeuangan.cmbIDOperasi.Value
        
        .Cells(iRow, 4) = FormKeuangan.txtAbsorbsiLabaAsosiasi.Value
        
        .Cells(iRow, 5) = FormKeuangan.txtPendapatanUsaha.Value
        
        .Cells(iRow, 6) = FormKeuangan.txtSelisihKurs.Value
        
        .Cells(iRow, 7) = FormKeuangan.txtPendapatanKeuangan.Value
        
        .Cells(iRow, 8) = FormKeuangan.txtPendapatanAtasDendaBersih.Value
        
        .Cells(iRow, 9) = FormKeuangan.txtPajakTangguhan.Value

        .Cells(iRow, 10) = FormKeuangan.txtBebanLainLain.Value
        
        .Cells(iRow, 11) = FormKeuangan.txtTaxLoss.Value
        
        .Cells(iRow, 12) = FormKeuangan.txtBebanGajidanUpah.Value

        .Cells(iRow, 13) = FormKeuangan.txtBebanJasa.Value
        
        .Cells(iRow, 14) = FormKeuangan.txtBebanDepresiasidanAmortisasi.Value
        
        .Cells(iRow, 25) = Application.UserName
        
        .Cells(iRow, 26) = [Text(Now(), "DD-MM-YYYY HH:MM:SS")]
        
    
    End With
    
Dim lrKeuangan As Integer
lrKeuangan = Application.WorksheetFunction.CountA(shKeuangan.Range("A:A"))

'''' Put the formula
If lrKeuangan > 1 Then
    shKeuangan.Range("O2").Value = "=SUM(D2:E2)"
    shKeuangan.Range("P2").Value = "=SUM(L2:N2)"
    shKeuangan.Range("Q2").Value = "=O2-P2"
    shKeuangan.Range("R2").Value = "=SUM(F2:H2)+J2"
    shKeuangan.Range("S2").Value = "=Q2+R2"
    shKeuangan.Range("T2").Value = "=S2-K2"
    shKeuangan.Range("U2").Value = "=S2-T2-I2"
    shKeuangan.Range("V2").Value = "=Q2+N2+F2"
    shKeuangan.Range("W2").Value = "=V2/O2"
    shKeuangan.Range("X2").Value = "=U2/O2"

    If lrKeuangan > 2 Then
    shKeuangan.Range("O2:X" & lrKeuangan).FillDown
    End If
    shKeuangan.Calculate
    shKeuangan.UsedRange.Copy
    shKeuangan.UsedRange.PasteSpecial xlPasteValues
End If

End Sub
Function ValidateEntriesKeuangan() As Boolean

    ValidateEntriesKeuangan = True
    
    Dim iIDKeuangan As Variant
    
    Dim sh As Worksheet
    
    Set sh = ThisWorkbook.Sheets("Keuangan")
        
    iIDKeuangan = FormKeuangan.txtIDKeuangan.Value
    
    With FormKeuangan
    
        'Default Color
        
        .txtIDKeuangan.BackColor = vbWhite
        .cmbIDOperasi.BackColor = vbWhite
        .txtAbsorbsiLabaAsosiasi.BackColor = vbWhite
        .txtPendapatanUsaha.BackColor = vbWhite
        .txtSelisihKurs.BackColor = vbWhite
        .txtPendapatanKeuangan.BackColor = vbWhite
        .txtPendapatanAtasDendaBersih.BackColor = vbWhite
        .txtPajakTangguhan.BackColor = vbWhite
        .txtBebanLainLain.BackColor = vbWhite
        .txtTaxLoss.BackColor = vbWhite
        .txtBebanGajidanUpah.BackColor = vbWhite
        .txtBebanJasa.BackColor = vbWhite
        .txtBebanDepresiasidanAmortisasi.BackColor = vbWhite
        .txtRowNumber.Value = vbWhite

        '--------------------------------
        
        If Trim(.txtIDKeuangan.Value) = "" Then
        
            MsgBox "Masukkan ID keuangan", vbOKOnly + vbInformation, "ID Keuangan"
            ValidateEntriesKeuangan = False
            .txtIDKeuangan.BackColor = vbRed
            .txtIDKeuangan.SetFocus
            Exit Function
            
        End If
        
        If Trim(.cmbIDOperasi.Value) = "" Then
        
            MsgBox "Masukkan ID operasi", vbOKOnly + vbInformation, "ID Operasi"
            ValidateEntriesKeuangan = False
            .cmbIDOperasi.BackColor = vbRed
            .cmbIDOperasi.SetFocus
            Exit Function
            
        End If
    
    End With


End Function


Function Selected_ListKeuangan() As Long

    Dim i As Long
    
    Selected_ListKeuangan = 0
    
    For i = 0 To FormKeuangan.listDatabaseKeuangan.ListCount - 1
        
        If FormKeuangan.listDatabaseKeuangan.Selected(i) = True Then
        
            Selected_ListKeuangan = i + 1
            Exit For
        End If
        
    Next i


End Function

``````````````````````````````````````````````````````````````````````````````````````````````
Userform:

Option Explicit

Private Sub cmdDelete_Click()
    
    Dim iRow As Long
    
    If Selected_ListKeuangan = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Delete"
        Exit Sub
    End If
    
    Dim i As VbMsgBoxResult
    
    i = MsgBox("Do you want to delete the selected record?", vbYesNo + vbQuestion, "Confirmation")
    
    If i = vbNo Then Exit Sub
    
    iRow = Application.WorksheetFunction.Match(Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 0), ThisWorkbook.Sheets("Keuangan").Range("A:A"), 0)
    
    ThisWorkbook.Sheets("Keuangan").Rows(iRow).Delete
    
    Call ResetKeuangan
    
    MsgBox "Selected record has been deleted.", vbOKOnly + vbInformation, "Deleted"
    
    
    
End Sub

Private Sub cmdEdit_Click()
    
    If Selected_ListKeuangan = 0 Then
    
        MsgBox "No row is selected.", vbOKOnly + vbInformation, "Edit"
        
        Exit Sub
    
    End If
    
    Me.txtRowNumber.Value = Selected_ListKeuangan + 1
    
    Me.txtIDKeuangan.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 1)
    
    Me.cmbIDOperasi.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 2)
    
    Me.txtAbsorbsiLabaAsosiasi.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 3)

    Me.txtPendapatanUsaha.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 4)
    
    Me.txtSelisihKurs.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 5)

    Me.txtPendapatanKeuangan.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 6)
    
    Me.txtPendapatanAtasDendaBersih.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 7)

    Me.txtPajakTangguhan.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 8)
    
    Me.txtBebanLainLain.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 9)

    Me.txtTaxLoss.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 10)
    
    Me.txtBebanGajidanUpah.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 11)

    Me.txtBebanJasa.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 12)
    
    Me.txtBebanDepresiasidanAmortisasi.Value = Me.listDatabaseKeuangan.List(Me.listDatabaseKeuangan.ListIndex, 13)

    
    MsgBox "Please make the required changes and click on 'Save' button to update.", vbOKOnly + vbInformation, "Edit"
    
    
    
End Sub


Private Sub cmdReset_Click()
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to reset the form?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub
    
    Call ResetKeuangan
End Sub

Private Sub cmdSave_Click()
    
    Dim msgValue As VbMsgBoxResult
    
    msgValue = MsgBox("Do you want to save the data?", vbYesNo + vbInformation, "Confirmation")
    
    If msgValue = vbNo Then Exit Sub

If ValidateEntriesKeuangan() = True Then
Call SubmitKeuangan
Call ResetKeuangan
End If
End Sub

Private Sub UserForm_Initialize()
    Call ResetKeuangan
End Sub

``````````````````````````````````````````````````````````````````````````````````````````````
# (I) Calendar (This step applies in most of userforms)
The coding for calendar was made by www.thedatalabs.org

Userform:

Option Explicit
 
Private Sub CmbMonth_Change()

If Me.CmbMonth.Value <> "" And Me.CmbYear.Value <> "" Then
    Call Show_Dates
    Me.lblSelectedMonth = Me.CmbMonth & "-" & Me.CmbYear
End If

End Sub

Private Sub CmbYear_Change()
    If Me.CmbMonth.Value <> "" And Me.CmbYear.Value <> "" Then
        Call Show_Dates
        Me.lblSelectedMonth = Me.CmbMonth & "-" & Me.CmbYear
    End If
End Sub
  
Sub ButtonClick(btn As MSForms.CommandButton)
    With btn
        If .Caption <> "" Then
            Me.TextBox1.Value = .Caption & "-" & Left(Me.CmbMonth.Value, 3) & "-" & Me.CmbYear.Value
            Unload Me
        End If
    End With
End Sub
 
Private Sub CommandButton1_Click()
    Call ButtonClick(Me.CommandButton1)
End Sub
Private Sub CommandButton2_Click()
    Call ButtonClick(Me.CommandButton2)
End Sub
Private Sub CommandButton3_Click()
    Call ButtonClick(Me.CommandButton3)
End Sub
Private Sub CommandButton4_Click()
    Call ButtonClick(Me.CommandButton4)
End Sub
Private Sub CommandButton5_Click()
    Call ButtonClick(Me.CommandButton5)
End Sub
Private Sub CommandButton6_Click()
    Call ButtonClick(Me.CommandButton6)
End Sub
Private Sub CommandButton7_Click()
    Call ButtonClick(Me.CommandButton7)
End Sub
Private Sub CommandButton8_Click()
    Call ButtonClick(Me.CommandButton8)
End Sub
Private Sub CommandButton9_Click()
    Call ButtonClick(Me.CommandButton9)
End Sub
Private Sub CommandButton10_Click()
    Call ButtonClick(Me.CommandButton10)
End Sub
Private Sub CommandButton11_Click()
    Call ButtonClick(Me.CommandButton11)
End Sub
Private Sub CommandButton12_Click()
    Call ButtonClick(Me.CommandButton12)
End Sub
Private Sub CommandButton13_Click()
    Call ButtonClick(Me.CommandButton13)
End Sub
Private Sub CommandButton14_Click()
    Call ButtonClick(Me.CommandButton14)
End Sub
Private Sub CommandButton15_Click()
    Call ButtonClick(Me.CommandButton15)
End Sub
Private Sub CommandButton16_Click()
    Call ButtonClick(Me.CommandButton16)
End Sub
Private Sub CommandButton17_Click()
    Call ButtonClick(Me.CommandButton17)
End Sub
Private Sub CommandButton18_Click()
    Call ButtonClick(Me.CommandButton18)
End Sub
Private Sub CommandButton19_Click()
    Call ButtonClick(Me.CommandButton19)
End Sub
Private Sub CommandButton20_Click()
    Call ButtonClick(Me.CommandButton20)
End Sub
Private Sub CommandButton21_Click()
    Call ButtonClick(Me.CommandButton21)
End Sub
Private Sub CommandButton22_Click()
    Call ButtonClick(Me.CommandButton22)
End Sub
Private Sub CommandButton23_Click()
    Call ButtonClick(Me.CommandButton23)
End Sub
Private Sub CommandButton24_Click()
    Call ButtonClick(Me.CommandButton24)
End Sub
Private Sub CommandButton25_Click()
    Call ButtonClick(Me.CommandButton25)
End Sub
Private Sub CommandButton26_Click()
    Call ButtonClick(Me.CommandButton26)
End Sub
Private Sub CommandButton27_Click()
    Call ButtonClick(Me.CommandButton27)
End Sub
Private Sub CommandButton28_Click()
    Call ButtonClick(Me.CommandButton28)
End Sub
Private Sub CommandButton29_Click()
    Call ButtonClick(Me.CommandButton29)
End Sub
Private Sub CommandButton30_Click()
    Call ButtonClick(Me.CommandButton30)
End Sub
Private Sub CommandButton31_Click()
    Call ButtonClick(Me.CommandButton31)
End Sub
Private Sub CommandButton32_Click()
    Call ButtonClick(Me.CommandButton32)
End Sub
Private Sub CommandButton33_Click()
    Call ButtonClick(Me.CommandButton33)
End Sub
Private Sub CommandButton34_Click()
    Call ButtonClick(Me.CommandButton34)
End Sub
Private Sub CommandButton35_Click()
    Call ButtonClick(Me.CommandButton35)
End Sub
Private Sub CommandButton36_Click()
    Call ButtonClick(Me.CommandButton36)
End Sub
Private Sub CommandButton37_Click()
    Call ButtonClick(Me.CommandButton37)
End Sub
Private Sub CommandButton38_Click()
    Call ButtonClick(Me.CommandButton38)
End Sub
Private Sub CommandButton39_Click()
    Call ButtonClick(Me.CommandButton39)
End Sub
Private Sub CommandButton40_Click()
    Call ButtonClick(Me.CommandButton40)
End Sub
Private Sub CommandButton41_Click()
    Call ButtonClick(Me.CommandButton41)
End Sub
Private Sub CommandButton42_Click()
    Call ButtonClick(Me.CommandButton42)
End Sub
 
Private Sub img_Next_Click()
    On Error Resume Next
    If Me.CmbMonth.ListIndex = 11 Then
        Me.CmbMonth.ListIndex = 0
        Me.CmbYear.Value = Me.CmbYear.Value + 1
    Else
        Me.CmbMonth.ListIndex = Me.CmbMonth.ListIndex + 1
    End If
End Sub

Private Sub img_previous_Click()
    On Error Resume Next
    If Me.CmbMonth.ListIndex = 0 Then
        Me.CmbMonth.ListIndex = 11
        Me.CmbYear.Value = Me.CmbYear.Value - 1
    Else
        Me.CmbMonth.ListIndex = Me.CmbMonth.ListIndex - 1
    End If
End Sub

Private Sub UserForm_Activate()

Dim i As Integer
Dim Year_Start, Year_End As Integer

'================= Add Months to List ==============
With Me.CmbMonth
    .Clear
    For i = 1 To 12
        .AddItem VBA.Format(VBA.DateSerial(2018, i, 1), "MMMM")
    Next i
    
    .Value = VBA.Format(VBA.Date, "MMMM")
End With

'================ Add Years =======================
 
  Year_Start = VBA.Year(VBA.Date) - 20
  Year_End = VBA.Year(VBA.Date) + 20

With Me.CmbYear
    .Clear
    For i = Year_Start To Year_End
        .AddItem i
    Next i
    
    .Value = VBA.Format(VBA.Date, "YYYY")
    
End With

Call Show_Dates

If Me.TextBox1.Value <> "" Then
    Call Show_Selected_Date(CDate(Me.TextBox1.Value))
End If



End Sub

Private Sub Show_Dates()
    
    
    Dim first_Date As Date
    first_Date = VBA.DateValue("1-" & Me.CmbMonth.Value & "-" & Me.CmbYear.Value)
    
    Dim last_day As Integer
    last_day = VBA.Day(VBA.DateSerial(VBA.Year(first_Date), VBA.Month(first_Date) + 1, 1) - 1)
     
    Dim i As Integer
    Dim btn As CommandButton
    
    '============ Clear All button
    For i = 1 To 42
        Set btn = Me.Controls("CommandButton" & i)
        btn.Caption = ""
    Next i
    
    '====================
    For i = 1 To 7   'Set first date of month
        Set btn = Me.Controls("CommandButton" & i)
        
        If VBA.Weekday(first_Date) = i Then
            btn.Caption = "1"
        Else
            btn.Caption = ""
        End If
    Next i
    
    Dim btn1 As CommandButton
    Dim btn2 As CommandButton
    
    For i = 1 To 41
        Set btn1 = Me.Controls("CommandButton" & i)
        Set btn2 = Me.Controls("CommandButton" & i + 1)
        If btn1.Caption <> "" Then
            If last_day > btn1.Caption Then
               btn2.Caption = btn1.Caption + 1
            End If
        End If
    Next i
  
Call Reset_Colors
   
End Sub
 
Private Sub Reset_Colors()

Dim i As Integer
Dim btn As CommandButton
Me.img_Star.Visible = False
For i = 1 To 42
    Set btn = Me.Controls("CommandButton" & i)
     
    With btn
        .BackColor = VBA.RGB(255, 215, 0)  'set background colors
        .Enabled = True  'Enable All
        
        If .Caption = "" Then  'Disbale for blanks
            .Enabled = False
            .BackColor = VBA.RGB(200, 200, 200)
        End If
        
    End With

Next i
 
End Sub
 
 Function SelectedDate(Optional Target_Control As Object) As String
     
    Dim str As String
          
    If (TypeName(Target_Control)) = "TextBox" Or TypeName(Target_Control) = "Range" Then str = Target_Control.Value
    If (TypeName(Target_Control)) = "CommandButton" Or TypeName(Target_Control) = "Label" Then str = Target_Control.Caption
    
    If IsDate(str) Then
        Me.TextBox1.Value = VBA.Format(CDate(str), "D-MMM-YYYY")
        Else
        Me.TextBox1.Value = ""
    End If
      
    Me.Show
 
    If (TypeName(Target_Control)) = "TextBox" Or TypeName(Target_Control) = "Range" Then
         Target_Control.Value = Me.TextBox1.Value
    ElseIf (TypeName(Target_Control)) = "CommandButton" Or TypeName(Target_Control) = "Label" Then
         Target_Control.Caption = Me.TextBox1.Value
    Else
        SelectedDate = Me.TextBox1.Value
    End If
    
End Function

Sub Show_Selected_Date(dt As Date)
    Dim i As Integer
    Dim btn As MSForms.CommandButton
    On Error Resume Next
    Me.CmbMonth.Value = VBA.Format(dt, "MMMM")
    Me.CmbYear.Value = VBA.Format(dt, "YYYY")
            
    For i = 1 To 42
        Set btn = Me.Controls("CommandButton" & i)
        If btn.Caption = CStr(VBA.Day(dt)) Then
            
            Me.img_Star.Left = btn.Left + 3
            Me.img_Star.Top = btn.Top + 3
            Me.img_Star.Visible = True
            btn.BackColor = vbWhite
            
        End If
    Next i

End Sub

``````````````````````````````````````````````````````````````````````````````````````````````



